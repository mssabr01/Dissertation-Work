(*
 * Copyright 2018, Data61
 * Commonwealth Scientific and Industrial Research Organisation (CSIRO)
 * ABN 41 687 119 230.
 *
 * This software may be distributed and modified according to the terms of
 * the BSD 2-Clause license. Note that NO WARRANTY is provided.
 * See "LICENSE_BSD2.txt" for details.
 *
 * @TAG(DATA61_BSD)
 *)

(* /*? macros.generated_file_notice() ?*/ *)

open preamble basis /*- if me.type.control -*/ componentTheory /*- else -*/ connectorTheory /*- endif -*/

val _ = new_theory "camkesEnd";

val _ = translation_extends /*- if me.type.control -*/ "component" /*- else -*/ "connector" /*- endif -*/;

val supervisor = process_topdecs `
    fun camkes_entry u =
        let
            /*- if options.fsupport_init -*/
                val dummy = Component.pre_init ();
            /*- endif -*/

            val raw_result = Word8Array.array 1 (Word8.fromInt 0);
            val dummy = #(pre_init_interface_sync) "" raw_result;
            val result = Word8.toInt (Word8Array.sub raw_result 0) = 0;

            /*- if options.fsupport_init -*/
                val dummy = if result then (Component.post_init ()) else ();
            /*- endif -*/

            val dummy = if result then (#(post_init_interface_sync) "" raw_result) else ();
            val result = Word8.toInt (Word8Array.sub raw_result 0) = 0;

            /*- if me.type.control -*/
                val dummy = if result then (Component.run ()) else ();
            /*- else -*/
                val dummy = if result then (Connector.run ()) else ();
            /*- endif -*/
        in
            ()
        end
`;

val _ = append_prog supervisor;

val _ = export_theory ();
