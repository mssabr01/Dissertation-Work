
==================== FINAL INTERFACE ====================
2018-12-23 21:11:48.838074 UTC

interface main@main:CapDL.AST 8002
  interface hash: 26303731ebd809ba3dffbe9406d163f6
  ABI hash: f4e424cb2594d82c83adfc3fa04a31a3
  export-list hash: a5bc172604bc9e0b84a19cb1123d06cf
  orphan hash: 2fa0765cb9750fab1fa209e5294feb05
  flag hash: 6730cd243461d464b54881df51902d37
  sig of: Nothing
  used TH splices: False
  where
exports:
  CapDL.AST.CapMapping{CapDL.AST.ASIDMapping CapDL.AST.CapMapping CapDL.AST.CopyOf CapDL.AST.IRQMapping capName capParams copyParams maybeParent objRef slot target}
  CapDL.AST.CapParam{CapDL.AST.Asid CapDL.AST.Badge CapDL.AST.Cached CapDL.AST.Core CapDL.AST.FrameMapping CapDL.AST.Guard CapDL.AST.GuardSize CapDL.AST.IRQRef CapDL.AST.Masked CapDL.AST.MasterReply CapDL.AST.Reply CapDL.AST.Rights asid cached container guard guardSize rights slotIndex theBadge theCore}
  CapDL.AST.Decl{CapDL.AST.ASIDDecl CapDL.AST.CDTDecl CapDL.AST.CapDecl CapDL.AST.CapNameDecl CapDL.AST.IRQDecl CapDL.AST.ObjDecl asids children declCapName declObjRef declSlot irqs mappings nameRef parentRef theKODecl}
  CapDL.AST.FrameExtraParam{CapDL.AST.Fill fill}
  CapDL.AST.IOAPICIRQExtraParam{CapDL.AST.IOAPIC CapDL.AST.Level CapDL.AST.Pin CapDL.AST.Polarity ioapic ioapic_level pin polarity}
  CapDL.AST.KO{CapDL.AST.Obj koType objDecls params}
  CapDL.AST.KODecl{CapDL.AST.KODecl objName object}
  CapDL.AST.MSIIRQExtraParam{CapDL.AST.MSIHandle CapDL.AST.MSIPCIBus CapDL.AST.MSIPCIDev CapDL.AST.MSIPCIFun bus dev fun handle}
  CapDL.AST.Module{CapDL.AST.Module decls theArch}
  CapDL.AST.Name
  CapDL.AST.NameRef
  CapDL.AST.ObjParam{CapDL.AST.ARMIOSpace CapDL.AST.BitSize CapDL.AST.Dom CapDL.AST.DomainID CapDL.AST.FaultEP CapDL.AST.FrameExtraParam CapDL.AST.IOAPICIRQExtraParam CapDL.AST.IOPTLevel CapDL.AST.InitArguments CapDL.AST.MSIIRQExtraParam CapDL.AST.PCIDevice CapDL.AST.Paddr CapDL.AST.Ports CapDL.AST.SCExtraParam CapDL.AST.TCBExtraParam CapDL.AST.VMSize arguments armiospace bits dom domainID extraParam faulEP frameExtraParam ioapic_irq_extraParam level msi_irq_extraParam paddr pciDevice sc_extraParam theRange vmSize}
  CapDL.AST.QName
  CapDL.AST.Range{CapDL.AST.All CapDL.AST.From CapDL.AST.FromTo CapDL.AST.Only CapDL.AST.To}
  CapDL.AST.SCExtraParam{CapDL.AST.Budget CapDL.AST.Period CapDL.AST.SCData budget period scData}
  CapDL.AST.SlotRef
  CapDL.AST.TCBExtraParam{CapDL.AST.Addr CapDL.AST.Affinity CapDL.AST.Elf CapDL.AST.IP CapDL.AST.MaxPrio CapDL.AST.Prio CapDL.AST.SP addr affinity elf ip max_prio prio sp}
module dependencies: CapDL.Model
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  base-4.9.1.0:Data.Data da440c60016500822a3d4307ca5dea66
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.Typeable.Internal 0e9bdefa4325a0112d8e73b5e1e1f85d
import  -/  base-4.9.1.0:Data.Word 77f42e01d0fb6b071f1ea2176d87fa6c
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:GHC.Word 2f8cb4e909eeef2f95e1563807dd9268
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22:Prelude.Compat 26d0dbb9ddc9475bb1179736f86de98b
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
import  -/  CapDL.Model 8e26b32fabef412aa2e46767667c26cb
  exports: 194cc77771ecdac5cfada74519b29912
  Arch 26cd7f1c4f2288b82107a65f43631900
  Asid 6f3133939880369b522965111423cea0
  CapRights fee87d5c49f4692c15b6de86f85fa1c8
  KOType f43d8405aa414b65a37ef3915650820e
368267aebf78001cabeaf2d2456c0f17
  $c1V4HrbeocTB4u8mEBgEiCh :: Data.Data.Constr
4716c49d52960754cfd547794c1b8b5b
  $c1pw1JFwEEK5LN04JfejIvo :: Data.Data.Constr
478e60826e4ce79e7f78856b3e357aef
  $c4e4jCyU3MiO9O2Paz0MBo6 :: Data.Data.Constr
660c1b105658e4ee30bcdc9da5658803
  $c55Ab6GvBF5tKYKiVhZb42n :: Data.Data.Constr
e80aaf025e01dc0b96ada9b1f4546bee
  $c58yH4axDEMA2tbMMYoH0AK :: Data.Data.Constr
8966a3c2f1e042fc3bb8a56ae1c1d950
  $c6B1UDuF3PEZ0HrCVJNPr5X :: Data.Data.Constr
0a35b5b5d3ca2677a1ac5d8cddfadd7d
  $c6tHjBsfbIjtJ7Lope4yP1m :: Data.Data.Constr
6a9e739d69785008c5e3287049fcf5c5
  $c79YE5L5lAUB0inF72oCUyr :: Data.Data.Constr
f0635f2c7c2139468d400a003232e690
  $c7KT4OHp05i20aXh6sPcwfu :: Data.Data.Constr
a472855b3e4efef215f99c841c15ee90
  $c7sAFaOAEpPhJztdGjhcxkX :: Data.Data.Constr
848cd42edc9c9175a1105b6a80f2df00
  $c8ELxNcIPrHL2nIgJKutog2 :: Data.Data.Constr
bfcc34535b40564afa49814be225b1ce
  $c8NKkYZNA3it9GufpuyxLoT :: Data.Data.Constr
edd728d86e413a341b6d30fb591ea5f9
  $c8RFBy5i1RHuIZoqT1hIDX9 :: Data.Data.Constr
c5b0136ba62accd635bc75b8460acf4b
  $c8ZZx0muvUQWBkVfPNqmu12 :: Data.Data.Constr
70ae3db366b82a0e0d1712b28704d344
  $c8amcmXzicUHLwitcuS4RM3 :: Data.Data.Constr
5d602b26c5ab2bd87443fd3f08c373ff
  $c8wsIKq5zDcc4SZM0DHAhI9 :: Data.Data.Constr
c6f8f0c494859b55302c2a0f6fd4d30a
  $cAqKXpDkOvFI1JtWuFmDkNh :: Data.Data.Constr
5b65a8c5fd80d4fe27d8384b952115c5
  $cBeEVwu5GubbJaivH4YJXGt :: Data.Data.Constr
e02224743afdc41a41c8d95594943eef
  $cBgli6TmpB2d957DAJZN5vW :: Data.Data.Constr
e33eed1c766c8ce9eaab1c62f717fb5f
  $cBnVedawzg2LEa3VfOmmMIM :: Data.Data.Constr
6e2ec325478e8d653cba13790dae18e5
  $cBq0p5P7JpAL1BfOm2vfCnw :: Data.Data.Constr
6ec926d2e5d48f5d9de1c1a2fb006ce6
  $cDsOFhUK1aoL60K2yvlYXw6 :: Data.Data.Constr
3f098badf48177673e0de3846863b31e
  $cEBQY8iqW9U9FTM4DUQXH1Q :: Data.Data.Constr
25237ade07396d013da253c83d7e0455
  $cECpPs3I2VU69WJn5fipWdP :: Data.Data.Constr
d0ac413e682abc2061ebb4d35df86505
  $cEG2gLurFIHf4I8CUPDHHnv :: Data.Data.Constr
f10c7f64edda9bfd5c10d9e497aad36d
  $cESYyyh3CCGCBXiT4lXm8iE :: Data.Data.Constr
087747feb26f0daff3666015faf78d1c
  $cEiBgmchEkaX8HDOXRYp5p6 :: Data.Data.Constr
bc1e876a5508819437f0007c8a7f35d6
  $cEm0ZPTKbqWhCAwYbRoT3CW :: Data.Data.Constr
c82c7e20c4a703c45a0fb4358a0d47bb
  $cF6L5sNexkNW3M6VTQUa5N0 :: Data.Data.Constr
f99874c2702d7dac5dbed100e37e0f32
  $cF6yy3yuVpcx9AZkfu6ZfgB :: Data.Data.Constr
22d13acde9bdcb8683f8aa5c642ffea5
  $cF7nIvMhVEvcJqeDE6UJtuG :: Data.Data.Constr
c515d1af8842ad8090207c61145a959d
  $cFhcQOkfMcw7BRQTWXdyvhW :: Data.Data.Constr
8d8e0a40f89c851e5fcf59ef1580f918
  $cGFy7wJHHzBtHKjGMXbFh3U :: Data.Data.Constr
e5f75528e392968a2e806eb60b579988
  $cGQFXb5xVHUeHUUTKOv5cNk :: Data.Data.Constr
cfbef714d741947b02d8a25b13ed0527
  $cGnhHXsqvVHCHywDJmvXTAf :: Data.Data.Constr
6bb5ff4d59c3c2cc3b90b59fe2c91f6f
  $cGzeogQTivwVKA1t2of96dd :: Data.Data.Constr
4ccca677fcceb819936ee5528b4c3017
  $cH8FhFlcKgtDKGAVtYs6vb :: Data.Data.Constr
c77be5a66e1d7a7c65c28d3d34c3ad6e
  $cHDJlqyJeNTqEMly4Mbczqx :: Data.Data.Constr
92e1fb76abda5cf0d0807bd5c39759bd
  $cHM56tUKrf2HAi8qJMyt2uw :: Data.Data.Constr
e2da07617ff202087f565bc351bdaaec
  $cIHe8wQjMVsYA7PRJ4WfR1T :: Data.Data.Constr
7e7b05e27ee57be74848a55d6b39d382
  $cIJPh4ToglP16Dmya2lGIWd :: Data.Data.Constr
d104ac0119e35d74d38cfd670543f09f
  $cINvJIiCr9XX5K7znYDs3w3 :: Data.Data.Constr
b8bbe0adf64b25f23654d2ef107a5f4b
  $cIlUvcHhYIjqFFntSwxqn57 :: Data.Data.Constr
bda0fbe3507377eaaf50702f8edd9171
  $cJ1jI0EbQUwBLnVwM7CjHup :: Data.Data.Constr
e3871f6497bfe8ef47a6188a56ea9c85
  $cJQvh2zSg1334BedQjRtPQb :: Data.Data.Constr
b6ca1331c30ccb1c920e875d695f06ba
  $cK4E8jQzen1i7ZqFHMZWlWq :: Data.Data.Constr
ad5a6bd912a5392912f15dde141f1ec8
  $cKiVcMywFpel3IAqMCGW7gg :: Data.Data.Constr
2fc8019d6e897d033b4e19511c9b0c11
  $cL50mkjUnrRzAG96Q01Bzcb :: Data.Data.Constr
5a3fc8156dbccb858124872fd274951e
  $cLS4KZ9a43hU8mrejMOXNoy :: Data.Data.Constr
cb4f58abaf40622e9481861fa2e6aa61
  $cU78cAIQ3DeHYM8Qt9bZKM :: Data.Data.Constr
e4be0c7ef92fb20291e456433efc8eb0
  $calFI0No0tc3DVfRHZ6Wfb :: Data.Data.Constr
a9daf6331a80b0d39eedec4f1bcfe516
  $cua238zf8II76f2DjE0Zkp :: Data.Data.Constr
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam :: Data.Data.Data CapDL.AST.CapParam
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.CapParam
                  CapDL.AST.$fDataCapParam_$cp1Data
                  CapDL.AST.$fDataCapParam_$cgfoldl
                  CapDL.AST.$fDataCapParam_$cgunfold
                  CapDL.AST.$fDataCapParam_$ctoConstr
                  CapDL.AST.$fDataCapParam_$cdataTypeOf
                  CapDL.AST.$fDataCapParam_$cdataCast1
                  CapDL.AST.$fDataCapParam_$cdataCast2
                  CapDL.AST.$fDataCapParam_$cgmapT
                  CapDL.AST.$fDataCapParam_$cgmapQl
                  CapDL.AST.$fDataCapParam_$cgmapQr
                  CapDL.AST.$fDataCapParam_$cgmapQ
                  CapDL.AST.$fDataCapParam_$cgmapQi
                  CapDL.AST.$fDataCapParam_$cgmapM
                  CapDL.AST.$fDataCapParam_$cgmapMp
                  CapDL.AST.$fDataCapParam_$cgmapMo -}
5708616e74ec71decdf0cb716f1da8b4
  $fDataCapParam1 :: g -> Data.Data.Qi u g
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ @ u @ g (ds1 :: g)[OneShot] ->
                 Data.Data.Qi
                   @ *
                   @ u
                   @ g
                   CapDL.AST.$fDataCapParam2
                   (GHC.Base.Nothing @ u)) -}
d32756687bb49d80f43f6f41dd2aab2d
  $fDataCapParam10 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cIHe8wQjMVsYA7PRJ4WfR1T
                   CapDL.AST.$fDataCapParam11) -}
4c98c15e14209054194db14c6aac313e
  $fDataCapParam11 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c7sAFaOAEpPhJztdGjhcxkX
                   CapDL.AST.$fDataCapParam12) -}
05c1912f0990d6ac45e1fd72abb955ea
  $fDataCapParam12 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cBgli6TmpB2d957DAJZN5vW
                   CapDL.AST.$fDataCapParam13) -}
cf14c9b623b176f466bdcdd77e60ed66
  $fDataCapParam13 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cDsOFhUK1aoL60K2yvlYXw6
                   CapDL.AST.$fDataCapParam14) -}
c04cab100fb043c0d4f9e58521147d0f
  $fDataCapParam14 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c8wsIKq5zDcc4SZM0DHAhI9
                   CapDL.AST.$fDataCapParam15) -}
a44000d92bf290ddf0917783ba7260dc
  $fDataCapParam15 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c8ELxNcIPrHL2nIgJKutog2
                   CapDL.AST.$fDataCapParam16) -}
59519fd027b57bb2a5c648521cfac888
  $fDataCapParam16 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cEBQY8iqW9U9FTM4DUQXH1Q
                   CapDL.AST.$fDataCapParam17) -}
415eeb3bc630fa6807bc4e3e6edec612
  $fDataCapParam17 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cEG2gLurFIHf4I8CUPDHHnv
                   CapDL.AST.$fDataCapParam18) -}
5deef6c99b98673b796c538b39e63a8f
  $fDataCapParam18 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cINvJIiCr9XX5K7znYDs3w3
                   CapDL.AST.$fDataCapParam19) -}
6d0e2f049b85e0f118b8ab5f9ad40fbc
  $fDataCapParam19 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c8amcmXzicUHLwitcuS4RM3
                   CapDL.AST.$fDataCapParam20) -}
dd581bf7307a3f6c2557eb1376f00709
  $fDataCapParam2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
df9b01f29e729c4b829baf767bbd6bc6
  $fDataCapParam20 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cBq0p5P7JpAL1BfOm2vfCnw
                   (GHC.Types.[] @ Data.Data.Constr)) -}
6b5ebee64e7518a1a7d2015c5febf960
  $fDataCapParam21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CapParam"#) -}
7f6ab9e0560d8f672fe0bd179403c1bf
  $fDataCapParam22 :: Data.Data.Data [CapDL.AST.Range]
  {- Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataCapParam_$s$fData[]1 -}
87505e272381f0eb153a7347f8913685
  $fDataCapParam23 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c [CapDL.AST.Range])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c [CapDL.AST.Range])) -}
e22436c6285b166a06b0263d52e27bdd
  $fDataCapParam24 :: [CapDL.AST.Range] -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: [CapDL.AST.Range]) -> Data.Data.listDataType) -}
8f0fa128347b70a566b73ffa4ef8de51
  $fDataCapParam25 :: [CapDL.AST.Range] -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: [CapDL.AST.Range]) ->
                 case ds1 of wild {
                   [] -> Data.Data.nilConstr : ds2 ds3 -> Data.Data.consConstr }) -}
551dcdc38fc7278c8b5f4eafcc7da5c4
  $fDataCapParam26 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c ([GHC.Types.Char], [CapDL.AST.Range]))
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d. Data.Data.Data d => c (t d)) ->
                 GHC.Base.Nothing @ (c ([GHC.Types.Char], [CapDL.AST.Range]))) -}
f12027e7fce9a3a4449a922bc29e8a95
  $fDataCapParam27 ::
    ([GHC.Types.Char], [CapDL.AST.Range]) -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: ([GHC.Types.Char], [CapDL.AST.Range])) ->
                 Data.Data.tuple2DataType) -}
1e3017cbcc3b6f4a2552b7d093a1907d
  $fDataCapParam28 ::
    ([GHC.Types.Char], [CapDL.AST.Range]) -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: ([GHC.Types.Char], [CapDL.AST.Range])) ->
                 case ds1 of wild { (,) ds2 ds3 -> Data.Data.tuple2Constr }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam29 ::
    GHC.Prim.Proxy# CapDL.AST.CapParam
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (wild :: GHC.Prim.Proxy# CapDL.AST.CapParam) ->
                 CapDL.AST.$fDataCapParam30) -}
1c8807c453133270f74f668e1d8af21f
  $fDataCapParam3 :: g -> [u] -> [u]
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ u @ g (ds1 :: g)[OneShot] (eta :: [u]) -> eta) -}
da8e0727e8158989f3f7c1632f78b500
  $fDataCapParam30 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case Data.Typeable.Internal.typeRepFingerprints
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.TypeRep) of kt_fps { DEFAULT ->
                 case GHC.Fingerprint.fingerprintFingerprints
                        (GHC.Types.:
                           @ GHC.Fingerprint.Type.Fingerprint
                           CapDL.AST.$fDataCapParam31
                           kt_fps) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                 Data.Typeable.Internal.TypeRep
                   dt1
                   dt2
                   CapDL.AST.$tcCapParam
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep) } }) -}
867858e6f543d1094b99d1a92d60c07a
  $fDataCapParam31 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   5104113659030265027##
                   2413528786390003240##) -}
dfee17302b76921104890a19dd9dc03a
  $fDataCapParam4 :: g -> r -> r
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ r @ g (ds1 :: g)[OneShot] (eta :: r) -> eta) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam5 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.CapParam
    -> Data.Data.CONST r CapDL.AST.CapParam
  {- Arity: 4, Strictness: <L,C(C1(U))><L,1*U><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r -> r' -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (eta :: CapDL.AST.CapParam) ->
                 CapDL.AST.$fDataCapParam_$cgfoldl
                   @ (Data.Data.CONST r)
                   (\ @ d
                      @ b
                      ($dData1 :: Data.Data.Data d)
                      (c :: Data.Data.CONST r (d -> b))[OneShot]
                      (x :: d)[OneShot] ->
                    ds1
                      c `cast` (Data.Data.N:CONST[0] <*>_N <r>_R <d -> b>_P)
                      (ds3 @ d $dData1 x))
                     `cast`
                   (forall (d :: <*>_N) (b :: <*>_N).
                    <Data.Data.Data d>_R
                    ->_R <Data.Data.CONST r (d -> b)>_R
                    ->_R <d>_R
                    ->_R Sym (Data.Data.N:CONST[0] <*>_N <r>_R <b>_P))
                   (\ @ g1 (ds4 :: g1)[OneShot] -> ds2)
                     `cast`
                   (forall (g1 :: <*>_N).
                    <g1>_R ->_R Sym (Data.Data.N:CONST[0] <*>_N <r>_R <g1>_P))
                   eta) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam6 ::
    (forall b. Data.Data.Data b => b -> b)
    -> CapDL.AST.CapParam -> Data.Data.ID CapDL.AST.CapParam
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: (\ (ds1 :: forall b. Data.Data.Data b => b -> b)
                   (x0 :: CapDL.AST.CapParam) ->
                 CapDL.AST.$fDataCapParam_$cgfoldl
                   @ Data.Data.ID
                   (\ @ d
                      @ b
                      ($dData1 :: Data.Data.Data d)
                      (ds2 :: Data.Data.ID (d -> b))[OneShot]
                      (x :: d)[OneShot] ->
                    ds2 `cast` (Data.Data.N:ID[0] <d -> b>_R) (ds1 @ d $dData1 x))
                     `cast`
                   (forall (d :: <*>_N) (b :: <*>_N).
                    <Data.Data.Data d>_R
                    ->_R <Data.Data.ID (d -> b)>_R
                    ->_R <d>_R
                    ->_R Sym (Data.Data.N:ID[0] <b>_R))
                   CapDL.AST.$fDataCapParam7
                     `cast`
                   (forall (g :: <*>_N). <g>_R ->_R Sym (Data.Data.N:ID[0] <g>_R))
                   x0) -}
e793348b283e1af51e5b73c57b5c88cc
  $fDataCapParam7 :: g -> g
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True) (\ @ g (tpl :: g) -> tpl) -}
83d86ac7aa9af709e6d235e36568af0b
  $fDataCapParam8 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep CapDL.AST.$fDataCapParam9) -}
43196bd33ac7553a7d408460531b653c
  $fDataCapParam9 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cJ1jI0EbQUwBLnVwM7CjHup
                   CapDL.AST.$fDataCapParam10) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c CapDL.AST.CapParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d. Data.Data.Data d => c (t d)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.CapParam)) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c CapDL.AST.CapParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.CapParam)) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cdataTypeOf ::
    CapDL.AST.CapParam -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: CapDL.AST.CapParam) ->
                 CapDL.AST.$tFe3qIZkkSewJ4jvZsVpE7g) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> CapDL.AST.CapParam
    -> c CapDL.AST.CapParam
  {- Arity: 3, Strictness: <L,C(C1(C1(U)))><L,1*C1(U)><S,1*U> -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.CapParam -> m CapDL.AST.CapParam
  {- Arity: 3,
     Strictness: <L,U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   (ds1 :: forall d. Data.Data.Data d => d -> m d)
                   (eta :: CapDL.AST.CapParam) ->
                 CapDL.AST.$fDataCapParam_$cgfoldl
                   @ m
                   (\ @ d
                      @ b
                      ($dData1 :: Data.Data.Data d)
                      (c :: m (d -> b))[OneShot]
                      (x :: d)[OneShot] ->
                    let {
                      lvl396 :: m d = ds1 @ d $dData1 x
                    } in
                    GHC.Base.>>=
                      @ m
                      $dMonad
                      @ (d -> b)
                      @ b
                      c
                      (\ (c' :: d -> b) ->
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ d
                         @ b
                         lvl396
                         (\ (x' :: d) -> GHC.Base.return @ m $dMonad @ b (c' x'))))
                   (\ @ g -> GHC.Base.return @ m $dMonad @ g)
                   eta) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.CapParam -> m CapDL.AST.CapParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonadPlus :: GHC.Base.MonadPlus m)
                   (ds1 :: forall d. Data.Data.Data d => d -> m d)
                   (eta1 :: CapDL.AST.CapParam) ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl396 :: m CapDL.AST.CapParam
                   = GHC.Base.mzero @ m $dMonadPlus @ CapDL.AST.CapParam
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (CapDL.AST.CapParam, GHC.Types.Bool)
                   @ CapDL.AST.CapParam
                   (CapDL.AST.$fDataCapParam_$cgfoldl
                      @ (Data.Data.Mp m)
                      (\ @ d
                         @ b
                         ($dData1 :: Data.Data.Data d)
                         (ds2 :: Data.Data.Mp m (d -> b))[OneShot]
                         (y :: d)[OneShot] ->
                       let {
                         lvl397 :: m d = ds1 @ d $dData1 y
                       } in
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ (d -> b, GHC.Types.Bool)
                         @ (b, GHC.Types.Bool)
                         ds2 `cast` (Data.Data.N:Mp[0] <m>_R <d -> b>_N)
                         (\ (ds3 :: (d -> b, GHC.Types.Bool)) ->
                          case ds3 of wild { (,) h b1 ->
                          case b1 of wild1 {
                            GHC.Types.False
                            -> GHC.Base.mplus
                                 @ m
                                 $dMonadPlus
                                 @ (b, GHC.Types.Bool)
                                 (GHC.Base.>>=
                                    @ m
                                    $dMonad
                                    @ d
                                    @ (b, GHC.Types.Bool)
                                    lvl397
                                    (\ (y' :: d) ->
                                     GHC.Base.return
                                       @ m
                                       $dMonad
                                       @ (b, GHC.Types.Bool)
                                       (h y', GHC.Types.True)))
                                 (GHC.Base.return
                                    @ m
                                    $dMonad
                                    @ (b, GHC.Types.Bool)
                                    (h y, GHC.Types.False))
                            GHC.Types.True
                            -> GHC.Base.return
                                 @ m
                                 $dMonad
                                 @ (b, GHC.Types.Bool)
                                 (h y, GHC.Types.True) } }))
                        `cast`
                      (forall (d :: <*>_N) (b :: <*>_N).
                       <Data.Data.Data d>_R
                       ->_R <Data.Data.Mp m (d -> b)>_R
                       ->_R <d>_R
                       ->_R Sym (Data.Data.N:Mp[0] <m>_R <b>_N))
                      (\ @ g (g1 :: g)[OneShot] ->
                       GHC.Base.return
                         @ m
                         $dMonad
                         @ (g, GHC.Types.Bool)
                         (g1, GHC.Types.False))
                        `cast`
                      (forall (g :: <*>_N).
                       <g>_R ->_R Sym (Data.Data.N:Mp[0] <m>_R <g>_N))
                      eta1)
                     `cast`
                   (Data.Data.N:Mp[0] <m>_R <CapDL.AST.CapParam>_N)
                   (\ (ds2 :: (CapDL.AST.CapParam, GHC.Types.Bool)) ->
                    case ds2 of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl396
                      GHC.Types.True
                      -> GHC.Base.return @ m $dMonad @ CapDL.AST.CapParam x' } })) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.CapParam -> m CapDL.AST.CapParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonadPlus :: GHC.Base.MonadPlus m)
                   (ds1 :: forall d. Data.Data.Data d => d -> m d)
                   (eta1 :: CapDL.AST.CapParam) ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl396 :: m CapDL.AST.CapParam
                   = GHC.Base.mzero @ m $dMonadPlus @ CapDL.AST.CapParam
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (CapDL.AST.CapParam, GHC.Types.Bool)
                   @ CapDL.AST.CapParam
                   (CapDL.AST.$fDataCapParam_$cgfoldl
                      @ (Data.Data.Mp m)
                      (\ @ d
                         @ b
                         ($dData1 :: Data.Data.Data d)
                         (ds2 :: Data.Data.Mp m (d -> b))[OneShot]
                         (y :: d)[OneShot] ->
                       let {
                         lvl397 :: m d = ds1 @ d $dData1 y
                       } in
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ (d -> b, GHC.Types.Bool)
                         @ (b, GHC.Types.Bool)
                         ds2 `cast` (Data.Data.N:Mp[0] <m>_R <d -> b>_N)
                         (\ (ds3 :: (d -> b, GHC.Types.Bool)) ->
                          case ds3 of wild { (,) h b1 ->
                          GHC.Base.mplus
                            @ m
                            $dMonadPlus
                            @ (b, GHC.Types.Bool)
                            (GHC.Base.>>=
                               @ m
                               $dMonad
                               @ d
                               @ (b, GHC.Types.Bool)
                               lvl397
                               (\ (y' :: d) ->
                                GHC.Base.return
                                  @ m
                                  $dMonad
                                  @ (b, GHC.Types.Bool)
                                  (h y', GHC.Types.True)))
                            (GHC.Base.return @ m $dMonad @ (b, GHC.Types.Bool) (h y, b1)) }))
                        `cast`
                      (forall (d :: <*>_N) (b :: <*>_N).
                       <Data.Data.Data d>_R
                       ->_R <Data.Data.Mp m (d -> b)>_R
                       ->_R <d>_R
                       ->_R Sym (Data.Data.N:Mp[0] <m>_R <b>_N))
                      (\ @ g (g1 :: g)[OneShot] ->
                       GHC.Base.return
                         @ m
                         $dMonad
                         @ (g, GHC.Types.Bool)
                         (g1, GHC.Types.False))
                        `cast`
                      (forall (g :: <*>_N).
                       <g>_R ->_R Sym (Data.Data.N:Mp[0] <m>_R <g>_N))
                      eta1)
                     `cast`
                   (Data.Data.N:Mp[0] <m>_R <CapDL.AST.CapParam>_N)
                   (\ (ds2 :: (CapDL.AST.CapParam, GHC.Types.Bool)) ->
                    case ds2 of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl396
                      GHC.Types.True
                      -> GHC.Base.return @ m $dMonad @ CapDL.AST.CapParam x' } })) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u) -> CapDL.AST.CapParam -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ u
                   (ds1 :: forall d. Data.Data.Data d => d -> u)
                   (x0 :: CapDL.AST.CapParam) ->
                 (CapDL.AST.$fDataCapParam_$cgfoldl
                    @ (Data.Data.Qr [u])
                    (\ @ d
                       @ b
                       ($dData1 :: Data.Data.Data d)
                       (ds2 :: Data.Data.Qr [u] (d -> b))[OneShot]
                       (x :: d)[OneShot]
                       (r1 :: [u]) ->
                     ds2 `cast` (Data.Data.N:Qr[0] <*>_N <[u]>_R <d -> b>_P)
                       (GHC.Types.: @ u (ds1 @ d $dData1 x) r1))
                      `cast`
                    (forall (d :: <*>_N) (b :: <*>_N).
                     <Data.Data.Data d>_R
                     ->_R <Data.Data.Qr [u] (d -> b)>_R
                     ->_R <d>_R
                     ->_R Sym (Data.Data.N:Qr[0] <*>_N <[u]>_R <b>_P))
                    (CapDL.AST.$fDataCapParam3 @ u)
                      `cast`
                    (forall (g :: <*>_N).
                     <g>_R ->_R Sym (Data.Data.N:Qr[0] <*>_N <[u]>_R <g>_P))
                    x0)
                   `cast`
                 (Data.Data.N:Qr[0] <*>_N <[u]>_R <CapDL.AST.CapParam>_P)
                   (GHC.Types.[] @ u)) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.CapParam
    -> u
  {- Arity: 3, Strictness: <L,U(U)><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ u
                   (ds1 :: GHC.Types.Int)
                   (ds2 :: forall d. Data.Data.Data d => d -> u)
                   (x :: CapDL.AST.CapParam) ->
                 case CapDL.AST.$fDataCapParam_$cgfoldl
                        @ (Data.Data.Qi u)
                        (\ @ d
                           @ b
                           ($dData1 :: Data.Data.Data d)
                           (ds3 :: Data.Data.Qi u (d -> b))[OneShot]
                           (a1 :: d)[OneShot] ->
                         case ds3 of wild { Data.Data.Qi i' q ->
                         Data.Data.Qi
                           @ *
                           @ u
                           @ b
                           (case i' of wild1 { GHC.Types.I# x1 ->
                            GHC.Types.I# (GHC.Prim.+# x1 1#) })
                           (case ds1 of wild1 { GHC.Types.I# x1 ->
                            case i' of wild2 { GHC.Types.I# y ->
                            case GHC.Prim.tagToEnum#
                                   @ GHC.Types.Bool
                                   (GHC.Prim.==# x1 y) of wild3 {
                              GHC.Types.False -> q
                              GHC.Types.True -> GHC.Base.Just @ u (ds2 @ d $dData1 a1) } } }) })
                        (CapDL.AST.$fDataCapParam1 @ u)
                        x of wild { Data.Data.Qi ds3 q ->
                 Data.Maybe.fromJust @ u q }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.CapParam
    -> r
  {- Arity: 4, Strictness: <L,C(C1(U))><L,1*U><L,C(C1(U))><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataCapParam5
                  `cast`
                (forall (r :: <*>_N) (r' :: <*>_N).
                 <r -> r' -> r>_R
                 ->_R <r>_R
                 ->_R <forall d. Data.Data.Data d => d -> r'>_R
                 ->_R <CapDL.AST.CapParam>_R
                 ->_R Data.Data.N:CONST[0] <*>_N <r>_R <CapDL.AST.CapParam>_P) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.CapParam
    -> r
  {- Arity: 4, Strictness: <L,C(C1(U))><L,U><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r' -> r -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (x0 :: CapDL.AST.CapParam) ->
                 (CapDL.AST.$fDataCapParam_$cgfoldl
                    @ (Data.Data.Qr r)
                    (\ @ d
                       @ b
                       ($dData1 :: Data.Data.Data d)
                       (ds4 :: Data.Data.Qr r (d -> b))[OneShot]
                       (x :: d)[OneShot]
                       (r1 :: r) ->
                     ds4 `cast` (Data.Data.N:Qr[0] <*>_N <r>_R <d -> b>_P)
                       (ds1 (ds3 @ d $dData1 x) r1))
                      `cast`
                    (forall (d :: <*>_N) (b :: <*>_N).
                     <Data.Data.Data d>_R
                     ->_R <Data.Data.Qr r (d -> b)>_R
                     ->_R <d>_R
                     ->_R Sym (Data.Data.N:Qr[0] <*>_N <r>_R <b>_P))
                    (CapDL.AST.$fDataCapParam4 @ r)
                      `cast`
                    (forall (g :: <*>_N).
                     <g>_R ->_R Sym (Data.Data.N:Qr[0] <*>_N <r>_R <g>_P))
                    x0)
                   `cast`
                 (Data.Data.N:Qr[0] <*>_N <r>_R <CapDL.AST.CapParam>_P)
                   ds2) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> CapDL.AST.CapParam -> CapDL.AST.CapParam
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataCapParam6
                  `cast`
                (<forall b. Data.Data.Data b => b -> b>_R
                 ->_R <CapDL.AST.CapParam>_R
                 ->_R Data.Data.N:ID[0] <CapDL.AST.CapParam>_R) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> Data.Data.Constr -> c CapDL.AST.CapParam
  {- Arity: 3,
     Strictness: <L,C(C1(U))><L,1*C1(U)><S(SLLLL),1*U(1*U,A,A,A,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (w2 :: Data.Data.Constr) ->
                 case w2 of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 CapDL.AST.$w$cgunfold @ c w w1 ww1 ww5 }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$cp1Data ::
    Data.Typeable.Internal.Typeable CapDL.AST.CapParam
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataCapParam29
                  `cast`
                (Sym (Data.Typeable.Internal.N:Typeable[0]
                          <*>_N <CapDL.AST.CapParam>_N)) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fDataCapParam_$ctoConstr :: CapDL.AST.CapParam -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds1 :: CapDL.AST.CapParam) ->
                 case ds1 of wild {
                   CapDL.AST.Rights ds2 -> CapDL.AST.$cJ1jI0EbQUwBLnVwM7CjHup
                   CapDL.AST.Masked ds2 -> CapDL.AST.$cIHe8wQjMVsYA7PRJ4WfR1T
                   CapDL.AST.Guard ds2 -> CapDL.AST.$c7sAFaOAEpPhJztdGjhcxkX
                   CapDL.AST.GuardSize ds2 -> CapDL.AST.$cBgli6TmpB2d957DAJZN5vW
                   CapDL.AST.IRQRef -> CapDL.AST.$cDsOFhUK1aoL60K2yvlYXw6
                   CapDL.AST.Badge ds2 -> CapDL.AST.$c8wsIKq5zDcc4SZM0DHAhI9
                   CapDL.AST.Core ds2 -> CapDL.AST.$c8ELxNcIPrHL2nIgJKutog2
                   CapDL.AST.Reply -> CapDL.AST.$cEBQY8iqW9U9FTM4DUQXH1Q
                   CapDL.AST.MasterReply -> CapDL.AST.$cEG2gLurFIHf4I8CUPDHHnv
                   CapDL.AST.Asid ds2 -> CapDL.AST.$cINvJIiCr9XX5K7znYDs3w3
                   CapDL.AST.Cached ds2 -> CapDL.AST.$c8amcmXzicUHLwitcuS4RM3
                   CapDL.AST.FrameMapping ds2 ds3
                   -> CapDL.AST.$cBq0p5P7JpAL1BfOm2vfCnw }) -}
d9621311c09185bb1fd1c8bba9f4dd01
  $fDataCapParam_$s$fData(,) ::
    Data.Data.Data (GHC.Types.Word, GHC.Types.Word)
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Word, GHC.Types.Word)
                  (Data.Data.$fData(,)_$cp1Data
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cgfoldl
                  (Data.Data.$fData(,)_$cgunfold
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$ctoConstr
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cdataTypeOf
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cdataCast1
                  (Data.Data.$fData(,)_$cdataCast2
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapT
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQl
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQr
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQ
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQi
                  (Data.Data.$fData(,)_$cgmapM
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  (Data.Data.$fData(,)_$cgmapMp
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  (Data.Data.$fData(,)_$cgmapMo
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord) -}
cfdd791f7e92eb6fea5e6aa9f00afa09
  $fDataCapParam_$s$fData(,)1 ::
    Data.Data.Data ([GHC.Types.Char], [CapDL.AST.Range])
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ([GHC.Types.Char], [CapDL.AST.Range])
                  (Data.Data.$fData(,)_$cp1Data
                     @ [GHC.Types.Char]
                     @ [CapDL.AST.Range]
                     Data.Data.$fData[]_$s$fData[]
                     CapDL.AST.$fDataCapParam22)
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cgfoldl1
                  (Data.Data.$fData(,)_$cgunfold
                     @ [GHC.Types.Char]
                     @ [CapDL.AST.Range]
                     Data.Data.$fData[]_$s$fData[]
                     CapDL.AST.$fDataCapParam22)
                  CapDL.AST.$fDataCapParam28
                  CapDL.AST.$fDataCapParam27
                  CapDL.AST.$fDataCapParam26
                  (Data.Data.$fData(,)_$cdataCast2
                     @ [GHC.Types.Char]
                     @ [CapDL.AST.Range]
                     Data.Data.$fData[]_$s$fData[]
                     CapDL.AST.$fDataCapParam22)
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapT1
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQl1
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQr1
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQ1
                  CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQi1
                  (Data.Data.$fData(,)_$cgmapM
                     @ [GHC.Types.Char]
                     @ [CapDL.AST.Range]
                     Data.Data.$fData[]_$s$fData[]
                     CapDL.AST.$fDataCapParam22)
                  (Data.Data.$fData(,)_$cgmapMp
                     @ [GHC.Types.Char]
                     @ [CapDL.AST.Range]
                     Data.Data.$fData[]_$s$fData[]
                     CapDL.AST.$fDataCapParam22)
                  (Data.Data.$fData(,)_$cgmapMo
                     @ [GHC.Types.Char]
                     @ [CapDL.AST.Range]
                     Data.Data.$fData[]_$s$fData[]
                     CapDL.AST.$fDataCapParam22) -}
d487bbd55ba5ecb15a7d516dc076cea6
  $fDataCapParam_$s$fData(,)_$cdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c (GHC.Types.Word, GHC.Types.Word))
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d. Data.Data.Data d => c (t d)) ->
                 GHC.Base.Nothing @ (c (GHC.Types.Word, GHC.Types.Word))) -}
8b696cb44190e20b7357b32ed79b64c9
  $fDataCapParam_$s$fData(,)_$cdataTypeOf ::
    (GHC.Types.Word, GHC.Types.Word) -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: (GHC.Types.Word, GHC.Types.Word)) ->
                 Data.Data.tuple2DataType) -}
fbf9ad51b2db70efd9125f39de6f0284
  $fDataCapParam_$s$fData(,)_$cgfoldl ::
    (forall d b1. Data.Data.Data d => c (d -> b1) -> d -> c b1)
    -> (forall g. g -> c g)
    -> (GHC.Types.Word, GHC.Types.Word)
    -> c (GHC.Types.Word, GHC.Types.Word)
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   (f :: forall d b1. Data.Data.Data d => c (d -> b1) -> d -> c b1)
                   (z :: forall g. g -> c g)
                   (ds1 :: (GHC.Types.Word, GHC.Types.Word)) ->
                 case ds1 of wild { (,) a1 b1 ->
                 f @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Data.$fDataWord
                   (f @ GHC.Types.Word
                      @ (GHC.Types.Word -> (GHC.Types.Word, GHC.Types.Word))
                      Data.Data.$fDataWord
                      (z @ (GHC.Types.Word
                            -> GHC.Types.Word -> (GHC.Types.Word, GHC.Types.Word))
                         (GHC.Tuple.(,) @ GHC.Types.Word @ GHC.Types.Word))
                      a1)
                   b1 }) -}
5adfb114f590483c86dd8159f0f5edfe
  $fDataCapParam_$s$fData(,)_$cgfoldl1 ::
    (forall d b1. Data.Data.Data d => c (d -> b1) -> d -> c b1)
    -> (forall g. g -> c g)
    -> ([GHC.Types.Char], [CapDL.AST.Range])
    -> c ([GHC.Types.Char], [CapDL.AST.Range])
  {- Arity: 3,
     Strictness: <C(C(C(S))),C(C1(C1(U)))><L,1*C1(U)><S,1*U(U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   (f :: forall d b1. Data.Data.Data d => c (d -> b1) -> d -> c b1)
                   (z :: forall g. g -> c g)
                   (ds1 :: ([GHC.Types.Char], [CapDL.AST.Range])) ->
                 case ds1 of wild { (,) a1 b1 ->
                 f @ [CapDL.AST.Range]
                   @ ([GHC.Types.Char], [CapDL.AST.Range])
                   CapDL.AST.$fDataCapParam22
                   (f @ [GHC.Types.Char]
                      @ ([CapDL.AST.Range] -> ([GHC.Types.Char], [CapDL.AST.Range]))
                      Data.Data.$fData[]_$s$fData[]
                      (z @ ([GHC.Types.Char]
                            -> [CapDL.AST.Range] -> ([GHC.Types.Char], [CapDL.AST.Range]))
                         (GHC.Tuple.(,) @ [GHC.Types.Char] @ [CapDL.AST.Range]))
                      a1)
                   b1 }) -}
80ec0247aac5651f4987c450bf0bcfcc
  $fDataCapParam_$s$fData(,)_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> (GHC.Types.Word, GHC.Types.Word) -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U)>m2,
     Unfolding: InlineRule (2, True, False)
                (\ @ u
                   (ds1 :: forall d. Data.Data.Data d => d -> u)
                   (x0 :: (GHC.Types.Word, GHC.Types.Word)) ->
                 case x0 of wild { (,) a1 b1 ->
                 GHC.Types.:
                   @ u
                   (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   (GHC.Types.:
                      @ u
                      (ds1 @ GHC.Types.Word Data.Data.$fDataWord b1)
                      (GHC.Types.[] @ u)) }) -}
6b3956c4fde73cfc55e85095c4fd5754
  $fDataCapParam_$s$fData(,)_$cgmapQ1 ::
    (forall d. Data.Data.Data d => d -> u)
    -> ([GHC.Types.Char], [CapDL.AST.Range]) -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U)>m2,
     Unfolding: InlineRule (2, True, False)
                (\ @ u
                   (ds1 :: forall d. Data.Data.Data d => d -> u)
                   (x0 :: ([GHC.Types.Char], [CapDL.AST.Range])) ->
                 case x0 of wild { (,) a1 b1 ->
                 GHC.Types.:
                   @ u
                   (ds1 @ [GHC.Types.Char] Data.Data.$fData[]_$s$fData[] a1)
                   (GHC.Types.:
                      @ u
                      (ds1 @ [CapDL.AST.Range] CapDL.AST.$fDataCapParam22 b1)
                      (GHC.Types.[] @ u)) }) -}
a7b26ab58ab732780ee2549a909dc756
  $fDataCapParam_$s$fData(,)_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> (GHC.Types.Word, GHC.Types.Word)
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U(U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   (ds1 :: GHC.Types.Int)
                   (ds2 :: forall d. Data.Data.Data d => d -> u)
                   (x :: (GHC.Types.Word, GHC.Types.Word)) ->
                 case x of wild { (,) a1 b1 ->
                 case ds1 of wild1 { GHC.Types.I# x1 ->
                 case x1 of wild2 {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0# -> ds2 @ GHC.Types.Word Data.Data.$fDataWord a1
                   1# -> ds2 @ GHC.Types.Word Data.Data.$fDataWord b1 } } }) -}
c5e88b515fcf11f34d6cb030cd20546b
  $fDataCapParam_$s$fData(,)_$cgmapQi1 ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> ([GHC.Types.Char], [CapDL.AST.Range])
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U(U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   (ds1 :: GHC.Types.Int)
                   (ds2 :: forall d. Data.Data.Data d => d -> u)
                   (x :: ([GHC.Types.Char], [CapDL.AST.Range])) ->
                 case x of wild { (,) a1 b1 ->
                 case ds1 of wild1 { GHC.Types.I# x1 ->
                 case x1 of wild2 {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0# -> ds2 @ [GHC.Types.Char] Data.Data.$fData[]_$s$fData[] a1
                   1#
                   -> ds2 @ [CapDL.AST.Range] CapDL.AST.$fDataCapParam22 b1 } } }) -}
7228375600982b66c601e979d67b748b
  $fDataCapParam_$s$fData(,)_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> (GHC.Types.Word, GHC.Types.Word)
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U)>,
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   (ds1 :: r -> r' -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (eta :: (GHC.Types.Word, GHC.Types.Word)) ->
                 case eta of wild { (,) a1 b1 ->
                 ds1
                   (ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1))
                   (ds3 @ GHC.Types.Word Data.Data.$fDataWord b1) }) -}
edf8e470f1689267b530867647bbcf09
  $fDataCapParam_$s$fData(,)_$cgmapQl1 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> ([GHC.Types.Char], [CapDL.AST.Range])
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U)>,
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   (ds1 :: r -> r' -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (eta :: ([GHC.Types.Char], [CapDL.AST.Range])) ->
                 case eta of wild { (,) a1 b1 ->
                 ds1
                   (ds1 ds2 (ds3 @ [GHC.Types.Char] Data.Data.$fData[]_$s$fData[] a1))
                   (ds3 @ [CapDL.AST.Range] CapDL.AST.$fDataCapParam22 b1) }) -}
dad0d96757d17be382385b1239631ade
  $fDataCapParam_$s$fData(,)_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> (GHC.Types.Word, GHC.Types.Word)
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U)>,
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   (ds1 :: r' -> r -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (x0 :: (GHC.Types.Word, GHC.Types.Word)) ->
                 case x0 of wild { (,) a1 b1 ->
                 ds1
                   (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   (ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord b1) ds2) }) -}
62e1dfe98b0bb0432c232de8a6c00a6a
  $fDataCapParam_$s$fData(,)_$cgmapQr1 ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> ([GHC.Types.Char], [CapDL.AST.Range])
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),C(C1(U))><L,U><L,C(C1(U))><S,1*U(U,U)>,
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   (ds1 :: r' -> r -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (x0 :: ([GHC.Types.Char], [CapDL.AST.Range])) ->
                 case x0 of wild { (,) a1 b1 ->
                 ds1
                   (ds3 @ [GHC.Types.Char] Data.Data.$fData[]_$s$fData[] a1)
                   (ds1
                      (ds3 @ [CapDL.AST.Range] CapDL.AST.$fDataCapParam22 b1)
                      ds2) }) -}
080b18bb8b0a420a78fd55002ce99428
  $fDataCapParam_$s$fData(,)_$cgmapT ::
    (forall b1. Data.Data.Data b1 => b1 -> b1)
    -> (GHC.Types.Word, GHC.Types.Word)
    -> (GHC.Types.Word, GHC.Types.Word)
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds1 :: forall b1. Data.Data.Data b1 => b1 -> b1)
                   (x0 :: (GHC.Types.Word, GHC.Types.Word)) ->
                 case x0 of wild { (,) a1 b1 ->
                 (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1,
                  ds1 @ GHC.Types.Word Data.Data.$fDataWord b1) }) -}
2f56fc0806ecab713406519284183ad2
  $fDataCapParam_$s$fData(,)_$cgmapT1 ::
    (forall b1. Data.Data.Data b1 => b1 -> b1)
    -> ([GHC.Types.Char], [CapDL.AST.Range])
    -> ([GHC.Types.Char], [CapDL.AST.Range])
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds1 :: forall b1. Data.Data.Data b1 => b1 -> b1)
                   (x0 :: ([GHC.Types.Char], [CapDL.AST.Range])) ->
                 case x0 of wild { (,) a1 b1 ->
                 (ds1 @ [GHC.Types.Char] Data.Data.$fData[]_$s$fData[] a1,
                  ds1 @ [CapDL.AST.Range] CapDL.AST.$fDataCapParam22 b1) }) -}
ba3c5c0abcd7ef490bc7b41dcd480615
  $fDataCapParam_$s$fData(,)_$ctoConstr ::
    (GHC.Types.Word, GHC.Types.Word) -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: (GHC.Types.Word, GHC.Types.Word)) ->
                 case ds1 of wild { (,) ds2 ds3 -> Data.Data.tuple2Constr }) -}
60ad4157491cccc0d54a365f964be7a7
  $fDataCapParam_$s$fDataSet ::
    Data.Data.Data (Data.Set.Base.Set CapDL.Model.Rights)
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Set.Base.Set CapDL.Model.Rights)
                  CapDL.AST.$fDataCapParam_$s$fDataSet_$cp1Data
                  (Data.Set.Base.$fDataSet_$cgfoldl
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights
                     CapDL.Model.$fOrdRights)
                  (Data.Set.Base.$fDataSet_$cgunfold
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights
                     CapDL.Model.$fOrdRights)
                  CapDL.AST.$fDataCapParam_$s$fDataSet_$ctoConstr
                  CapDL.AST.$fDataCapParam_$s$fDataSet_$cdataTypeOf
                  (Data.Set.Base.$fDataSet_$cdataCast1
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights
                     CapDL.Model.$fOrdRights)
                  CapDL.AST.$fDataCapParam_$s$fDataSet_$cdataCast2
                  (Data.Set.Base.$fDataSet_$cgmapT
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights
                     CapDL.Model.$fOrdRights)
                  CapDL.AST.$fDataCapParam_$s$fDataSet_$cgmapQl
                  CapDL.AST.$fDataCapParam_$s$fDataSet_$cgmapQr
                  CapDL.AST.$fDataCapParam_$s$fDataSet_$cgmapQ
                  CapDL.AST.$fDataCapParam_$s$fDataSet_$cgmapQi
                  (Data.Set.Base.$fDataSet_$cgmapM
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights
                     CapDL.Model.$fOrdRights)
                  (Data.Set.Base.$fDataSet_$cgmapMp
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights
                     CapDL.Model.$fOrdRights)
                  (Data.Set.Base.$fDataSet_$cgmapMo
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights
                     CapDL.Model.$fOrdRights) -}
a4ca87d3ed2514321d8a9444b3f6bce6
  $fDataCapParam_$s$fDataSet_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c (Data.Set.Base.Set CapDL.Model.Rights))
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c (Data.Set.Base.Set CapDL.Model.Rights))) -}
d51db2985c731afadd68aea6432c4ff0
  $fDataCapParam_$s$fDataSet_$cdataTypeOf ::
    Data.Set.Base.Set CapDL.Model.Rights -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Data.Set.Base.Set CapDL.Model.Rights) ->
                 Data.Set.Base.setDataType) -}
92596c292639f2212f9133a7537db9de
  $fDataCapParam_$s$fDataSet_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> Data.Set.Base.Set CapDL.Model.Rights -> [u]
  {- Arity: 2, Strictness: <L,1*C1(C1(U))><L,1*U>m2,
     Unfolding: InlineRule (2, True, False)
                (\ @ u
                   (ds1 :: forall d. Data.Data.Data d => d -> u)
                   (eta :: Data.Set.Base.Set CapDL.Model.Rights) ->
                 GHC.Types.:
                   @ u
                   (ds1
                      @ [CapDL.Model.Rights]
                      CapDL.AST.$fDataCapParam_$s$fData[]
                      (GHC.Base.build
                         @ CapDL.Model.Rights
                         (\ @ b
                            (c :: CapDL.Model.Rights -> b -> b)[OneShot]
                            (n :: b)[OneShot] ->
                          Data.Set.Base.foldrFB @ CapDL.Model.Rights @ b c n eta)))
                   (GHC.Types.[] @ u)) -}
fa9a0b57db64397da244719c3160e7e9
  $fDataCapParam_$s$fDataSet_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> Data.Set.Base.Set CapDL.Model.Rights
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   (ds1 :: GHC.Types.Int)
                   (ds2 :: forall d. Data.Data.Data d => d -> u)
                   (eta :: Data.Set.Base.Set CapDL.Model.Rights) ->
                 case ds1 of wild { GHC.Types.I# x ->
                 case x of wild1 {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0#
                   -> ds2
                        @ [CapDL.Model.Rights]
                        CapDL.AST.$fDataCapParam_$s$fData[]
                        (GHC.Base.build
                           @ CapDL.Model.Rights
                           (\ @ b
                              (c :: CapDL.Model.Rights -> b -> b)[OneShot]
                              (n :: b)[OneShot] ->
                            Data.Set.Base.foldrFB @ CapDL.Model.Rights @ b c n eta)) } }) -}
d26edea8d89987a067172dbead7444df
  $fDataCapParam_$s$fDataSet_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> Data.Set.Base.Set CapDL.Model.Rights
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*C1(C1(U))><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ r
                   @ r'
                   (ds1 :: r -> r' -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (x :: Data.Set.Base.Set CapDL.Model.Rights) ->
                 ds1
                   ds2
                   (ds3
                      @ [CapDL.Model.Rights]
                      CapDL.AST.$fDataCapParam_$s$fData[]
                      (GHC.Base.build
                         @ CapDL.Model.Rights
                         (\ @ b
                            (c :: CapDL.Model.Rights -> b -> b)[OneShot]
                            (n :: b)[OneShot] ->
                          Data.Set.Base.foldrFB @ CapDL.Model.Rights @ b c n x)))) -}
b89472dd6b30d51ef21bfe91031dae6a
  $fDataCapParam_$s$fDataSet_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> Data.Set.Base.Set CapDL.Model.Rights
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*C1(C1(U))><L,1*U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   (ds1 :: r' -> r -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (eta :: Data.Set.Base.Set CapDL.Model.Rights) ->
                 ds1
                   (ds3
                      @ [CapDL.Model.Rights]
                      CapDL.AST.$fDataCapParam_$s$fData[]
                      (GHC.Base.build
                         @ CapDL.Model.Rights
                         (\ @ b
                            (c :: CapDL.Model.Rights -> b -> b)[OneShot]
                            (n :: b)[OneShot] ->
                          Data.Set.Base.foldrFB @ CapDL.Model.Rights @ b c n eta)))
                   ds2) -}
bdf23e3dfaaa15942057b283166fecb1
  $fDataCapParam_$s$fDataSet_$cp1Data ::
    Data.Typeable.Internal.Typeable
      (Data.Set.Base.Set CapDL.Model.Rights)
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, False)
                (let {
                   ds1 :: Data.Typeable.Internal.TypeRep
                   = case Data.Set.Base.$fDataSet3 of wild { Data.Typeable.Internal.TypeRep dt dt1 tc ks trs ->
                     let {
                       types :: [Data.Typeable.Internal.TypeRep]
                       = GHC.Base.build
                           @ Data.Typeable.Internal.TypeRep
                           (\ @ b
                              (c :: Data.Typeable.Internal.TypeRep -> b -> b)[OneShot]
                              (n :: b)[OneShot] ->
                            GHC.Base.foldr
                              @ Data.Typeable.Internal.TypeRep
                              @ b
                              c
                              (c (CapDL.Model.$fDataRights_$cp1Data
                                    `cast`
                                  (Data.Typeable.Internal.N:Typeable[0]
                                       <*>_N <CapDL.Model.Rights>_N)
                                    (GHC.Prim.proxy# @ * @ CapDL.Model.Rights))
                                 n)
                              trs)
                     } in
                     case Data.Typeable.Internal.typeRepFingerprints
                            ks
                            types of kt_fps { DEFAULT ->
                     case GHC.Fingerprint.fingerprintFingerprints
                            (GHC.Types.:
                               @ GHC.Fingerprint.Type.Fingerprint
                               (Data.Typeable.Internal.tyConFingerprint tc)
                               kt_fps) of dt2 { GHC.Fingerprint.Type.Fingerprint dt3 dt4 ->
                     Data.Typeable.Internal.TypeRep dt3 dt4 tc ks types } } }
                 } in
                 (\ (wild :: GHC.Prim.Proxy#
                               (Data.Set.Base.Set CapDL.Model.Rights)) ->
                  ds1)
                   `cast`
                 (Sym (Data.Typeable.Internal.N:Typeable[0]
                           <*>_N <Data.Set.Base.Set CapDL.Model.Rights>_N))) -}
269ae17190749152d32e6bc420a2e384
  $fDataCapParam_$s$fDataSet_$ctoConstr ::
    Data.Set.Base.Set CapDL.Model.Rights -> Data.Data.Constr
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: Data.Set.Base.Set CapDL.Model.Rights) ->
                 Data.Set.Base.fromListConstr) -}
a86fe658465688e9235827d3d514e903
  $fDataCapParam_$s$fData[] :: Data.Data.Data [CapDL.Model.Rights]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [CapDL.Model.Rights]
                  (Data.Data.$fData[]_$cp1Data
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights)
                  (Data.Data.$fData[]_$cgfoldl
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights)
                  (Data.Data.$fData[]_$cgunfold
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights)
                  CapDL.AST.$fDataCapParam_$s$fData[]_$ctoConstr
                  CapDL.AST.$fDataCapParam_$s$fData[]_$cdataTypeOf
                  (Data.Data.$fData[]_$cdataCast1
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights)
                  CapDL.AST.$fDataCapParam_$s$fData[]_$cdataCast2
                  (Data.Data.$fData[]_$cgmapT
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights)
                  (Data.Data.$fData[]_$cgmapQl
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights)
                  (Data.Data.$fData[]_$cgmapQr
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights)
                  (Data.Data.$fData[]_$cgmapQ
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights)
                  (Data.Data.$fData[]_$cgmapQi
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights)
                  (Data.Data.$fData[]_$cgmapM
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights)
                  (Data.Data.$fData[]_$cgmapMp
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights)
                  (Data.Data.$fData[]_$cgmapMo
                     @ CapDL.Model.Rights
                     CapDL.Model.$fDataRights) -}
79f89fd77bf220188e370eb98852f43f
  $fDataCapParam_$s$fData[]1 :: Data.Data.Data [CapDL.AST.Range]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [CapDL.AST.Range]
                  (Data.Data.$fData[]_$cp1Data
                     @ CapDL.AST.Range
                     CapDL.AST.$fDataRange)
                  (Data.Data.$fData[]_$cgfoldl
                     @ CapDL.AST.Range
                     CapDL.AST.$fDataRange)
                  (Data.Data.$fData[]_$cgunfold
                     @ CapDL.AST.Range
                     CapDL.AST.$fDataRange)
                  CapDL.AST.$fDataCapParam25
                  CapDL.AST.$fDataCapParam24
                  (Data.Data.$fData[]_$cdataCast1
                     @ CapDL.AST.Range
                     CapDL.AST.$fDataRange)
                  CapDL.AST.$fDataCapParam23
                  (Data.Data.$fData[]_$cgmapT
                     @ CapDL.AST.Range
                     CapDL.AST.$fDataRange)
                  (Data.Data.$fData[]_$cgmapQl
                     @ CapDL.AST.Range
                     CapDL.AST.$fDataRange)
                  (Data.Data.$fData[]_$cgmapQr
                     @ CapDL.AST.Range
                     CapDL.AST.$fDataRange)
                  (Data.Data.$fData[]_$cgmapQ
                     @ CapDL.AST.Range
                     CapDL.AST.$fDataRange)
                  (Data.Data.$fData[]_$cgmapQi
                     @ CapDL.AST.Range
                     CapDL.AST.$fDataRange)
                  (Data.Data.$fData[]_$cgmapM
                     @ CapDL.AST.Range
                     CapDL.AST.$fDataRange)
                  (Data.Data.$fData[]_$cgmapMp
                     @ CapDL.AST.Range
                     CapDL.AST.$fDataRange)
                  (Data.Data.$fData[]_$cgmapMo
                     @ CapDL.AST.Range
                     CapDL.AST.$fDataRange) -}
95eeacae758ac98c24740b1d63e784c5
  $fDataCapParam_$s$fData[]_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c [CapDL.Model.Rights])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c [CapDL.Model.Rights])) -}
bc7ab15b40c7998bc7a65804106b9d2b
  $fDataCapParam_$s$fData[]_$cdataTypeOf ::
    [CapDL.Model.Rights] -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: [CapDL.Model.Rights]) -> Data.Data.listDataType) -}
ee5379f61c0b26aa027cff372387382e
  $fDataCapParam_$s$fData[]_$ctoConstr ::
    [CapDL.Model.Rights] -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: [CapDL.Model.Rights]) ->
                 case ds1 of wild {
                   [] -> Data.Data.nilConstr : ds2 ds3 -> Data.Data.consConstr }) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam :: Data.Data.Data CapDL.AST.FrameExtraParam
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.FrameExtraParam
                  CapDL.AST.$fDataFrameExtraParam_$cp1Data
                  CapDL.AST.$fDataFrameExtraParam_$cgfoldl
                  CapDL.AST.$fDataFrameExtraParam_$cgunfold
                  CapDL.AST.$fDataFrameExtraParam_$ctoConstr
                  CapDL.AST.$fDataFrameExtraParam_$cdataTypeOf
                  CapDL.AST.$fDataFrameExtraParam_$cdataCast1
                  CapDL.AST.$fDataFrameExtraParam_$cdataCast2
                  CapDL.AST.$fDataFrameExtraParam_$cgmapT
                  CapDL.AST.$fDataFrameExtraParam_$cgmapQl
                  CapDL.AST.$fDataFrameExtraParam_$cgmapQr
                  CapDL.AST.$fDataFrameExtraParam_$cgmapQ
                  CapDL.AST.$fDataFrameExtraParam_$cgmapQi
                  CapDL.AST.$fDataFrameExtraParam_$cgmapM
                  CapDL.AST.$fDataFrameExtraParam_$cgmapMp
                  CapDL.AST.$fDataFrameExtraParam_$cgmapMo -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam1 ::
    ([GHC.Base.String] -> CapDL.AST.FrameExtraParam, GHC.Types.Bool)
  {- HasNoCafRefs, Unfolding: ((CapDL.AST.Fill, GHC.Types.False)) -}
b4c4f64c73d32ad53470c2258a7bc4b5
  $fDataFrameExtraParam2 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep CapDL.AST.$fDataFrameExtraParam3) -}
e6a07732e48f9fed88e74478bb8bd943
  $fDataFrameExtraParam3 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c6tHjBsfbIjtJ7Lope4yP1m
                   (GHC.Types.[] @ Data.Data.Constr)) -}
ac5b7fa8dd5505c912a52fd96a9c112d
  $fDataFrameExtraParam4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FrameExtraParam"#) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam5 ::
    GHC.Prim.Proxy# CapDL.AST.FrameExtraParam
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (wild :: GHC.Prim.Proxy# CapDL.AST.FrameExtraParam) ->
                 CapDL.AST.$fDataFrameExtraParam6) -}
e349486a9db5db9e47156d57a8c31e63
  $fDataFrameExtraParam6 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case Data.Typeable.Internal.typeRepFingerprints
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.TypeRep) of kt_fps { DEFAULT ->
                 case GHC.Fingerprint.fingerprintFingerprints
                        (GHC.Types.:
                           @ GHC.Fingerprint.Type.Fingerprint
                           CapDL.AST.$fDataFrameExtraParam7
                           kt_fps) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                 Data.Typeable.Internal.TypeRep
                   dt1
                   dt2
                   CapDL.AST.$tcFrameExtraParam
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep) } }) -}
cd4471292ea7864df023510396fef4be
  $fDataFrameExtraParam7 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   1015789945143086672##
                   6770344285956786079##) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c CapDL.AST.FrameExtraParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d. Data.Data.Data d => c (t d)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.FrameExtraParam)) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c CapDL.AST.FrameExtraParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.FrameExtraParam)) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cdataTypeOf ::
    CapDL.AST.FrameExtraParam -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: CapDL.AST.FrameExtraParam) ->
                 CapDL.AST.$talFI0No0tc3DVfRHZ6Wfb) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> CapDL.AST.FrameExtraParam
    -> c CapDL.AST.FrameExtraParam
  {- Arity: 3,
     Strictness: <C(C(C(S))),1*C1(C1(C1(U)))><L,1*C1(U)><S,1*U(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   (k :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
                   (z :: forall g. g -> c g)
                   (ds1 :: CapDL.AST.FrameExtraParam) ->
                 case ds1 of wild { CapDL.AST.Fill a1 ->
                 k @ [GHC.Base.String]
                   @ CapDL.AST.FrameExtraParam
                   CapDL.AST.$fDataFrameExtraParam_$s$fData[]
                   (z @ ([GHC.Base.String] -> CapDL.AST.FrameExtraParam)
                      CapDL.AST.Fill)
                   a1 }) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.FrameExtraParam -> m CapDL.AST.FrameExtraParam
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   (w :: GHC.Base.Monad m)
                   (w1 :: forall d. Data.Data.Data d => d -> m d)
                   (w2 :: CapDL.AST.FrameExtraParam) ->
                 case w2 of ww { CapDL.AST.Fill ww1 ->
                 CapDL.AST.$w$cgmapM @ m w w1 ww1 }) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.FrameExtraParam -> m CapDL.AST.FrameExtraParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U)>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonadPlus :: GHC.Base.MonadPlus m)
                   (ds1 :: forall d. Data.Data.Data d => d -> m d)
                   (eta1 :: CapDL.AST.FrameExtraParam) ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl396 :: m CapDL.AST.FrameExtraParam
                   = GHC.Base.mzero @ m $dMonadPlus @ CapDL.AST.FrameExtraParam
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                   @ CapDL.AST.FrameExtraParam
                   (case eta1 of wild { CapDL.AST.Fill a1 ->
                    let {
                      lvl397 :: m [GHC.Base.String]
                      = ds1
                          @ [GHC.Base.String]
                          CapDL.AST.$fDataFrameExtraParam_$s$fData[]
                          a1
                    } in
                    GHC.Base.>>=
                      @ m
                      $dMonad
                      @ ([GHC.Base.String] -> CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                      @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                      (GHC.Base.return
                         @ m
                         $dMonad
                         @ ([GHC.Base.String] -> CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                         CapDL.AST.$fDataFrameExtraParam1)
                      (\ (ds2 :: ([GHC.Base.String] -> CapDL.AST.FrameExtraParam,
                                  GHC.Types.Bool)) ->
                       case ds2 of wild1 { (,) h b1 ->
                       case b1 of wild2 {
                         GHC.Types.False
                         -> GHC.Base.mplus
                              @ m
                              $dMonadPlus
                              @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                              (GHC.Base.>>=
                                 @ m
                                 $dMonad
                                 @ [GHC.Base.String]
                                 @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                                 lvl397
                                 (\ (y' :: [GHC.Base.String]) ->
                                  GHC.Base.return
                                    @ m
                                    $dMonad
                                    @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                                    (h y', GHC.Types.True)))
                              (GHC.Base.return
                                 @ m
                                 $dMonad
                                 @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                                 (h a1, GHC.Types.False))
                         GHC.Types.True
                         -> GHC.Base.return
                              @ m
                              $dMonad
                              @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                              (h a1, GHC.Types.True) } }) })
                   (\ (ds2 :: (CapDL.AST.FrameExtraParam, GHC.Types.Bool)) ->
                    case ds2 of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl396
                      GHC.Types.True
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ CapDL.AST.FrameExtraParam
                           x' } })) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.FrameExtraParam -> m CapDL.AST.FrameExtraParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U(U)>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonadPlus :: GHC.Base.MonadPlus m)
                   (ds1 :: forall d. Data.Data.Data d => d -> m d)
                   (eta1 :: CapDL.AST.FrameExtraParam) ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl396 :: m CapDL.AST.FrameExtraParam
                   = GHC.Base.mzero @ m $dMonadPlus @ CapDL.AST.FrameExtraParam
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                   @ CapDL.AST.FrameExtraParam
                   (case eta1 of wild { CapDL.AST.Fill a1 ->
                    let {
                      lvl397 :: m [GHC.Base.String]
                      = ds1
                          @ [GHC.Base.String]
                          CapDL.AST.$fDataFrameExtraParam_$s$fData[]
                          a1
                    } in
                    GHC.Base.>>=
                      @ m
                      $dMonad
                      @ ([GHC.Base.String] -> CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                      @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                      (GHC.Base.return
                         @ m
                         $dMonad
                         @ ([GHC.Base.String] -> CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                         CapDL.AST.$fDataFrameExtraParam1)
                      (\ (ds2 :: ([GHC.Base.String] -> CapDL.AST.FrameExtraParam,
                                  GHC.Types.Bool)) ->
                       case ds2 of wild1 { (,) h b1 ->
                       GHC.Base.mplus
                         @ m
                         $dMonadPlus
                         @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                         (GHC.Base.>>=
                            @ m
                            $dMonad
                            @ [GHC.Base.String]
                            @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                            lvl397
                            (\ (y' :: [GHC.Base.String]) ->
                             GHC.Base.return
                               @ m
                               $dMonad
                               @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                               (h y', GHC.Types.True)))
                         (GHC.Base.return
                            @ m
                            $dMonad
                            @ (CapDL.AST.FrameExtraParam, GHC.Types.Bool)
                            (h a1, b1)) }) })
                   (\ (ds2 :: (CapDL.AST.FrameExtraParam, GHC.Types.Bool)) ->
                    case ds2 of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl396
                      GHC.Types.True
                      -> GHC.Base.return
                           @ m
                           $dMonad
                           @ CapDL.AST.FrameExtraParam
                           x' } })) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.FrameExtraParam -> [u]
  {- Arity: 2, Strictness: <L,1*C1(C1(U))><S,1*U(U)>m2,
     Unfolding: InlineRule (2, True, False)
                (\ @ u
                   (ds1 :: forall d. Data.Data.Data d => d -> u)
                   (x0 :: CapDL.AST.FrameExtraParam) ->
                 case x0 of wild { CapDL.AST.Fill a1 ->
                 GHC.Types.:
                   @ u
                   (ds1
                      @ [GHC.Base.String]
                      CapDL.AST.$fDataFrameExtraParam_$s$fData[]
                      a1)
                   (GHC.Types.[] @ u) }) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.FrameExtraParam
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   (ds1 :: GHC.Types.Int)
                   (ds2 :: forall d. Data.Data.Data d => d -> u)
                   (x :: CapDL.AST.FrameExtraParam) ->
                 case x of wild { CapDL.AST.Fill a1 ->
                 case ds1 of wild1 { GHC.Types.I# x1 ->
                 case x1 of wild2 {
                   DEFAULT -> Data.Maybe.fromJust1 @ u
                   0#
                   -> ds2
                        @ [GHC.Base.String]
                        CapDL.AST.$fDataFrameExtraParam_$s$fData[]
                        a1 } } }) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.FrameExtraParam
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*C1(C1(U))><S,1*U(U)>,
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   (ds1 :: r -> r' -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (eta :: CapDL.AST.FrameExtraParam) ->
                 case eta of wild { CapDL.AST.Fill a1 ->
                 ds1
                   ds2
                   (ds3
                      @ [GHC.Base.String]
                      CapDL.AST.$fDataFrameExtraParam_$s$fData[]
                      a1) }) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.FrameExtraParam
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*C1(C1(U))><S,1*U(U)>,
     Unfolding: InlineRule (4, True, False)
                (\ @ r
                   @ r'
                   (ds1 :: r' -> r -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (x0 :: CapDL.AST.FrameExtraParam) ->
                 case x0 of wild { CapDL.AST.Fill a1 ->
                 ds1
                   (ds3
                      @ [GHC.Base.String]
                      CapDL.AST.$fDataFrameExtraParam_$s$fData[]
                      a1)
                   ds2 }) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> CapDL.AST.FrameExtraParam -> CapDL.AST.FrameExtraParam
  {- Arity: 2, Strictness: <L,1*C1(C1(U))><S,1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds1 :: forall b. Data.Data.Data b => b -> b)
                   (x0 :: CapDL.AST.FrameExtraParam) ->
                 case x0 of wild { CapDL.AST.Fill a1 ->
                 CapDL.AST.Fill
                   (ds1
                      @ [GHC.Base.String]
                      CapDL.AST.$fDataFrameExtraParam_$s$fData[]
                      a1) }) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c CapDL.AST.FrameExtraParam
  {- Arity: 3, Strictness: <C(C(S)),1*C1(C1(U))><L,1*C1(U)><L,A>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   (k :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (z :: forall r. r -> c r)
                   (ds1 :: Data.Data.Constr) ->
                 k @ [GHC.Base.String]
                   @ CapDL.AST.FrameExtraParam
                   CapDL.AST.$fDataFrameExtraParam_$s$fData[]
                   (z @ ([GHC.Base.String] -> CapDL.AST.FrameExtraParam)
                      CapDL.AST.Fill)) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$cp1Data ::
    Data.Typeable.Internal.Typeable CapDL.AST.FrameExtraParam
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataFrameExtraParam5
                  `cast`
                (Sym (Data.Typeable.Internal.N:Typeable[0]
                          <*>_N <CapDL.AST.FrameExtraParam>_N)) -}
dde4225cb073b0222131e34641a850ba
  $fDataFrameExtraParam_$ctoConstr ::
    CapDL.AST.FrameExtraParam -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.FrameExtraParam) ->
                 case ds1 of wild { CapDL.AST.Fill ds2 ->
                 CapDL.AST.$c6tHjBsfbIjtJ7Lope4yP1m }) -}
07e9e827385ef418bd421b4ea024337b
  $fDataFrameExtraParam_$s$fData[] ::
    Data.Data.Data [[GHC.Types.Char]]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [[GHC.Types.Char]]
                  (Data.Data.$fData[]_$cp1Data
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgfoldl
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgunfold
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  CapDL.AST.$fDataFrameExtraParam_$s$fData[]_$ctoConstr
                  CapDL.AST.$fDataFrameExtraParam_$s$fData[]_$cdataTypeOf
                  (Data.Data.$fData[]_$cdataCast1
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  CapDL.AST.$fDataFrameExtraParam_$s$fData[]_$cdataCast2
                  (Data.Data.$fData[]_$cgmapT
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapQl
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapQr
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapQ
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapQi
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapM
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapMp
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[])
                  (Data.Data.$fData[]_$cgmapMo
                     @ [GHC.Types.Char]
                     Data.Data.$fData[]_$s$fData[]) -}
029869d646abd73d3ab6ccc44c308598
  $fDataFrameExtraParam_$s$fData[]_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c [[GHC.Types.Char]])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c [[GHC.Types.Char]])) -}
f79cbc26ee0f69b5505c64457fb02ff0
  $fDataFrameExtraParam_$s$fData[]_$cdataTypeOf ::
    [[GHC.Types.Char]] -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: [[GHC.Types.Char]]) -> Data.Data.listDataType) -}
23ca9edaf3dae579244fc6200aed841a
  $fDataFrameExtraParam_$s$fData[]_$ctoConstr ::
    [[GHC.Types.Char]] -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: [[GHC.Types.Char]]) ->
                 case ds1 of wild {
                   [] -> Data.Data.nilConstr : ds2 ds3 -> Data.Data.consConstr }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam ::
    Data.Data.Data CapDL.AST.IOAPICIRQExtraParam
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.IOAPICIRQExtraParam
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cp1Data
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cgfoldl
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cgunfold
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$ctoConstr
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cdataTypeOf
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cdataCast1
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cdataCast2
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cgmapT
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cgmapQl
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cgmapQr
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cgmapQ
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cgmapQi
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cgmapM
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cgmapMp
                  CapDL.AST.$fDataIOAPICIRQExtraParam_$cgmapMo -}
9a1f4679a1faeaa5af34b07773fb34d8
  $fDataIOAPICIRQExtraParam1 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep
                   CapDL.AST.$fDataIOAPICIRQExtraParam2) -}
a58ed339634905c19769dd0a7f93ee0b
  $fDataIOAPICIRQExtraParam2 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cF6L5sNexkNW3M6VTQUa5N0
                   CapDL.AST.$fDataIOAPICIRQExtraParam3) -}
6911a079d71509717f550700ba14738d
  $fDataIOAPICIRQExtraParam3 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c55Ab6GvBF5tKYKiVhZb42n
                   CapDL.AST.$fDataIOAPICIRQExtraParam4) -}
378de339565ce65885d3cc52c5ab166e
  $fDataIOAPICIRQExtraParam4 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cKiVcMywFpel3IAqMCGW7gg
                   CapDL.AST.$fDataIOAPICIRQExtraParam5) -}
1f52a4430b3329c763de46e0d22a9dd0
  $fDataIOAPICIRQExtraParam5 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c8NKkYZNA3it9GufpuyxLoT
                   (GHC.Types.[] @ Data.Data.Constr)) -}
d651da4eb9f5d449d848a213b26b59e1
  $fDataIOAPICIRQExtraParam6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "IOAPICIRQExtraParam"#) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam7 ::
    GHC.Prim.Proxy# CapDL.AST.IOAPICIRQExtraParam
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (wild :: GHC.Prim.Proxy# CapDL.AST.IOAPICIRQExtraParam) ->
                 CapDL.AST.$fDataIOAPICIRQExtraParam8) -}
2c47fa790b2bf0f85c7205ba546a00ab
  $fDataIOAPICIRQExtraParam8 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case Data.Typeable.Internal.typeRepFingerprints
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.TypeRep) of kt_fps { DEFAULT ->
                 case GHC.Fingerprint.fingerprintFingerprints
                        (GHC.Types.:
                           @ GHC.Fingerprint.Type.Fingerprint
                           CapDL.AST.$fDataIOAPICIRQExtraParam9
                           kt_fps) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                 Data.Typeable.Internal.TypeRep
                   dt1
                   dt2
                   CapDL.AST.$tcIOAPICIRQExtraParam
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep) } }) -}
5812ccfff73c2ba72dfa6304c28ca6a3
  $fDataIOAPICIRQExtraParam9 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   6424313887535586954##
                   14151666890041254444##) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c CapDL.AST.IOAPICIRQExtraParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d. Data.Data.Data d => c (t d)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.IOAPICIRQExtraParam)) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c CapDL.AST.IOAPICIRQExtraParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.IOAPICIRQExtraParam)) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cdataTypeOf ::
    CapDL.AST.IOAPICIRQExtraParam -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: CapDL.AST.IOAPICIRQExtraParam) ->
                 CapDL.AST.$tECpPs3I2VU69WJn5fipWdP) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> CapDL.AST.IOAPICIRQExtraParam
    -> c CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 3,
     Strictness: <C(C(C(S))),1*C1(C1(C1(U)))><L,1*C1(U)><S,1*U>,
     Unfolding: (\ @ (c :: * -> *)
                   (k :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
                   (z :: forall g. g -> c g)
                   (ds1 :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case ds1 of wild {
                   CapDL.AST.IOAPIC a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.IOAPICIRQExtraParam
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.IOAPICIRQExtraParam)
                           CapDL.AST.IOAPIC)
                        a1
                   CapDL.AST.Pin a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.IOAPICIRQExtraParam
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.IOAPICIRQExtraParam)
                           CapDL.AST.Pin)
                        a1
                   CapDL.AST.Level a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.IOAPICIRQExtraParam
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.IOAPICIRQExtraParam)
                           CapDL.AST.Level)
                        a1
                   CapDL.AST.Polarity a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.IOAPICIRQExtraParam
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.IOAPICIRQExtraParam)
                           CapDL.AST.Polarity)
                        a1 }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.IOAPICIRQExtraParam -> m CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   (ds1 :: forall d. Data.Data.Data d => d -> m d)
                   (eta :: CapDL.AST.IOAPICIRQExtraParam) ->
                 let {
                   k :: forall d b. Data.Data.Data d => m (d -> b) -> d -> m b
                     {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                   = \ @ d
                       @ b
                       ($dData1 :: Data.Data.Data d)[OneShot]
                       (c :: m (d -> b))[OneShot]
                       (x :: d)[OneShot] ->
                     let {
                       lvl396 :: m d = ds1 @ d $dData1 x
                     } in
                     GHC.Base.>>=
                       @ m
                       $dMonad
                       @ (d -> b)
                       @ b
                       c
                       (\ (c' :: d -> b) ->
                        GHC.Base.>>=
                          @ m
                          $dMonad
                          @ d
                          @ b
                          lvl396
                          (\ (x' :: d) -> GHC.Base.return @ m $dMonad @ b (c' x')))
                 } in
                 case eta of wild {
                   CapDL.AST.IOAPIC a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.IOAPICIRQExtraParam
                        Data.Data.$fDataWord
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Types.Word -> CapDL.AST.IOAPICIRQExtraParam)
                           CapDL.AST.IOAPIC)
                        a1
                   CapDL.AST.Pin a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.IOAPICIRQExtraParam
                        Data.Data.$fDataWord
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Types.Word -> CapDL.AST.IOAPICIRQExtraParam)
                           CapDL.AST.Pin)
                        a1
                   CapDL.AST.Level a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.IOAPICIRQExtraParam
                        Data.Data.$fDataWord
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Types.Word -> CapDL.AST.IOAPICIRQExtraParam)
                           CapDL.AST.Level)
                        a1
                   CapDL.AST.Polarity a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.IOAPICIRQExtraParam
                        Data.Data.$fDataWord
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Types.Word -> CapDL.AST.IOAPICIRQExtraParam)
                           CapDL.AST.Polarity)
                        a1 }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.IOAPICIRQExtraParam -> m CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U> -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.IOAPICIRQExtraParam -> m CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U> -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.IOAPICIRQExtraParam -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ u
                   (ds1 :: forall d. Data.Data.Data d => d -> u)
                   (eta :: CapDL.AST.IOAPICIRQExtraParam) ->
                 CapDL.AST.$fDataIOAPICIRQExtraParam_$cgmapQr
                   @ [u]
                   @ u
                   (GHC.Types.: @ u)
                   (GHC.Types.[] @ u)
                   ds1
                   eta) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.IOAPICIRQExtraParam
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   (w :: GHC.Types.Int)
                   (w1 :: forall d. Data.Data.Data d => d -> u)
                   (w2 :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.AST.$w$cgmapQi1 @ u ww1 w1 w2 }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.IOAPICIRQExtraParam
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r -> r' -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (eta :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case eta of wild {
                   CapDL.AST.IOAPIC a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.Pin a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.Level a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.Polarity a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.IOAPICIRQExtraParam
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r' -> r -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (x0 :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case x0 of wild {
                   CapDL.AST.IOAPIC a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2
                   CapDL.AST.Pin a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2
                   CapDL.AST.Level a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2
                   CapDL.AST.Polarity a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2 }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> CapDL.AST.IOAPICIRQExtraParam -> CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 2, Strictness: <L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ (ds1 :: forall b. Data.Data.Data b => b -> b)
                   (x0 :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case x0 of wild {
                   CapDL.AST.IOAPIC a1
                   -> CapDL.AST.IOAPIC (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.Pin a1
                   -> CapDL.AST.Pin (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.Level a1
                   -> CapDL.AST.Level (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.Polarity a1
                   -> CapDL.AST.Polarity
                        (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1) }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 3,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*C1(U)><S(SLLLL),1*U(1*U,A,A,A,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (w2 :: Data.Data.Constr) ->
                 case w2 of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 CapDL.AST.$w$cgunfold2 @ c w w1 ww1 ww5 }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$cp1Data ::
    Data.Typeable.Internal.Typeable CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataIOAPICIRQExtraParam7
                  `cast`
                (Sym (Data.Typeable.Internal.N:Typeable[0]
                          <*>_N <CapDL.AST.IOAPICIRQExtraParam>_N)) -}
21eab1f918cd88a42e02e30804bad3d0
  $fDataIOAPICIRQExtraParam_$ctoConstr ::
    CapDL.AST.IOAPICIRQExtraParam -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case ds1 of wild {
                   CapDL.AST.IOAPIC ds2 -> CapDL.AST.$cF6L5sNexkNW3M6VTQUa5N0
                   CapDL.AST.Pin ds2 -> CapDL.AST.$c55Ab6GvBF5tKYKiVhZb42n
                   CapDL.AST.Level ds2 -> CapDL.AST.$cKiVcMywFpel3IAqMCGW7gg
                   CapDL.AST.Polarity ds2 -> CapDL.AST.$c8NKkYZNA3it9GufpuyxLoT }) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam :: Data.Data.Data CapDL.AST.MSIIRQExtraParam
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.MSIIRQExtraParam
                  CapDL.AST.$fDataMSIIRQExtraParam_$cp1Data
                  CapDL.AST.$fDataMSIIRQExtraParam_$cgfoldl
                  CapDL.AST.$fDataMSIIRQExtraParam_$cgunfold
                  CapDL.AST.$fDataMSIIRQExtraParam_$ctoConstr
                  CapDL.AST.$fDataMSIIRQExtraParam_$cdataTypeOf
                  CapDL.AST.$fDataMSIIRQExtraParam_$cdataCast1
                  CapDL.AST.$fDataMSIIRQExtraParam_$cdataCast2
                  CapDL.AST.$fDataMSIIRQExtraParam_$cgmapT
                  CapDL.AST.$fDataMSIIRQExtraParam_$cgmapQl
                  CapDL.AST.$fDataMSIIRQExtraParam_$cgmapQr
                  CapDL.AST.$fDataMSIIRQExtraParam_$cgmapQ
                  CapDL.AST.$fDataMSIIRQExtraParam_$cgmapQi
                  CapDL.AST.$fDataMSIIRQExtraParam_$cgmapM
                  CapDL.AST.$fDataMSIIRQExtraParam_$cgmapMp
                  CapDL.AST.$fDataMSIIRQExtraParam_$cgmapMo -}
70fcf164e35a1ba9447f7bea0d4eed76
  $fDataMSIIRQExtraParam1 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep CapDL.AST.$fDataMSIIRQExtraParam2) -}
c70a14dfdc597575b6234c0c95a1b152
  $fDataMSIIRQExtraParam2 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cIlUvcHhYIjqFFntSwxqn57
                   CapDL.AST.$fDataMSIIRQExtraParam3) -}
0bd4715b34cd410eb7a371def6b1affb
  $fDataMSIIRQExtraParam3 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cL50mkjUnrRzAG96Q01Bzcb
                   CapDL.AST.$fDataMSIIRQExtraParam4) -}
1f92b641b141ee0b70c550a0ed02322c
  $fDataMSIIRQExtraParam4 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cGzeogQTivwVKA1t2of96dd
                   CapDL.AST.$fDataMSIIRQExtraParam5) -}
b5bbef16197390f28a92716d69ede980
  $fDataMSIIRQExtraParam5 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c8ZZx0muvUQWBkVfPNqmu12
                   (GHC.Types.[] @ Data.Data.Constr)) -}
17bcc008a6ab755e7d416a98fdb7d0be
  $fDataMSIIRQExtraParam6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MSIIRQExtraParam"#) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam7 ::
    GHC.Prim.Proxy# CapDL.AST.MSIIRQExtraParam
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (wild :: GHC.Prim.Proxy# CapDL.AST.MSIIRQExtraParam) ->
                 CapDL.AST.$fDataMSIIRQExtraParam8) -}
6c46ae2f00b8c5640fe2c513b2ca65fb
  $fDataMSIIRQExtraParam8 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case Data.Typeable.Internal.typeRepFingerprints
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.TypeRep) of kt_fps { DEFAULT ->
                 case GHC.Fingerprint.fingerprintFingerprints
                        (GHC.Types.:
                           @ GHC.Fingerprint.Type.Fingerprint
                           CapDL.AST.$fDataMSIIRQExtraParam9
                           kt_fps) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                 Data.Typeable.Internal.TypeRep
                   dt1
                   dt2
                   CapDL.AST.$tcMSIIRQExtraParam
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep) } }) -}
81c18fc9e217bef42105ea83b934fe95
  $fDataMSIIRQExtraParam9 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   4394073277257951037##
                   7289296808468240693##) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c CapDL.AST.MSIIRQExtraParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d. Data.Data.Data d => c (t d)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.MSIIRQExtraParam)) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c CapDL.AST.MSIIRQExtraParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.MSIIRQExtraParam)) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cdataTypeOf ::
    CapDL.AST.MSIIRQExtraParam -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: CapDL.AST.MSIIRQExtraParam) ->
                 CapDL.AST.$tJQvh2zSg1334BedQjRtPQb) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> CapDL.AST.MSIIRQExtraParam
    -> c CapDL.AST.MSIIRQExtraParam
  {- Arity: 3,
     Strictness: <C(C(C(S))),1*C1(C1(C1(U)))><L,1*C1(U)><S,1*U>,
     Unfolding: (\ @ (c :: * -> *)
                   (k :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
                   (z :: forall g. g -> c g)
                   (ds1 :: CapDL.AST.MSIIRQExtraParam) ->
                 case ds1 of wild {
                   CapDL.AST.MSIHandle a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.MSIIRQExtraParam
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.MSIIRQExtraParam)
                           CapDL.AST.MSIHandle)
                        a1
                   CapDL.AST.MSIPCIBus a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.MSIIRQExtraParam
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.MSIIRQExtraParam)
                           CapDL.AST.MSIPCIBus)
                        a1
                   CapDL.AST.MSIPCIDev a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.MSIIRQExtraParam
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.MSIIRQExtraParam)
                           CapDL.AST.MSIPCIDev)
                        a1
                   CapDL.AST.MSIPCIFun a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.MSIIRQExtraParam
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.MSIIRQExtraParam)
                           CapDL.AST.MSIPCIFun)
                        a1 }) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.MSIIRQExtraParam -> m CapDL.AST.MSIIRQExtraParam
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   (ds1 :: forall d. Data.Data.Data d => d -> m d)
                   (eta :: CapDL.AST.MSIIRQExtraParam) ->
                 let {
                   k :: forall d b. Data.Data.Data d => m (d -> b) -> d -> m b
                     {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                   = \ @ d
                       @ b
                       ($dData1 :: Data.Data.Data d)[OneShot]
                       (c :: m (d -> b))[OneShot]
                       (x :: d)[OneShot] ->
                     let {
                       lvl396 :: m d = ds1 @ d $dData1 x
                     } in
                     GHC.Base.>>=
                       @ m
                       $dMonad
                       @ (d -> b)
                       @ b
                       c
                       (\ (c' :: d -> b) ->
                        GHC.Base.>>=
                          @ m
                          $dMonad
                          @ d
                          @ b
                          lvl396
                          (\ (x' :: d) -> GHC.Base.return @ m $dMonad @ b (c' x')))
                 } in
                 case eta of wild {
                   CapDL.AST.MSIHandle a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.MSIIRQExtraParam
                        Data.Data.$fDataWord
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Types.Word -> CapDL.AST.MSIIRQExtraParam)
                           CapDL.AST.MSIHandle)
                        a1
                   CapDL.AST.MSIPCIBus a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.MSIIRQExtraParam
                        Data.Data.$fDataWord
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Types.Word -> CapDL.AST.MSIIRQExtraParam)
                           CapDL.AST.MSIPCIBus)
                        a1
                   CapDL.AST.MSIPCIDev a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.MSIIRQExtraParam
                        Data.Data.$fDataWord
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Types.Word -> CapDL.AST.MSIIRQExtraParam)
                           CapDL.AST.MSIPCIDev)
                        a1
                   CapDL.AST.MSIPCIFun a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.MSIIRQExtraParam
                        Data.Data.$fDataWord
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Types.Word -> CapDL.AST.MSIIRQExtraParam)
                           CapDL.AST.MSIPCIFun)
                        a1 }) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.MSIIRQExtraParam -> m CapDL.AST.MSIIRQExtraParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U> -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.MSIIRQExtraParam -> m CapDL.AST.MSIIRQExtraParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U> -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.MSIIRQExtraParam -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ u
                   (ds1 :: forall d. Data.Data.Data d => d -> u)
                   (eta :: CapDL.AST.MSIIRQExtraParam) ->
                 CapDL.AST.$fDataMSIIRQExtraParam_$cgmapQr
                   @ [u]
                   @ u
                   (GHC.Types.: @ u)
                   (GHC.Types.[] @ u)
                   ds1
                   eta) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.MSIIRQExtraParam
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   (w :: GHC.Types.Int)
                   (w1 :: forall d. Data.Data.Data d => d -> u)
                   (w2 :: CapDL.AST.MSIIRQExtraParam) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.AST.$w$cgmapQi2 @ u ww1 w1 w2 }) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.MSIIRQExtraParam
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r -> r' -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (eta :: CapDL.AST.MSIIRQExtraParam) ->
                 case eta of wild {
                   CapDL.AST.MSIHandle a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.MSIPCIBus a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.MSIPCIDev a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.MSIPCIFun a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) }) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.MSIIRQExtraParam
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r' -> r -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (x0 :: CapDL.AST.MSIIRQExtraParam) ->
                 case x0 of wild {
                   CapDL.AST.MSIHandle a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2
                   CapDL.AST.MSIPCIBus a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2
                   CapDL.AST.MSIPCIDev a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2
                   CapDL.AST.MSIPCIFun a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2 }) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> CapDL.AST.MSIIRQExtraParam -> CapDL.AST.MSIIRQExtraParam
  {- Arity: 2, Strictness: <L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ (ds1 :: forall b. Data.Data.Data b => b -> b)
                   (x0 :: CapDL.AST.MSIIRQExtraParam) ->
                 case x0 of wild {
                   CapDL.AST.MSIHandle a1
                   -> CapDL.AST.MSIHandle
                        (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.MSIPCIBus a1
                   -> CapDL.AST.MSIPCIBus
                        (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.MSIPCIDev a1
                   -> CapDL.AST.MSIPCIDev
                        (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.MSIPCIFun a1
                   -> CapDL.AST.MSIPCIFun
                        (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1) }) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c CapDL.AST.MSIIRQExtraParam
  {- Arity: 3,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*C1(U)><S(SLLLL),1*U(1*U,A,A,A,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (w2 :: Data.Data.Constr) ->
                 case w2 of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 CapDL.AST.$w$cgunfold3 @ c w w1 ww1 ww5 }) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$cp1Data ::
    Data.Typeable.Internal.Typeable CapDL.AST.MSIIRQExtraParam
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataMSIIRQExtraParam7
                  `cast`
                (Sym (Data.Typeable.Internal.N:Typeable[0]
                          <*>_N <CapDL.AST.MSIIRQExtraParam>_N)) -}
fc7d603deecce0f538ad1f168f348536
  $fDataMSIIRQExtraParam_$ctoConstr ::
    CapDL.AST.MSIIRQExtraParam -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.MSIIRQExtraParam) ->
                 case ds1 of wild {
                   CapDL.AST.MSIHandle ds2 -> CapDL.AST.$cIlUvcHhYIjqFFntSwxqn57
                   CapDL.AST.MSIPCIBus ds2 -> CapDL.AST.$cL50mkjUnrRzAG96Q01Bzcb
                   CapDL.AST.MSIPCIDev ds2 -> CapDL.AST.$cGzeogQTivwVKA1t2of96dd
                   CapDL.AST.MSIPCIFun ds2 -> CapDL.AST.$c8ZZx0muvUQWBkVfPNqmu12 }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam :: Data.Data.Data CapDL.AST.ObjParam
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.ObjParam
                  CapDL.AST.$fDataObjParam_$cp1Data
                  CapDL.AST.$fDataObjParam_$cgfoldl
                  CapDL.AST.$fDataObjParam_$cgunfold
                  CapDL.AST.$fDataObjParam_$ctoConstr
                  CapDL.AST.$fDataObjParam_$cdataTypeOf
                  CapDL.AST.$fDataObjParam_$cdataCast1
                  CapDL.AST.$fDataObjParam_$cdataCast2
                  CapDL.AST.$fDataObjParam_$cgmapT
                  CapDL.AST.$fDataObjParam_$cgmapQl
                  CapDL.AST.$fDataObjParam_$cgmapQr
                  CapDL.AST.$fDataObjParam_$cgmapQ
                  CapDL.AST.$fDataObjParam_$cgmapQi
                  CapDL.AST.$fDataObjParam_$cgmapM
                  CapDL.AST.$fDataObjParam_$cgmapMp
                  CapDL.AST.$fDataObjParam_$cgmapMo -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam1 ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.ObjParam
    -> Data.Data.CONST r CapDL.AST.ObjParam
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*U><L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r -> r' -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (eta :: CapDL.AST.ObjParam) ->
                 CapDL.AST.$fDataObjParam_$cgfoldl
                   @ (Data.Data.CONST r)
                   (\ @ d
                      @ b
                      ($dData1 :: Data.Data.Data d)[OneShot]
                      (c :: Data.Data.CONST r (d -> b))[OneShot]
                      (x :: d)[OneShot] ->
                    ds1
                      c `cast` (Data.Data.N:CONST[0] <*>_N <r>_R <d -> b>_P)
                      (ds3 @ d $dData1 x))
                     `cast`
                   (forall (d :: <*>_N) (b :: <*>_N).
                    <Data.Data.Data d>_R
                    ->_R <Data.Data.CONST r (d -> b)>_R
                    ->_R <d>_R
                    ->_R Sym (Data.Data.N:CONST[0] <*>_N <r>_R <b>_P))
                   (\ @ g1 (ds4 :: g1)[OneShot] -> ds2)
                     `cast`
                   (forall (g1 :: <*>_N).
                    <g1>_R ->_R Sym (Data.Data.N:CONST[0] <*>_N <r>_R <g1>_P))
                   eta) -}
303d3cb09cf550320db9da460c487041
  $fDataObjParam10 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c4e4jCyU3MiO9O2Paz0MBo6
                   CapDL.AST.$fDataObjParam11) -}
89a21e15a4f74bd356129e6f35190778
  $fDataObjParam11 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cECpPs3I2VU69WJn5fipWdP
                   CapDL.AST.$fDataObjParam12) -}
26bf905c270dec7c4224aaead6f8b66c
  $fDataObjParam12 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cJQvh2zSg1334BedQjRtPQb
                   CapDL.AST.$fDataObjParam13) -}
594389455ed95e6c3cb9dea6ab3c3e1d
  $fDataObjParam13 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cH8FhFlcKgtDKGAVtYs6vb
                   CapDL.AST.$fDataObjParam14) -}
c392ec9041f31fb213228c1cd7394c3d
  $fDataObjParam14 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cF7nIvMhVEvcJqeDE6UJtuG
                   CapDL.AST.$fDataObjParam15) -}
a8c40b638cfe39bd350d1505e4e9bf60
  $fDataObjParam15 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cua238zf8II76f2DjE0Zkp
                   CapDL.AST.$fDataObjParam16) -}
e3a1fea492928301ba0d789dc2ccef3a
  $fDataObjParam16 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cF6yy3yuVpcx9AZkfu6ZfgB
                   CapDL.AST.$fDataObjParam17) -}
07dfbca0206bef143777ec2c9b0f03be
  $fDataObjParam17 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c7KT4OHp05i20aXh6sPcwfu
                   CapDL.AST.$fDataObjParam18) -}
c70eba245aabd1ead7f0cb47659381fc
  $fDataObjParam18 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cAqKXpDkOvFI1JtWuFmDkNh
                   CapDL.AST.$fDataObjParam19) -}
2836266c1880cb0ef362b5ad2829696a
  $fDataObjParam19 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cFhcQOkfMcw7BRQTWXdyvhW
                   (GHC.Types.[] @ Data.Data.Constr)) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam2 ::
    (forall b. Data.Data.Data b => b -> b)
    -> CapDL.AST.ObjParam -> Data.Data.ID CapDL.AST.ObjParam
  {- Arity: 2, Strictness: <L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ (ds1 :: forall b. Data.Data.Data b => b -> b)
                   (x0 :: CapDL.AST.ObjParam) ->
                 CapDL.AST.$fDataObjParam_$cgfoldl
                   @ Data.Data.ID
                   (\ @ d
                      @ b
                      ($dData1 :: Data.Data.Data d)[OneShot]
                      (ds2 :: Data.Data.ID (d -> b))[OneShot]
                      (x :: d)[OneShot] ->
                    ds2 `cast` (Data.Data.N:ID[0] <d -> b>_R) (ds1 @ d $dData1 x))
                     `cast`
                   (forall (d :: <*>_N) (b :: <*>_N).
                    <Data.Data.Data d>_R
                    ->_R <Data.Data.ID (d -> b)>_R
                    ->_R <d>_R
                    ->_R Sym (Data.Data.N:ID[0] <b>_R))
                   CapDL.AST.$fDataCapParam7
                     `cast`
                   (forall (g :: <*>_N). <g>_R ->_R Sym (Data.Data.N:ID[0] <g>_R))
                   x0) -}
a2aadf3c2285c545e2fc5d2a54fc1ea6
  $fDataObjParam20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ObjParam"#) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam21 ::
    GHC.Prim.Proxy# CapDL.AST.ObjParam
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (wild :: GHC.Prim.Proxy# CapDL.AST.ObjParam) ->
                 CapDL.AST.$fDataObjParam22) -}
722631b9c72c942764929549392207a2
  $fDataObjParam22 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case Data.Typeable.Internal.typeRepFingerprints
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.TypeRep) of kt_fps { DEFAULT ->
                 case GHC.Fingerprint.fingerprintFingerprints
                        (GHC.Types.:
                           @ GHC.Fingerprint.Type.Fingerprint
                           CapDL.AST.$fDataObjParam23
                           kt_fps) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                 Data.Typeable.Internal.TypeRep
                   dt1
                   dt2
                   CapDL.AST.$tcObjParam
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep) } }) -}
7af776f1d259a320ab5064e6dc3ee2fc
  $fDataObjParam23 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   4979649633807401964##
                   17924446086984497578##) -}
eed0672bf4d568ca74e746aa28beae54
  $fDataObjParam3 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep CapDL.AST.$fDataObjParam4) -}
81f33a665dabbf915cfedd9a80fcbdf4
  $fDataObjParam4 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cIJPh4ToglP16Dmya2lGIWd
                   CapDL.AST.$fDataObjParam5) -}
f26b60b9e011cd8881a8168f46d0d7be
  $fDataObjParam5 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cK4E8jQzen1i7ZqFHMZWlWq
                   CapDL.AST.$fDataObjParam6) -}
b265845d1ad2ca342183d93db207407e
  $fDataObjParam6 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cGQFXb5xVHUeHUUTKOv5cNk
                   CapDL.AST.$fDataObjParam7) -}
80cc96b6f6de3ce3b34ca8c8c18cf7ba
  $fDataObjParam7 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cESYyyh3CCGCBXiT4lXm8iE
                   CapDL.AST.$fDataObjParam8) -}
fc68a558ff757f10d8f24956a600fee2
  $fDataObjParam8 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c79YE5L5lAUB0inF72oCUyr
                   CapDL.AST.$fDataObjParam9) -}
c2a3da5ccd920a961b088884022e7ec8
  $fDataObjParam9 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$calFI0No0tc3DVfRHZ6Wfb
                   CapDL.AST.$fDataObjParam10) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c CapDL.AST.ObjParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d. Data.Data.Data d => c (t d)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.ObjParam)) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c CapDL.AST.ObjParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.ObjParam)) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cdataTypeOf ::
    CapDL.AST.ObjParam -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 CapDL.AST.$t90btIRRwT552aYorls4pzr) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> CapDL.AST.ObjParam
    -> c CapDL.AST.ObjParam
  {- Arity: 3,
     Strictness: <C(C(C(S))),1*C1(C1(C1(U)))><L,1*C1(U)><S,1*U> -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.ObjParam -> m CapDL.AST.ObjParam
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   (ds1 :: forall d. Data.Data.Data d => d -> m d)
                   (eta :: CapDL.AST.ObjParam) ->
                 CapDL.AST.$fDataObjParam_$cgfoldl
                   @ m
                   (\ @ d
                      @ b
                      ($dData1 :: Data.Data.Data d)[OneShot]
                      (c :: m (d -> b))[OneShot]
                      (x :: d)[OneShot] ->
                    let {
                      lvl396 :: m d = ds1 @ d $dData1 x
                    } in
                    GHC.Base.>>=
                      @ m
                      $dMonad
                      @ (d -> b)
                      @ b
                      c
                      (\ (c' :: d -> b) ->
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ d
                         @ b
                         lvl396
                         (\ (x' :: d) -> GHC.Base.return @ m $dMonad @ b (c' x'))))
                   (\ @ g -> GHC.Base.return @ m $dMonad @ g)
                   eta) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.ObjParam -> m CapDL.AST.ObjParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonadPlus :: GHC.Base.MonadPlus m)
                   (ds1 :: forall d. Data.Data.Data d => d -> m d)
                   (eta1 :: CapDL.AST.ObjParam) ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl396 :: m CapDL.AST.ObjParam
                   = GHC.Base.mzero @ m $dMonadPlus @ CapDL.AST.ObjParam
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (CapDL.AST.ObjParam, GHC.Types.Bool)
                   @ CapDL.AST.ObjParam
                   (CapDL.AST.$fDataObjParam_$cgfoldl
                      @ (Data.Data.Mp m)
                      (\ @ d
                         @ b
                         ($dData1 :: Data.Data.Data d)[OneShot]
                         (ds2 :: Data.Data.Mp m (d -> b))[OneShot]
                         (y :: d)[OneShot] ->
                       let {
                         lvl397 :: m d = ds1 @ d $dData1 y
                       } in
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ (d -> b, GHC.Types.Bool)
                         @ (b, GHC.Types.Bool)
                         ds2 `cast` (Data.Data.N:Mp[0] <m>_R <d -> b>_N)
                         (\ (ds3 :: (d -> b, GHC.Types.Bool)) ->
                          case ds3 of wild { (,) h b1 ->
                          case b1 of wild1 {
                            GHC.Types.False
                            -> GHC.Base.mplus
                                 @ m
                                 $dMonadPlus
                                 @ (b, GHC.Types.Bool)
                                 (GHC.Base.>>=
                                    @ m
                                    $dMonad
                                    @ d
                                    @ (b, GHC.Types.Bool)
                                    lvl397
                                    (\ (y' :: d) ->
                                     GHC.Base.return
                                       @ m
                                       $dMonad
                                       @ (b, GHC.Types.Bool)
                                       (h y', GHC.Types.True)))
                                 (GHC.Base.return
                                    @ m
                                    $dMonad
                                    @ (b, GHC.Types.Bool)
                                    (h y, GHC.Types.False))
                            GHC.Types.True
                            -> GHC.Base.return
                                 @ m
                                 $dMonad
                                 @ (b, GHC.Types.Bool)
                                 (h y, GHC.Types.True) } }))
                        `cast`
                      (forall (d :: <*>_N) (b :: <*>_N).
                       <Data.Data.Data d>_R
                       ->_R <Data.Data.Mp m (d -> b)>_R
                       ->_R <d>_R
                       ->_R Sym (Data.Data.N:Mp[0] <m>_R <b>_N))
                      (\ @ g (g1 :: g)[OneShot] ->
                       GHC.Base.return
                         @ m
                         $dMonad
                         @ (g, GHC.Types.Bool)
                         (g1, GHC.Types.False))
                        `cast`
                      (forall (g :: <*>_N).
                       <g>_R ->_R Sym (Data.Data.N:Mp[0] <m>_R <g>_N))
                      eta1)
                     `cast`
                   (Data.Data.N:Mp[0] <m>_R <CapDL.AST.ObjParam>_N)
                   (\ (ds2 :: (CapDL.AST.ObjParam, GHC.Types.Bool)) ->
                    case ds2 of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl396
                      GHC.Types.True
                      -> GHC.Base.return @ m $dMonad @ CapDL.AST.ObjParam x' } })) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.ObjParam -> m CapDL.AST.ObjParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonadPlus :: GHC.Base.MonadPlus m)
                   (ds1 :: forall d. Data.Data.Data d => d -> m d)
                   (eta1 :: CapDL.AST.ObjParam) ->
                 let {
                   $dMonad :: GHC.Base.Monad m = GHC.Base.$p2MonadPlus @ m $dMonadPlus
                 } in
                 let {
                   lvl396 :: m CapDL.AST.ObjParam
                   = GHC.Base.mzero @ m $dMonadPlus @ CapDL.AST.ObjParam
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (CapDL.AST.ObjParam, GHC.Types.Bool)
                   @ CapDL.AST.ObjParam
                   (CapDL.AST.$fDataObjParam_$cgfoldl
                      @ (Data.Data.Mp m)
                      (\ @ d
                         @ b
                         ($dData1 :: Data.Data.Data d)[OneShot]
                         (ds2 :: Data.Data.Mp m (d -> b))[OneShot]
                         (y :: d)[OneShot] ->
                       let {
                         lvl397 :: m d = ds1 @ d $dData1 y
                       } in
                       GHC.Base.>>=
                         @ m
                         $dMonad
                         @ (d -> b, GHC.Types.Bool)
                         @ (b, GHC.Types.Bool)
                         ds2 `cast` (Data.Data.N:Mp[0] <m>_R <d -> b>_N)
                         (\ (ds3 :: (d -> b, GHC.Types.Bool)) ->
                          case ds3 of wild { (,) h b1 ->
                          GHC.Base.mplus
                            @ m
                            $dMonadPlus
                            @ (b, GHC.Types.Bool)
                            (GHC.Base.>>=
                               @ m
                               $dMonad
                               @ d
                               @ (b, GHC.Types.Bool)
                               lvl397
                               (\ (y' :: d) ->
                                GHC.Base.return
                                  @ m
                                  $dMonad
                                  @ (b, GHC.Types.Bool)
                                  (h y', GHC.Types.True)))
                            (GHC.Base.return @ m $dMonad @ (b, GHC.Types.Bool) (h y, b1)) }))
                        `cast`
                      (forall (d :: <*>_N) (b :: <*>_N).
                       <Data.Data.Data d>_R
                       ->_R <Data.Data.Mp m (d -> b)>_R
                       ->_R <d>_R
                       ->_R Sym (Data.Data.N:Mp[0] <m>_R <b>_N))
                      (\ @ g (g1 :: g)[OneShot] ->
                       GHC.Base.return
                         @ m
                         $dMonad
                         @ (g, GHC.Types.Bool)
                         (g1, GHC.Types.False))
                        `cast`
                      (forall (g :: <*>_N).
                       <g>_R ->_R Sym (Data.Data.N:Mp[0] <m>_R <g>_N))
                      eta1)
                     `cast`
                   (Data.Data.N:Mp[0] <m>_R <CapDL.AST.ObjParam>_N)
                   (\ (ds2 :: (CapDL.AST.ObjParam, GHC.Types.Bool)) ->
                    case ds2 of wild { (,) x' b ->
                    case b of wild1 {
                      GHC.Types.False -> lvl396
                      GHC.Types.True
                      -> GHC.Base.return @ m $dMonad @ CapDL.AST.ObjParam x' } })) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u) -> CapDL.AST.ObjParam -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ u
                   (ds1 :: forall d. Data.Data.Data d => d -> u)
                   (x0 :: CapDL.AST.ObjParam) ->
                 (CapDL.AST.$fDataObjParam_$cgfoldl
                    @ (Data.Data.Qr [u])
                    (\ @ d
                       @ b
                       ($dData1 :: Data.Data.Data d)[OneShot]
                       (ds2 :: Data.Data.Qr [u] (d -> b))[OneShot]
                       (x :: d)[OneShot]
                       (r1 :: [u]) ->
                     ds2 `cast` (Data.Data.N:Qr[0] <*>_N <[u]>_R <d -> b>_P)
                       (GHC.Types.: @ u (ds1 @ d $dData1 x) r1))
                      `cast`
                    (forall (d :: <*>_N) (b :: <*>_N).
                     <Data.Data.Data d>_R
                     ->_R <Data.Data.Qr [u] (d -> b)>_R
                     ->_R <d>_R
                     ->_R Sym (Data.Data.N:Qr[0] <*>_N <[u]>_R <b>_P))
                    (CapDL.AST.$fDataCapParam3 @ u)
                      `cast`
                    (forall (g :: <*>_N).
                     <g>_R ->_R Sym (Data.Data.N:Qr[0] <*>_N <[u]>_R <g>_P))
                    x0)
                   `cast`
                 (Data.Data.N:Qr[0] <*>_N <[u]>_R <CapDL.AST.ObjParam>_P)
                   (GHC.Types.[] @ u)) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.ObjParam
    -> u
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ @ u
                   (ds1 :: GHC.Types.Int)
                   (ds2 :: forall d. Data.Data.Data d => d -> u)
                   (x :: CapDL.AST.ObjParam) ->
                 case CapDL.AST.$fDataObjParam_$cgfoldl
                        @ (Data.Data.Qi u)
                        (\ @ d
                           @ b
                           ($dData1 :: Data.Data.Data d)[OneShot]
                           (ds3 :: Data.Data.Qi u (d -> b))[OneShot]
                           (a1 :: d)[OneShot] ->
                         case ds3 of wild { Data.Data.Qi i' q ->
                         Data.Data.Qi
                           @ *
                           @ u
                           @ b
                           (case i' of wild1 { GHC.Types.I# x1 ->
                            GHC.Types.I# (GHC.Prim.+# x1 1#) })
                           (case ds1 of wild1 { GHC.Types.I# x1 ->
                            case i' of wild2 { GHC.Types.I# y ->
                            case GHC.Prim.tagToEnum#
                                   @ GHC.Types.Bool
                                   (GHC.Prim.==# x1 y) of wild3 {
                              GHC.Types.False -> q
                              GHC.Types.True -> GHC.Base.Just @ u (ds2 @ d $dData1 a1) } } }) })
                        (CapDL.AST.$fDataCapParam1 @ u)
                        x of wild { Data.Data.Qi ds3 q ->
                 Data.Maybe.fromJust @ u q }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.ObjParam
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*U><L,1*C1(C1(U))><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataObjParam1
                  `cast`
                (forall (r :: <*>_N) (r' :: <*>_N).
                 <r -> r' -> r>_R
                 ->_R <r>_R
                 ->_R <forall d. Data.Data.Data d => d -> r'>_R
                 ->_R <CapDL.AST.ObjParam>_R
                 ->_R Data.Data.N:CONST[0] <*>_N <r>_R <CapDL.AST.ObjParam>_P) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.ObjParam
    -> r
  {- Arity: 4, Strictness: <L,C(C1(U))><L,U><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r' -> r -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (x0 :: CapDL.AST.ObjParam) ->
                 (CapDL.AST.$fDataObjParam_$cgfoldl
                    @ (Data.Data.Qr r)
                    (\ @ d
                       @ b
                       ($dData1 :: Data.Data.Data d)[OneShot]
                       (ds4 :: Data.Data.Qr r (d -> b))[OneShot]
                       (x :: d)[OneShot]
                       (r1 :: r) ->
                     ds4 `cast` (Data.Data.N:Qr[0] <*>_N <r>_R <d -> b>_P)
                       (ds1 (ds3 @ d $dData1 x) r1))
                      `cast`
                    (forall (d :: <*>_N) (b :: <*>_N).
                     <Data.Data.Data d>_R
                     ->_R <Data.Data.Qr r (d -> b)>_R
                     ->_R <d>_R
                     ->_R Sym (Data.Data.N:Qr[0] <*>_N <r>_R <b>_P))
                    (CapDL.AST.$fDataCapParam4 @ r)
                      `cast`
                    (forall (g :: <*>_N).
                     <g>_R ->_R Sym (Data.Data.N:Qr[0] <*>_N <r>_R <g>_P))
                    x0)
                   `cast`
                 (Data.Data.N:Qr[0] <*>_N <r>_R <CapDL.AST.ObjParam>_P)
                   ds2) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> CapDL.AST.ObjParam -> CapDL.AST.ObjParam
  {- Arity: 2, Strictness: <L,1*C1(C1(U))><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataObjParam2
                  `cast`
                (<forall b. Data.Data.Data b => b -> b>_R
                 ->_R <CapDL.AST.ObjParam>_R
                 ->_R Data.Data.N:ID[0] <CapDL.AST.ObjParam>_R) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> Data.Data.Constr -> c CapDL.AST.ObjParam
  {- Arity: 3,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*C1(U)><S(SLLLL),1*U(1*U,A,A,A,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (w2 :: Data.Data.Constr) ->
                 case w2 of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 CapDL.AST.$w$cgunfold4 @ c w w1 ww1 ww5 }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$cp1Data ::
    Data.Typeable.Internal.Typeable CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataObjParam21
                  `cast`
                (Sym (Data.Typeable.Internal.N:Typeable[0]
                          <*>_N <CapDL.AST.ObjParam>_N)) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fDataObjParam_$ctoConstr :: CapDL.AST.ObjParam -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   CapDL.AST.BitSize ds2 -> CapDL.AST.$cIJPh4ToglP16Dmya2lGIWd
                   CapDL.AST.VMSize ds2 -> CapDL.AST.$cK4E8jQzen1i7ZqFHMZWlWq
                   CapDL.AST.IOPTLevel ds2 -> CapDL.AST.$cGQFXb5xVHUeHUUTKOv5cNk
                   CapDL.AST.Paddr ds2 -> CapDL.AST.$cESYyyh3CCGCBXiT4lXm8iE
                   CapDL.AST.TCBExtraParam ds2 -> CapDL.AST.$c79YE5L5lAUB0inF72oCUyr
                   CapDL.AST.FrameExtraParam ds2 -> CapDL.AST.$calFI0No0tc3DVfRHZ6Wfb
                   CapDL.AST.SCExtraParam ds2 -> CapDL.AST.$c4e4jCyU3MiO9O2Paz0MBo6
                   CapDL.AST.IOAPICIRQExtraParam ds2
                   -> CapDL.AST.$cECpPs3I2VU69WJn5fipWdP
                   CapDL.AST.MSIIRQExtraParam ds2
                   -> CapDL.AST.$cJQvh2zSg1334BedQjRtPQb
                   CapDL.AST.InitArguments ds2 -> CapDL.AST.$cH8FhFlcKgtDKGAVtYs6vb
                   CapDL.AST.DomainID ds2 -> CapDL.AST.$cF7nIvMhVEvcJqeDE6UJtuG
                   CapDL.AST.ARMIOSpace ds2 -> CapDL.AST.$cua238zf8II76f2DjE0Zkp
                   CapDL.AST.PCIDevice ds2 -> CapDL.AST.$cF6yy3yuVpcx9AZkfu6ZfgB
                   CapDL.AST.Dom ds2 -> CapDL.AST.$c7KT4OHp05i20aXh6sPcwfu
                   CapDL.AST.FaultEP ds2 -> CapDL.AST.$cAqKXpDkOvFI1JtWuFmDkNh
                   CapDL.AST.Ports ds2 -> CapDL.AST.$cFhcQOkfMcw7BRQTWXdyvhW }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange :: Data.Data.Data CapDL.AST.Range
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.Range
                  CapDL.AST.$fDataRange_$cp1Data
                  CapDL.AST.$fDataRange_$cgfoldl
                  CapDL.AST.$fDataRange_$cgunfold
                  CapDL.AST.$fDataRange_$ctoConstr
                  CapDL.AST.$fDataRange_$cdataTypeOf
                  CapDL.AST.$fDataRange_$cdataCast1
                  CapDL.AST.$fDataRange_$cdataCast2
                  CapDL.AST.$fDataRange_$cgmapT
                  CapDL.AST.$fDataRange_$cgmapQl
                  CapDL.AST.$fDataRange_$cgmapQr
                  CapDL.AST.$fDataRange_$cgmapQ
                  CapDL.AST.$fDataRange_$cgmapQi
                  CapDL.AST.$fDataRange_$cgmapM
                  CapDL.AST.$fDataRange_$cgmapMp
                  CapDL.AST.$fDataRange_$cgmapMo -}
c2f8101824b806e5aa23427d46a2d4c9
  $fDataRange1 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep CapDL.AST.$fDataRange2) -}
39dfaf8b9afd8135146a90e224384a9b
  $fDataRange10 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   7805552825816648877##
                   15275584763522548374##) -}
35eced104552b0b9ab23123cbea8273a
  $fDataRange2 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cGFy7wJHHzBtHKjGMXbFh3U
                   CapDL.AST.$fDataRange3) -}
7a62a9ac66f1e40f70ea789edf6d0e34
  $fDataRange3 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c1pw1JFwEEK5LN04JfejIvo
                   CapDL.AST.$fDataRange4) -}
d80b2f05d1d0d12b80efa6f688336ccb
  $fDataRange4 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cBeEVwu5GubbJaivH4YJXGt
                   CapDL.AST.$fDataRange5) -}
8d568af229f384c333c1af5c0e9678d1
  $fDataRange5 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cGnhHXsqvVHCHywDJmvXTAf
                   CapDL.AST.$fDataRange6) -}
570b6a6a0be9004c0095d8f59388af3c
  $fDataRange6 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cHDJlqyJeNTqEMly4Mbczqx
                   (GHC.Types.[] @ Data.Data.Constr)) -}
5cc9ec722646a4b2ea39c7485b0e8360
  $fDataRange7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Range"#) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange8 ::
    GHC.Prim.Proxy# CapDL.AST.Range -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (wild :: GHC.Prim.Proxy# CapDL.AST.Range) ->
                 CapDL.AST.$fDataRange9) -}
f6a4dd9ea17c0b05963941fce4b47352
  $fDataRange9 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case Data.Typeable.Internal.typeRepFingerprints
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.TypeRep) of kt_fps { DEFAULT ->
                 case GHC.Fingerprint.fingerprintFingerprints
                        (GHC.Types.:
                           @ GHC.Fingerprint.Type.Fingerprint
                           CapDL.AST.$fDataRange10
                           kt_fps) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                 Data.Typeable.Internal.TypeRep
                   dt1
                   dt2
                   CapDL.AST.$tcRange
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep) } }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c CapDL.AST.Range)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d. Data.Data.Data d => c (t d)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.Range)) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c CapDL.AST.Range)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.Range)) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cdataTypeOf :: CapDL.AST.Range -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: CapDL.AST.Range) ->
                 CapDL.AST.$t32an7muuY15D0WcodmT48I) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g) -> CapDL.AST.Range -> c CapDL.AST.Range
  {- Arity: 3, Strictness: <L,C(C1(C1(U)))><L,1*C1(U)><S,1*U>,
     Unfolding: (\ @ (c :: * -> *)
                   (k :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
                   (z :: forall g. g -> c g)
                   (ds1 :: CapDL.AST.Range) ->
                 case ds1 of wild {
                   CapDL.AST.Only a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.Range
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.Range) CapDL.AST.Only)
                        a1
                   CapDL.AST.FromTo a1 a2
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.Range
                        Data.Data.$fDataWord
                        (k @ GHC.Types.Word
                           @ (GHC.Types.Word -> CapDL.AST.Range)
                           Data.Data.$fDataWord
                           (z @ (GHC.Types.Word -> GHC.Types.Word -> CapDL.AST.Range)
                              CapDL.AST.FromTo)
                           a1)
                        a2
                   CapDL.AST.From a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.Range
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.Range) CapDL.AST.From)
                        a1
                   CapDL.AST.To a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.Range
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.Range) CapDL.AST.To)
                        a1
                   CapDL.AST.All -> z @ CapDL.AST.Range CapDL.AST.All }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.Range -> m CapDL.AST.Range
  {- Arity: 3,
     Strictness: <S,U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   (ds1 :: forall d. Data.Data.Data d => d -> m d)
                   (eta :: CapDL.AST.Range) ->
                 let {
                   k :: forall d b. Data.Data.Data d => m (d -> b) -> d -> m b
                     {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                   = \ @ d
                       @ b
                       ($dData1 :: Data.Data.Data d)
                       (c :: m (d -> b))[OneShot]
                       (x :: d)[OneShot] ->
                     let {
                       lvl396 :: m d = ds1 @ d $dData1 x
                     } in
                     GHC.Base.>>=
                       @ m
                       $dMonad
                       @ (d -> b)
                       @ b
                       c
                       (\ (c' :: d -> b) ->
                        GHC.Base.>>=
                          @ m
                          $dMonad
                          @ d
                          @ b
                          lvl396
                          (\ (x' :: d) -> GHC.Base.return @ m $dMonad @ b (c' x')))
                 } in
                 case eta of wild {
                   CapDL.AST.Only a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.Range
                        Data.Data.$fDataWord
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Types.Word -> CapDL.AST.Range)
                           CapDL.AST.Only)
                        a1
                   CapDL.AST.FromTo a1 a2
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.Range
                        Data.Data.$fDataWord
                        (k @ GHC.Types.Word
                           @ (GHC.Types.Word -> CapDL.AST.Range)
                           Data.Data.$fDataWord
                           (GHC.Base.return
                              @ m
                              $dMonad
                              @ (GHC.Types.Word -> GHC.Types.Word -> CapDL.AST.Range)
                              CapDL.AST.FromTo)
                           a1)
                        a2
                   CapDL.AST.From a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.Range
                        Data.Data.$fDataWord
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Types.Word -> CapDL.AST.Range)
                           CapDL.AST.From)
                        a1
                   CapDL.AST.To a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.Range
                        Data.Data.$fDataWord
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Types.Word -> CapDL.AST.Range)
                           CapDL.AST.To)
                        a1
                   CapDL.AST.All
                   -> GHC.Base.return
                        @ m
                        $dMonad
                        @ CapDL.AST.Range
                        CapDL.AST.All }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.Range -> m CapDL.AST.Range
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U> -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.Range -> m CapDL.AST.Range
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U> -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u) -> CapDL.AST.Range -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ u
                   (ds1 :: forall d. Data.Data.Data d => d -> u)
                   (eta :: CapDL.AST.Range) ->
                 CapDL.AST.$fDataRange_$cgmapQr
                   @ [u]
                   @ u
                   (GHC.Types.: @ u)
                   (GHC.Types.[] @ u)
                   ds1
                   eta) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u) -> CapDL.AST.Range -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   (w :: GHC.Types.Int)
                   (w1 :: forall d. Data.Data.Data d => d -> u)
                   (w2 :: CapDL.AST.Range) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.AST.$w$cgmapQi @ u ww1 w1 w2 }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.Range
    -> r
  {- Arity: 4, Strictness: <L,C(C1(U))><L,U><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r -> r' -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (eta :: CapDL.AST.Range) ->
                 case eta of wild {
                   CapDL.AST.Only a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.FromTo a1 a2
                   -> ds1
                        (ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1))
                        (ds3 @ GHC.Types.Word Data.Data.$fDataWord a2)
                   CapDL.AST.From a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.To a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.All -> ds2 }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.Range
    -> r
  {- Arity: 4, Strictness: <L,C(C1(U))><L,U><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r' -> r -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (x0 :: CapDL.AST.Range) ->
                 case x0 of wild {
                   CapDL.AST.Only a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2
                   CapDL.AST.FromTo a1 a2
                   -> ds1
                        (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                        (ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a2) ds2)
                   CapDL.AST.From a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2
                   CapDL.AST.To a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2
                   CapDL.AST.All -> ds2 }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> CapDL.AST.Range -> CapDL.AST.Range
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: (\ (ds1 :: forall b. Data.Data.Data b => b -> b)
                   (x0 :: CapDL.AST.Range) ->
                 case x0 of wild {
                   CapDL.AST.Only a1
                   -> CapDL.AST.Only (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.FromTo a1 a2
                   -> CapDL.AST.FromTo
                        (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                        (ds1 @ GHC.Types.Word Data.Data.$fDataWord a2)
                   CapDL.AST.From a1
                   -> CapDL.AST.From (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.To a1
                   -> CapDL.AST.To (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.All -> CapDL.AST.All }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r) -> Data.Data.Constr -> c CapDL.AST.Range
  {- Arity: 3,
     Strictness: <L,C(C1(U))><L,1*C1(U)><S(SLLLL),1*U(1*U,A,A,A,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (w2 :: Data.Data.Constr) ->
                 case w2 of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 CapDL.AST.$w$cgunfold1 @ c w w1 ww1 ww5 }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$cp1Data ::
    Data.Typeable.Internal.Typeable CapDL.AST.Range
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataRange8
                  `cast`
                (Sym (Data.Typeable.Internal.N:Typeable[0]
                          <*>_N <CapDL.AST.Range>_N)) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fDataRange_$ctoConstr :: CapDL.AST.Range -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Range) ->
                 case ds1 of wild {
                   CapDL.AST.Only ds2 -> CapDL.AST.$cGFy7wJHHzBtHKjGMXbFh3U
                   CapDL.AST.FromTo ds2 ds3 -> CapDL.AST.$c1pw1JFwEEK5LN04JfejIvo
                   CapDL.AST.From ds2 -> CapDL.AST.$cBeEVwu5GubbJaivH4YJXGt
                   CapDL.AST.To ds2 -> CapDL.AST.$cGnhHXsqvVHCHywDJmvXTAf
                   CapDL.AST.All -> CapDL.AST.$cHDJlqyJeNTqEMly4Mbczqx }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam :: Data.Data.Data CapDL.AST.SCExtraParam
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.SCExtraParam
                  CapDL.AST.$fDataSCExtraParam_$cp1Data
                  CapDL.AST.$fDataSCExtraParam_$cgfoldl
                  CapDL.AST.$fDataSCExtraParam_$cgunfold
                  CapDL.AST.$fDataSCExtraParam_$ctoConstr
                  CapDL.AST.$fDataSCExtraParam_$cdataTypeOf
                  CapDL.AST.$fDataSCExtraParam_$cdataCast1
                  CapDL.AST.$fDataSCExtraParam_$cdataCast2
                  CapDL.AST.$fDataSCExtraParam_$cgmapT
                  CapDL.AST.$fDataSCExtraParam_$cgmapQl
                  CapDL.AST.$fDataSCExtraParam_$cgmapQr
                  CapDL.AST.$fDataSCExtraParam_$cgmapQ
                  CapDL.AST.$fDataSCExtraParam_$cgmapQi
                  CapDL.AST.$fDataSCExtraParam_$cgmapM
                  CapDL.AST.$fDataSCExtraParam_$cgmapMp
                  CapDL.AST.$fDataSCExtraParam_$cgmapMo -}
9a30b49e83752f9c955ca4dbc555a204
  $fDataSCExtraParam1 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep CapDL.AST.$fDataSCExtraParam2) -}
ce0454b359d034ebcb171bc04e38f2a5
  $fDataSCExtraParam2 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cEm0ZPTKbqWhCAwYbRoT3CW
                   CapDL.AST.$fDataSCExtraParam3) -}
6db8ce9b1baf278c0e28ec4f19ca1abb
  $fDataSCExtraParam3 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c1V4HrbeocTB4u8mEBgEiCh
                   CapDL.AST.$fDataSCExtraParam4) -}
0513959114f6efb06a2f02262a586f87
  $fDataSCExtraParam4 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cLS4KZ9a43hU8mrejMOXNoy
                   (GHC.Types.[] @ Data.Data.Constr)) -}
ba85fb912607e4fde174e2c2804aecb0
  $fDataSCExtraParam5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SCExtraParam"#) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam6 ::
    GHC.Prim.Proxy# CapDL.AST.SCExtraParam
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (wild :: GHC.Prim.Proxy# CapDL.AST.SCExtraParam) ->
                 CapDL.AST.$fDataSCExtraParam7) -}
959d26e01ca95b702843b925eb5b49c8
  $fDataSCExtraParam7 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case Data.Typeable.Internal.typeRepFingerprints
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.TypeRep) of kt_fps { DEFAULT ->
                 case GHC.Fingerprint.fingerprintFingerprints
                        (GHC.Types.:
                           @ GHC.Fingerprint.Type.Fingerprint
                           CapDL.AST.$fDataSCExtraParam8
                           kt_fps) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                 Data.Typeable.Internal.TypeRep
                   dt1
                   dt2
                   CapDL.AST.$tcSCExtraParam
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep) } }) -}
26d5557e3cb7fdc3ca7a9ec0a5169f61
  $fDataSCExtraParam8 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   10394957545638284049##
                   13764694531233523696##) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c CapDL.AST.SCExtraParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d. Data.Data.Data d => c (t d)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.SCExtraParam)) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c CapDL.AST.SCExtraParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.SCExtraParam)) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cdataTypeOf ::
    CapDL.AST.SCExtraParam -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: CapDL.AST.SCExtraParam) ->
                 CapDL.AST.$t4e4jCyU3MiO9O2Paz0MBo6) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> CapDL.AST.SCExtraParam
    -> c CapDL.AST.SCExtraParam
  {- Arity: 3,
     Strictness: <C(C(C(S))),1*C1(C1(C1(U)))><L,1*C1(U)><S,1*U>,
     Unfolding: (\ @ (c :: * -> *)
                   (k :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
                   (z :: forall g. g -> c g)
                   (ds1 :: CapDL.AST.SCExtraParam) ->
                 case ds1 of wild {
                   CapDL.AST.Period a1
                   -> k @ GHC.Word.Word64
                        @ CapDL.AST.SCExtraParam
                        Data.Data.$fDataWord64
                        (z @ (GHC.Word.Word64 -> CapDL.AST.SCExtraParam) CapDL.AST.Period)
                        a1
                   CapDL.AST.Budget a1
                   -> k @ GHC.Word.Word64
                        @ CapDL.AST.SCExtraParam
                        Data.Data.$fDataWord64
                        (z @ (GHC.Word.Word64 -> CapDL.AST.SCExtraParam) CapDL.AST.Budget)
                        a1
                   CapDL.AST.SCData a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.SCExtraParam
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.SCExtraParam) CapDL.AST.SCData)
                        a1 }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.SCExtraParam -> m CapDL.AST.SCExtraParam
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   (ds1 :: forall d. Data.Data.Data d => d -> m d)
                   (eta :: CapDL.AST.SCExtraParam) ->
                 let {
                   k :: forall d b. Data.Data.Data d => m (d -> b) -> d -> m b
                     {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
                   = \ @ d
                       @ b
                       ($dData1 :: Data.Data.Data d)[OneShot]
                       (c :: m (d -> b))[OneShot]
                       (x :: d)[OneShot] ->
                     let {
                       lvl396 :: m d = ds1 @ d $dData1 x
                     } in
                     GHC.Base.>>=
                       @ m
                       $dMonad
                       @ (d -> b)
                       @ b
                       c
                       (\ (c' :: d -> b) ->
                        GHC.Base.>>=
                          @ m
                          $dMonad
                          @ d
                          @ b
                          lvl396
                          (\ (x' :: d) -> GHC.Base.return @ m $dMonad @ b (c' x')))
                 } in
                 case eta of wild {
                   CapDL.AST.Period a1
                   -> k @ GHC.Word.Word64
                        @ CapDL.AST.SCExtraParam
                        Data.Data.$fDataWord64
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Word.Word64 -> CapDL.AST.SCExtraParam)
                           CapDL.AST.Period)
                        a1
                   CapDL.AST.Budget a1
                   -> k @ GHC.Word.Word64
                        @ CapDL.AST.SCExtraParam
                        Data.Data.$fDataWord64
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Word.Word64 -> CapDL.AST.SCExtraParam)
                           CapDL.AST.Budget)
                        a1
                   CapDL.AST.SCData a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.SCExtraParam
                        Data.Data.$fDataWord
                        (GHC.Base.return
                           @ m
                           $dMonad
                           @ (GHC.Types.Word -> CapDL.AST.SCExtraParam)
                           CapDL.AST.SCData)
                        a1 }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.SCExtraParam -> m CapDL.AST.SCExtraParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U> -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.SCExtraParam -> m CapDL.AST.SCExtraParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U> -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.SCExtraParam -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ u
                   (ds1 :: forall d. Data.Data.Data d => d -> u)
                   (eta :: CapDL.AST.SCExtraParam) ->
                 CapDL.AST.$fDataSCExtraParam_$cgmapQr
                   @ [u]
                   @ u
                   (GHC.Types.: @ u)
                   (GHC.Types.[] @ u)
                   ds1
                   eta) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.SCExtraParam
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   (w :: GHC.Types.Int)
                   (w1 :: forall d. Data.Data.Data d => d -> u)
                   (w2 :: CapDL.AST.SCExtraParam) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.AST.$w$cgmapQi3 @ u ww1 w1 w2 }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.SCExtraParam
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r -> r' -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (eta :: CapDL.AST.SCExtraParam) ->
                 case eta of wild {
                   CapDL.AST.Period a1
                   -> ds1 ds2 (ds3 @ GHC.Word.Word64 Data.Data.$fDataWord64 a1)
                   CapDL.AST.Budget a1
                   -> ds1 ds2 (ds3 @ GHC.Word.Word64 Data.Data.$fDataWord64 a1)
                   CapDL.AST.SCData a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.SCExtraParam
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r' -> r -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (x0 :: CapDL.AST.SCExtraParam) ->
                 case x0 of wild {
                   CapDL.AST.Period a1
                   -> ds1 (ds3 @ GHC.Word.Word64 Data.Data.$fDataWord64 a1) ds2
                   CapDL.AST.Budget a1
                   -> ds1 (ds3 @ GHC.Word.Word64 Data.Data.$fDataWord64 a1) ds2
                   CapDL.AST.SCData a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2 }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> CapDL.AST.SCExtraParam -> CapDL.AST.SCExtraParam
  {- Arity: 2, Strictness: <L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ (ds1 :: forall b. Data.Data.Data b => b -> b)
                   (x0 :: CapDL.AST.SCExtraParam) ->
                 case x0 of wild {
                   CapDL.AST.Period a1
                   -> CapDL.AST.Period
                        (ds1 @ GHC.Word.Word64 Data.Data.$fDataWord64 a1)
                   CapDL.AST.Budget a1
                   -> CapDL.AST.Budget
                        (ds1 @ GHC.Word.Word64 Data.Data.$fDataWord64 a1)
                   CapDL.AST.SCData a1
                   -> CapDL.AST.SCData
                        (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1) }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c CapDL.AST.SCExtraParam
  {- Arity: 3,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*C1(U)><S(SLLLL),1*U(1*U,A,A,A,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (w2 :: Data.Data.Constr) ->
                 case w2 of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 CapDL.AST.$w$cgunfold5 @ c w w1 ww1 ww5 }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$cp1Data ::
    Data.Typeable.Internal.Typeable CapDL.AST.SCExtraParam
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataSCExtraParam6
                  `cast`
                (Sym (Data.Typeable.Internal.N:Typeable[0]
                          <*>_N <CapDL.AST.SCExtraParam>_N)) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fDataSCExtraParam_$ctoConstr ::
    CapDL.AST.SCExtraParam -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.SCExtraParam) ->
                 case ds1 of wild {
                   CapDL.AST.Period ds2 -> CapDL.AST.$cEm0ZPTKbqWhCAwYbRoT3CW
                   CapDL.AST.Budget ds2 -> CapDL.AST.$c1V4HrbeocTB4u8mEBgEiCh
                   CapDL.AST.SCData ds2 -> CapDL.AST.$cLS4KZ9a43hU8mrejMOXNoy }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam :: Data.Data.Data CapDL.AST.TCBExtraParam
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.TCBExtraParam
                  CapDL.AST.$fDataTCBExtraParam_$cp1Data
                  CapDL.AST.$fDataTCBExtraParam_$cgfoldl
                  CapDL.AST.$fDataTCBExtraParam_$cgunfold
                  CapDL.AST.$fDataTCBExtraParam_$ctoConstr
                  CapDL.AST.$fDataTCBExtraParam_$cdataTypeOf
                  CapDL.AST.$fDataTCBExtraParam_$cdataCast1
                  CapDL.AST.$fDataTCBExtraParam_$cdataCast2
                  CapDL.AST.$fDataTCBExtraParam_$cgmapT
                  CapDL.AST.$fDataTCBExtraParam_$cgmapQl
                  CapDL.AST.$fDataTCBExtraParam_$cgmapQr
                  CapDL.AST.$fDataTCBExtraParam_$cgmapQ
                  CapDL.AST.$fDataTCBExtraParam_$cgmapQi
                  CapDL.AST.$fDataTCBExtraParam_$cgmapM
                  CapDL.AST.$fDataTCBExtraParam_$cgmapMp
                  CapDL.AST.$fDataTCBExtraParam_$cgmapMo -}
6ddb3aebd1fb0807d3ca382902ff6ee3
  $fDataTCBExtraParam1 :: Data.Data.DataRep
  {- Strictness: m1,
     Unfolding: (Data.Data.AlgRep CapDL.AST.$fDataTCBExtraParam2) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam10 ::
    GHC.Prim.Proxy# CapDL.AST.TCBExtraParam
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (wild :: GHC.Prim.Proxy# CapDL.AST.TCBExtraParam) ->
                 CapDL.AST.$fDataTCBExtraParam11) -}
e8cf9bce34c4e4b0067acdb82f300ed8
  $fDataTCBExtraParam11 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case Data.Typeable.Internal.typeRepFingerprints
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.TypeRep) of kt_fps { DEFAULT ->
                 case GHC.Fingerprint.fingerprintFingerprints
                        (GHC.Types.:
                           @ GHC.Fingerprint.Type.Fingerprint
                           CapDL.AST.$fDataTCBExtraParam12
                           kt_fps) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                 Data.Typeable.Internal.TypeRep
                   dt1
                   dt2
                   CapDL.AST.$tcTCBExtraParam
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep) } }) -}
433da2060ae4597c1bb88429644545b2
  $fDataTCBExtraParam12 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   12696014723497797010##
                   1473543369386713157##) -}
d3c9e5da62fbef9d45a31bb81937fb5c
  $fDataTCBExtraParam2 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c8RFBy5i1RHuIZoqT1hIDX9
                   CapDL.AST.$fDataTCBExtraParam3) -}
0a6251e81e366f604628b03c77ee39b3
  $fDataTCBExtraParam3 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c58yH4axDEMA2tbMMYoH0AK
                   CapDL.AST.$fDataTCBExtraParam4) -}
26d1fc64a7a5db1fa7fe8054f8460d64
  $fDataTCBExtraParam4 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$c6B1UDuF3PEZ0HrCVJNPr5X
                   CapDL.AST.$fDataTCBExtraParam5) -}
c0a829401e43d19da09d63e60767a7d9
  $fDataTCBExtraParam5 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cBnVedawzg2LEa3VfOmmMIM
                   CapDL.AST.$fDataTCBExtraParam6) -}
162c84336a4124d9118e80f409768063
  $fDataTCBExtraParam6 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cHM56tUKrf2HAi8qJMyt2uw
                   CapDL.AST.$fDataTCBExtraParam7) -}
10c76c7b62409a9dc4a1d3e62cfa64c7
  $fDataTCBExtraParam7 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cU78cAIQ3DeHYM8Qt9bZKM
                   CapDL.AST.$fDataTCBExtraParam8) -}
7feee4af904d22345e73364afd361b6e
  $fDataTCBExtraParam8 :: [Data.Data.Constr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Data.Constr
                   CapDL.AST.$cEiBgmchEkaX8HDOXRYp5p6
                   (GHC.Types.[] @ Data.Data.Constr)) -}
46e57f518d96af46d6524cbe71cd7cb3
  $fDataTCBExtraParam9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TCBExtraParam"#) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c (t d))
    -> GHC.Base.Maybe (c CapDL.AST.TCBExtraParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d. Data.Data.Data d => c (t d)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.TCBExtraParam)) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c CapDL.AST.TCBExtraParam)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c CapDL.AST.TCBExtraParam)) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cdataTypeOf ::
    CapDL.AST.TCBExtraParam -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: CapDL.AST.TCBExtraParam) ->
                 CapDL.AST.$t79YE5L5lAUB0inF72oCUyr) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cgfoldl ::
    (forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
    -> (forall g. g -> c g)
    -> CapDL.AST.TCBExtraParam
    -> c CapDL.AST.TCBExtraParam
  {- Arity: 3,
     Strictness: <C(C(C(S))),1*C1(C1(C1(U)))><L,1*C1(U)><S,1*U>,
     Unfolding: (\ @ (c :: * -> *)
                   (k :: forall d b. Data.Data.Data d => c (d -> b) -> d -> c b)
                   (z :: forall g. g -> c g)
                   (ds1 :: CapDL.AST.TCBExtraParam) ->
                 case ds1 of wild {
                   CapDL.AST.Addr a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.TCBExtraParam
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.TCBExtraParam) CapDL.AST.Addr)
                        a1
                   CapDL.AST.IP a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.TCBExtraParam
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.TCBExtraParam) CapDL.AST.IP)
                        a1
                   CapDL.AST.SP a1
                   -> k @ GHC.Types.Word
                        @ CapDL.AST.TCBExtraParam
                        Data.Data.$fDataWord
                        (z @ (GHC.Types.Word -> CapDL.AST.TCBExtraParam) CapDL.AST.SP)
                        a1
                   CapDL.AST.Elf a1
                   -> k @ GHC.Base.String
                        @ CapDL.AST.TCBExtraParam
                        Data.Data.$fData[]_$s$fData[]
                        (z @ (GHC.Base.String -> CapDL.AST.TCBExtraParam) CapDL.AST.Elf)
                        a1
                   CapDL.AST.Prio a1
                   -> k @ GHC.Integer.Type.Integer
                        @ CapDL.AST.TCBExtraParam
                        Data.Data.$fDataInteger
                        (z @ (GHC.Integer.Type.Integer -> CapDL.AST.TCBExtraParam)
                           CapDL.AST.Prio)
                        a1
                   CapDL.AST.MaxPrio a1
                   -> k @ GHC.Integer.Type.Integer
                        @ CapDL.AST.TCBExtraParam
                        Data.Data.$fDataInteger
                        (z @ (GHC.Integer.Type.Integer -> CapDL.AST.TCBExtraParam)
                           CapDL.AST.MaxPrio)
                        a1
                   CapDL.AST.Affinity a1
                   -> k @ GHC.Integer.Type.Integer
                        @ CapDL.AST.TCBExtraParam
                        Data.Data.$fDataInteger
                        (z @ (GHC.Integer.Type.Integer -> CapDL.AST.TCBExtraParam)
                           CapDL.AST.Affinity)
                        a1 }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.TCBExtraParam -> m CapDL.AST.TCBExtraParam
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><S,1*U> -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cgmapMo ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.TCBExtraParam -> m CapDL.AST.TCBExtraParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U> -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cgmapMp ::
    GHC.Base.MonadPlus m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> CapDL.AST.TCBExtraParam -> m CapDL.AST.TCBExtraParam
  {- Arity: 3,
     Strictness: <S(LSLL),U(A,1*U,U,C(C1(U)))><L,C(C1(U))><L,1*U> -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cgmapQ ::
    (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.TCBExtraParam -> [u]
  {- Arity: 2, Strictness: <L,C(C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ u
                   (ds1 :: forall d. Data.Data.Data d => d -> u)
                   (eta :: CapDL.AST.TCBExtraParam) ->
                 CapDL.AST.$fDataTCBExtraParam_$cgmapQr
                   @ [u]
                   @ u
                   (GHC.Types.: @ u)
                   (GHC.Types.[] @ u)
                   ds1
                   eta) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cgmapQi ::
    GHC.Types.Int
    -> (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.TCBExtraParam
    -> u
  {- Arity: 3,
     Strictness: <S(S),1*U(1*U)><C(C(S)),1*C1(C1(U))><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   (w :: GHC.Types.Int)
                   (w1 :: forall d. Data.Data.Data d => d -> u)
                   (w2 :: CapDL.AST.TCBExtraParam) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.AST.$w$cgmapQi4 @ u ww1 w1 w2 }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cgmapQl ::
    (r -> r' -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.TCBExtraParam
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r -> r' -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (eta :: CapDL.AST.TCBExtraParam) ->
                 case eta of wild {
                   CapDL.AST.Addr a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.IP a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.SP a1
                   -> ds1 ds2 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.Elf a1
                   -> ds1 ds2 (ds3 @ GHC.Base.String Data.Data.$fData[]_$s$fData[] a1)
                   CapDL.AST.Prio a1
                   -> ds1
                        ds2
                        (ds3 @ GHC.Integer.Type.Integer Data.Data.$fDataInteger a1)
                   CapDL.AST.MaxPrio a1
                   -> ds1
                        ds2
                        (ds3 @ GHC.Integer.Type.Integer Data.Data.$fDataInteger a1)
                   CapDL.AST.Affinity a1
                   -> ds1
                        ds2
                        (ds3 @ GHC.Integer.Type.Integer Data.Data.$fDataInteger a1) }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cgmapQr ::
    (r' -> r -> r)
    -> r
    -> (forall d. Data.Data.Data d => d -> r')
    -> CapDL.AST.TCBExtraParam
    -> r
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ @ r
                   @ r'
                   (ds1 :: r' -> r -> r)
                   (ds2 :: r)
                   (ds3 :: forall d. Data.Data.Data d => d -> r')
                   (x0 :: CapDL.AST.TCBExtraParam) ->
                 case x0 of wild {
                   CapDL.AST.Addr a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2
                   CapDL.AST.IP a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2
                   CapDL.AST.SP a1
                   -> ds1 (ds3 @ GHC.Types.Word Data.Data.$fDataWord a1) ds2
                   CapDL.AST.Elf a1
                   -> ds1 (ds3 @ GHC.Base.String Data.Data.$fData[]_$s$fData[] a1) ds2
                   CapDL.AST.Prio a1
                   -> ds1
                        (ds3 @ GHC.Integer.Type.Integer Data.Data.$fDataInteger a1)
                        ds2
                   CapDL.AST.MaxPrio a1
                   -> ds1
                        (ds3 @ GHC.Integer.Type.Integer Data.Data.$fDataInteger a1)
                        ds2
                   CapDL.AST.Affinity a1
                   -> ds1
                        (ds3 @ GHC.Integer.Type.Integer Data.Data.$fDataInteger a1)
                        ds2 }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cgmapT ::
    (forall b. Data.Data.Data b => b -> b)
    -> CapDL.AST.TCBExtraParam -> CapDL.AST.TCBExtraParam
  {- Arity: 2, Strictness: <L,1*C1(C1(U))><S,1*U>,
     Unfolding: (\ (ds1 :: forall b. Data.Data.Data b => b -> b)
                   (x0 :: CapDL.AST.TCBExtraParam) ->
                 case x0 of wild {
                   CapDL.AST.Addr a1
                   -> CapDL.AST.Addr (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.IP a1
                   -> CapDL.AST.IP (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.SP a1
                   -> CapDL.AST.SP (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1)
                   CapDL.AST.Elf a1
                   -> CapDL.AST.Elf
                        (ds1 @ GHC.Base.String Data.Data.$fData[]_$s$fData[] a1)
                   CapDL.AST.Prio a1
                   -> CapDL.AST.Prio
                        (ds1 @ GHC.Integer.Type.Integer Data.Data.$fDataInteger a1)
                   CapDL.AST.MaxPrio a1
                   -> CapDL.AST.MaxPrio
                        (ds1 @ GHC.Integer.Type.Integer Data.Data.$fDataInteger a1)
                   CapDL.AST.Affinity a1
                   -> CapDL.AST.Affinity
                        (ds1 @ GHC.Integer.Type.Integer Data.Data.$fDataInteger a1) }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.Constr
    -> c CapDL.AST.TCBExtraParam
  {- Arity: 3,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*C1(U)><S(SLLLL),1*U(1*U,A,A,A,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (w2 :: Data.Data.Constr) ->
                 case w2 of ww { Data.Data.Constr ww1 ww2 ww3 ww4 ww5 ->
                 CapDL.AST.$w$cgunfold6 @ c w w1 ww1 ww5 }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$cp1Data ::
    Data.Typeable.Internal.Typeable CapDL.AST.TCBExtraParam
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$fDataTCBExtraParam10
                  `cast`
                (Sym (Data.Typeable.Internal.N:Typeable[0]
                          <*>_N <CapDL.AST.TCBExtraParam>_N)) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fDataTCBExtraParam_$ctoConstr ::
    CapDL.AST.TCBExtraParam -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.TCBExtraParam) ->
                 case ds1 of wild {
                   CapDL.AST.Addr ds2 -> CapDL.AST.$c8RFBy5i1RHuIZoqT1hIDX9
                   CapDL.AST.IP ds2 -> CapDL.AST.$c58yH4axDEMA2tbMMYoH0AK
                   CapDL.AST.SP ds2 -> CapDL.AST.$c6B1UDuF3PEZ0HrCVJNPr5X
                   CapDL.AST.Elf ds2 -> CapDL.AST.$cBnVedawzg2LEa3VfOmmMIM
                   CapDL.AST.Prio ds2 -> CapDL.AST.$cHM56tUKrf2HAi8qJMyt2uw
                   CapDL.AST.MaxPrio ds2 -> CapDL.AST.$cU78cAIQ3DeHYM8Qt9bZKM
                   CapDL.AST.Affinity ds2 -> CapDL.AST.$cEiBgmchEkaX8HDOXRYp5p6 }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fEqCapParam :: GHC.Classes.Eq CapDL.AST.CapParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.CapParam
                  CapDL.AST.$fEqCapParam_$c==
                  CapDL.AST.$fEqCapParam_$c/= -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fEqCapParam_$c/= ::
    CapDL.AST.CapParam -> CapDL.AST.CapParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.CapParam) (b :: CapDL.AST.CapParam) ->
                 case CapDL.AST.$fEqCapParam_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fEqCapParam_$c== ::
    CapDL.AST.CapParam -> CapDL.AST.CapParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds1 :: CapDL.AST.CapParam)
                   (ds2 :: CapDL.AST.CapParam) ->
                 case ds1 of wild {
                   CapDL.AST.Rights a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Rights b1
                        -> Data.Set.Base.$fEqSet_$c==
                             @ CapDL.Model.Rights
                             CapDL.Model.$fEqRights
                             a1
                             b1 }
                   CapDL.AST.Masked a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Masked b1
                        -> Data.Set.Base.$fEqSet_$c==
                             @ CapDL.Model.Rights
                             CapDL.Model.$fEqRights
                             a1
                             b1 }
                   CapDL.AST.Guard a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Guard b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.GuardSize a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.GuardSize b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.IRQRef
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False CapDL.AST.IRQRef -> GHC.Types.True }
                   CapDL.AST.Badge a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Badge b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.Core a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Core b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.Reply
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False CapDL.AST.Reply -> GHC.Types.True }
                   CapDL.AST.MasterReply
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.MasterReply -> GHC.Types.True }
                   CapDL.AST.Asid a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Asid b1
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild2 { GHC.Types.W# x ->
                           case ww4 of wild3 { GHC.Types.W# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.eqWord# x y) of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Classes.eqWord ww2 ww5 } } } } } }
                   CapDL.AST.Cached a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Cached b1 -> GHC.Classes.$fEqBool_$c== a1 b1 }
                   CapDL.AST.FrameMapping a1 a2
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.FrameMapping b1 b2
                        -> case a1 of ww { (,) ww1 ww2 ->
                           case b1 of ww3 { (,) ww4 ww5 ->
                           case GHC.Base.eqString ww1 ww4 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Classes.$fEq[]_$c==
                                       @ CapDL.AST.Range
                                       CapDL.AST.$fEqRange
                                       ww2
                                       ww5 of wild3 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True -> GHC.Classes.eqWord a2 b2 } } } } } }) -}
dde4225cb073b0222131e34641a850ba
  $fEqFrameExtraParam :: GHC.Classes.Eq CapDL.AST.FrameExtraParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.FrameExtraParam
                  CapDL.AST.$fEqFrameExtraParam_$c==
                  CapDL.AST.$fEqFrameExtraParam_$c/= -}
dde4225cb073b0222131e34641a850ba
  $fEqFrameExtraParam_$c/= ::
    CapDL.AST.FrameExtraParam
    -> CapDL.AST.FrameExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.FrameExtraParam)
                   (b :: CapDL.AST.FrameExtraParam) ->
                 case a of wild { CapDL.AST.Fill a1 ->
                 case b of wild1 { CapDL.AST.Fill b1 ->
                 case GHC.Classes.$fEq[]_$s$c==2 a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
dde4225cb073b0222131e34641a850ba
  $fEqFrameExtraParam_$c== ::
    CapDL.AST.FrameExtraParam
    -> CapDL.AST.FrameExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds1 :: CapDL.AST.FrameExtraParam)
                   (ds2 :: CapDL.AST.FrameExtraParam) ->
                 case ds1 of wild { CapDL.AST.Fill a1 ->
                 case ds2 of wild1 { CapDL.AST.Fill b1 ->
                 GHC.Classes.$fEq[]_$s$c==2 a1 b1 } }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fEqIOAPICIRQExtraParam ::
    GHC.Classes.Eq CapDL.AST.IOAPICIRQExtraParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.IOAPICIRQExtraParam
                  CapDL.AST.$fEqIOAPICIRQExtraParam_$c==
                  CapDL.AST.$fEqIOAPICIRQExtraParam_$c/= -}
21eab1f918cd88a42e02e30804bad3d0
  $fEqIOAPICIRQExtraParam_$c/= ::
    CapDL.AST.IOAPICIRQExtraParam
    -> CapDL.AST.IOAPICIRQExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.IOAPICIRQExtraParam)
                   (b :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case CapDL.AST.$fEqIOAPICIRQExtraParam_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fEqIOAPICIRQExtraParam_$c== ::
    CapDL.AST.IOAPICIRQExtraParam
    -> CapDL.AST.IOAPICIRQExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds1 :: CapDL.AST.IOAPICIRQExtraParam)
                   (ds2 :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case ds1 of wild {
                   CapDL.AST.IOAPIC a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.IOAPIC b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.Pin a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Pin b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.Level a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Level b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.Polarity a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Polarity b1 -> GHC.Classes.eqWord a1 b1 } }) -}
519e5ee713264da3f66ce82e6106a9de
  $fEqKO :: GHC.Classes.Eq CapDL.AST.KO
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.KO CapDL.AST.$fEqKO_$c== CapDL.AST.$fEqKO_$c/= -}
497bcce7661816fe97f1bd1ab1e480fe
  $fEqKO1 :: GHC.Classes.Eq (CapDL.AST.Name, [CapDL.AST.Range])
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) CapDL.AST.$fEqKO_$s$fEq(,) -}
519e5ee713264da3f66ce82e6106a9de
  $fEqKODecl :: GHC.Classes.Eq CapDL.AST.KODecl
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.KODecl
                  CapDL.AST.$fEqKODecl_$c==
                  CapDL.AST.$fEqKODecl_$c/= -}
519e5ee713264da3f66ce82e6106a9de
  $fEqKODecl_$c/= ::
    CapDL.AST.KODecl -> CapDL.AST.KODecl -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(1*U,1*U,1*U))><S(SL),1*U(1*U,1*U(1*U,1*U,1*U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: CapDL.AST.KODecl) (w1 :: CapDL.AST.KODecl) ->
                 case w of ww { CapDL.AST.KODecl ww1 ww2 ->
                 case w1 of ww3 { CapDL.AST.KODecl ww4 ww5 ->
                 CapDL.AST.$w$c/= ww1 ww2 ww4 ww5 } }) -}
519e5ee713264da3f66ce82e6106a9de
  $fEqKODecl_$c== ::
    CapDL.AST.KODecl -> CapDL.AST.KODecl -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(1*U,1*U,1*U))><S(SL),1*U(1*U,1*U(1*U,1*U,1*U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: CapDL.AST.KODecl) (w1 :: CapDL.AST.KODecl) ->
                 case w of ww { CapDL.AST.KODecl ww1 ww2 ->
                 case w1 of ww3 { CapDL.AST.KODecl ww4 ww5 ->
                 CapDL.AST.$w$c==1 ww1 ww2 ww4 ww5 } }) -}
519e5ee713264da3f66ce82e6106a9de
  $fEqKO_$c/= :: CapDL.AST.KO -> CapDL.AST.KO -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.KO) (b :: CapDL.AST.KO) ->
                 case CapDL.AST.$fEqKO_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
519e5ee713264da3f66ce82e6106a9de
  $fEqKO_$c== :: CapDL.AST.KO -> CapDL.AST.KO -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: CapDL.AST.KO) (w1 :: CapDL.AST.KO) ->
                 case w of ww { CapDL.AST.Obj ww1 ww2 ww3 ->
                 case w1 of ww4 { CapDL.AST.Obj ww5 ww6 ww7 ->
                 CapDL.AST.$w$c== ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
89ae36ecd6832aacd8701791bfd48f1d
  $fEqKO_$dEq :: GHC.Classes.Eq CapDL.AST.Range
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) CapDL.AST.$fEqRange -}
7350e497d57f6332589d7232070c5cdb
  $fEqKO_$s$fEq(,) ::
    GHC.Classes.Eq ([GHC.Types.Char], [CapDL.AST.Range])
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ([GHC.Types.Char], [CapDL.AST.Range])
                  (GHC.Classes.$fEq(,)_$c==
                     @ [GHC.Types.Char]
                     @ [CapDL.AST.Range]
                     GHC.Classes.$fEq[]_$s$fEq[]1
                     CapDL.AST.$fEqKO_$s$fOrd[]_$cp1Ord)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ [GHC.Types.Char]
                     @ [CapDL.AST.Range]
                     GHC.Classes.$fEq[]_$s$fEq[]1
                     CapDL.AST.$fEqKO_$s$fOrd[]_$cp1Ord) -}
519e5ee713264da3f66ce82e6106a9de
  $fEqKO_$s$fEqEither ::
    GHC.Classes.Eq
      (Data.Either.Either
         CapDL.AST.KODecl (CapDL.AST.Name, [CapDL.AST.Range]))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       CapDL.AST.KODecl (CapDL.AST.Name, [CapDL.AST.Range]))
                  (Data.Either.$fEqEither_$c==
                     @ CapDL.AST.KODecl
                     @ (CapDL.AST.Name, [CapDL.AST.Range])
                     CapDL.AST.$fEqKO1
                     CapDL.AST.$fEqKODecl)
                  (Data.Either.$fEqEither_$c/=
                     @ CapDL.AST.KODecl
                     @ (CapDL.AST.Name, [CapDL.AST.Range])
                     CapDL.AST.$fEqKO1
                     CapDL.AST.$fEqKODecl) -}
51902493a17737b659b0dacfd14cbe75
  $fEqKO_$s$fEq[] :: GHC.Classes.Eq [CapDL.AST.Range]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [CapDL.AST.Range]
                  (GHC.Classes.$fEq[]_$c== @ CapDL.AST.Range CapDL.AST.$fEqKO_$dEq)
                  CapDL.AST.$fEqKO_$s$fEq[]_$c/= -}
da7f4b1c05af4c2529dde9f6c05c3ce7
  $fEqKO_$s$fEq[]_$c/= ::
    [CapDL.AST.Range] -> [CapDL.AST.Range] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [CapDL.AST.Range]) (y :: [CapDL.AST.Range]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c==
                      @ CapDL.AST.Range
                      CapDL.AST.$fEqKO_$dEq
                      x
                      y)) -}
8eeca62f36ba3a15c3f6f181d5e45007
  $fEqKO_$s$fOrd[]_$cp1Ord :: GHC.Classes.Eq [CapDL.AST.Range]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) CapDL.AST.$fEqKO_$s$fEq[] -}
fc7d603deecce0f538ad1f168f348536
  $fEqMSIIRQExtraParam :: GHC.Classes.Eq CapDL.AST.MSIIRQExtraParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.MSIIRQExtraParam
                  CapDL.AST.$fEqMSIIRQExtraParam_$c==
                  CapDL.AST.$fEqMSIIRQExtraParam_$c/= -}
fc7d603deecce0f538ad1f168f348536
  $fEqMSIIRQExtraParam_$c/= ::
    CapDL.AST.MSIIRQExtraParam
    -> CapDL.AST.MSIIRQExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.MSIIRQExtraParam)
                   (b :: CapDL.AST.MSIIRQExtraParam) ->
                 case CapDL.AST.$fEqMSIIRQExtraParam_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
fc7d603deecce0f538ad1f168f348536
  $fEqMSIIRQExtraParam_$c== ::
    CapDL.AST.MSIIRQExtraParam
    -> CapDL.AST.MSIIRQExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds1 :: CapDL.AST.MSIIRQExtraParam)
                   (ds2 :: CapDL.AST.MSIIRQExtraParam) ->
                 case ds1 of wild {
                   CapDL.AST.MSIHandle a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.MSIHandle b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.MSIPCIBus a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.MSIPCIBus b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.MSIPCIDev a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.MSIPCIDev b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.MSIPCIFun a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.MSIPCIFun b1 -> GHC.Classes.eqWord a1 b1 } }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fEqObjParam :: GHC.Classes.Eq CapDL.AST.ObjParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.ObjParam
                  CapDL.AST.$fEqObjParam_$c==
                  CapDL.AST.$fEqObjParam_$c/= -}
c9bd94a581800fbb5b80072a4c9344c7
  $fEqObjParam_$c/= ::
    CapDL.AST.ObjParam -> CapDL.AST.ObjParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.ObjParam) (b :: CapDL.AST.ObjParam) ->
                 case CapDL.AST.$fEqObjParam_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fEqObjParam_$c== ::
    CapDL.AST.ObjParam -> CapDL.AST.ObjParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
3578ccc8a9d40f34b37cc824007f79f9
  $fEqRange :: GHC.Classes.Eq CapDL.AST.Range
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.Range
                  CapDL.AST.$fEqRange_$c==
                  CapDL.AST.$fEqRange_$c/= -}
3578ccc8a9d40f34b37cc824007f79f9
  $fEqRange_$c/= ::
    CapDL.AST.Range -> CapDL.AST.Range -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.Range) (b :: CapDL.AST.Range) ->
                 case CapDL.AST.$fEqRange_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fEqRange_$c== ::
    CapDL.AST.Range -> CapDL.AST.Range -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds1 :: CapDL.AST.Range) (ds2 :: CapDL.AST.Range) ->
                 case ds1 of wild {
                   CapDL.AST.Only a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Only b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.FromTo a1 a2
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.FromTo b1 b2
                        -> case a1 of wild2 { GHC.Types.W# x ->
                           case b1 of wild3 { GHC.Types.W# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.eqWord# x y) of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Classes.eqWord a2 b2 } } } }
                   CapDL.AST.From a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.From b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.To a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.To b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.All
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False CapDL.AST.All -> GHC.Types.True } }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fEqSCExtraParam :: GHC.Classes.Eq CapDL.AST.SCExtraParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.SCExtraParam
                  CapDL.AST.$fEqSCExtraParam_$c==
                  CapDL.AST.$fEqSCExtraParam_$c/= -}
20aa8a301e00eb831ce6d4fd05200c03
  $fEqSCExtraParam_$c/= ::
    CapDL.AST.SCExtraParam -> CapDL.AST.SCExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.SCExtraParam) (b :: CapDL.AST.SCExtraParam) ->
                 case CapDL.AST.$fEqSCExtraParam_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fEqSCExtraParam_$c== ::
    CapDL.AST.SCExtraParam -> CapDL.AST.SCExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds1 :: CapDL.AST.SCExtraParam)
                   (ds2 :: CapDL.AST.SCExtraParam) ->
                 case ds1 of wild {
                   CapDL.AST.Period a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Period b1 -> GHC.Word.eqWord64 a1 b1 }
                   CapDL.AST.Budget a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Budget b1 -> GHC.Word.eqWord64 a1 b1 }
                   CapDL.AST.SCData a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.SCData b1 -> GHC.Classes.eqWord a1 b1 } }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fEqTCBExtraParam :: GHC.Classes.Eq CapDL.AST.TCBExtraParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.TCBExtraParam
                  CapDL.AST.$fEqTCBExtraParam_$c==
                  CapDL.AST.$fEqTCBExtraParam_$c/= -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fEqTCBExtraParam_$c/= ::
    CapDL.AST.TCBExtraParam
    -> CapDL.AST.TCBExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.TCBExtraParam) (b :: CapDL.AST.TCBExtraParam) ->
                 case CapDL.AST.$fEqTCBExtraParam_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fEqTCBExtraParam_$c== ::
    CapDL.AST.TCBExtraParam
    -> CapDL.AST.TCBExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds1 :: CapDL.AST.TCBExtraParam)
                   (ds2 :: CapDL.AST.TCBExtraParam) ->
                 case ds1 of wild {
                   CapDL.AST.Addr a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Addr b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.IP a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.IP b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.SP a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.SP b1 -> GHC.Classes.eqWord a1 b1 }
                   CapDL.AST.Elf a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Elf b1 -> GHC.Base.eqString a1 b1 }
                   CapDL.AST.Prio a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Prio b1 -> GHC.Integer.Type.eqInteger a1 b1 }
                   CapDL.AST.MaxPrio a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.MaxPrio b1 -> GHC.Integer.Type.eqInteger a1 b1 }
                   CapDL.AST.Affinity a1
                   -> case ds2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Affinity b1 -> GHC.Integer.Type.eqInteger a1 b1 } }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fOrdCapParam :: GHC.Classes.Ord CapDL.AST.CapParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.CapParam
                  CapDL.AST.$fEqCapParam
                  CapDL.AST.$fOrdCapParam_$ccompare
                  CapDL.AST.$fOrdCapParam_$c<
                  CapDL.AST.$fOrdCapParam_$c<=
                  CapDL.AST.$fOrdCapParam_$c>
                  CapDL.AST.$fOrdCapParam_$c>=
                  CapDL.AST.$fOrdCapParam_$cmax
                  CapDL.AST.$fOrdCapParam_$cmin -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fOrdCapParam_$c< ::
    CapDL.AST.CapParam -> CapDL.AST.CapParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.CapParam) (y :: CapDL.AST.CapParam) ->
                 case CapDL.AST.$fOrdCapParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fOrdCapParam_$c<= ::
    CapDL.AST.CapParam -> CapDL.AST.CapParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.CapParam) (y :: CapDL.AST.CapParam) ->
                 case CapDL.AST.$fOrdCapParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fOrdCapParam_$c> ::
    CapDL.AST.CapParam -> CapDL.AST.CapParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.CapParam) (y :: CapDL.AST.CapParam) ->
                 case CapDL.AST.$fOrdCapParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fOrdCapParam_$c>= ::
    CapDL.AST.CapParam -> CapDL.AST.CapParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.CapParam) (y :: CapDL.AST.CapParam) ->
                 case CapDL.AST.$fOrdCapParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fOrdCapParam_$ccompare ::
    CapDL.AST.CapParam -> CapDL.AST.CapParam -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fOrdCapParam_$cmax ::
    CapDL.AST.CapParam -> CapDL.AST.CapParam -> CapDL.AST.CapParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.CapParam) (y :: CapDL.AST.CapParam) ->
                 case CapDL.AST.$fOrdCapParam_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fOrdCapParam_$cmin ::
    CapDL.AST.CapParam -> CapDL.AST.CapParam -> CapDL.AST.CapParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.CapParam) (y :: CapDL.AST.CapParam) ->
                 case CapDL.AST.$fOrdCapParam_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
dde4225cb073b0222131e34641a850ba
  $fOrdFrameExtraParam :: GHC.Classes.Ord CapDL.AST.FrameExtraParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.FrameExtraParam
                  CapDL.AST.$fEqFrameExtraParam
                  CapDL.AST.$fOrdFrameExtraParam_$ccompare
                  CapDL.AST.$fOrdFrameExtraParam_$c<
                  CapDL.AST.$fOrdFrameExtraParam_$c<=
                  CapDL.AST.$fOrdFrameExtraParam_$c>
                  CapDL.AST.$fOrdFrameExtraParam_$c>=
                  CapDL.AST.$fOrdFrameExtraParam_$cmax
                  CapDL.AST.$fOrdFrameExtraParam_$cmin -}
dde4225cb073b0222131e34641a850ba
  $fOrdFrameExtraParam_$c< ::
    CapDL.AST.FrameExtraParam
    -> CapDL.AST.FrameExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.FrameExtraParam)
                   (b :: CapDL.AST.FrameExtraParam) ->
                 case a of wild { CapDL.AST.Fill a1 ->
                 case b of wild1 { CapDL.AST.Fill b1 ->
                 GHC.Classes.$fOrd[]_$s$c<2 a1 b1 } }) -}
dde4225cb073b0222131e34641a850ba
  $fOrdFrameExtraParam_$c<= ::
    CapDL.AST.FrameExtraParam
    -> CapDL.AST.FrameExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.FrameExtraParam)
                   (b :: CapDL.AST.FrameExtraParam) ->
                 case a of wild { CapDL.AST.Fill a1 ->
                 case b of wild1 { CapDL.AST.Fill b1 ->
                 GHC.Classes.$fOrd[]_$s$c<=2 a1 b1 } }) -}
dde4225cb073b0222131e34641a850ba
  $fOrdFrameExtraParam_$c> ::
    CapDL.AST.FrameExtraParam
    -> CapDL.AST.FrameExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.FrameExtraParam)
                   (b :: CapDL.AST.FrameExtraParam) ->
                 case a of wild { CapDL.AST.Fill a1 ->
                 case b of wild1 { CapDL.AST.Fill b1 ->
                 GHC.Classes.$fOrd[]_$s$c>2 a1 b1 } }) -}
dde4225cb073b0222131e34641a850ba
  $fOrdFrameExtraParam_$c>= ::
    CapDL.AST.FrameExtraParam
    -> CapDL.AST.FrameExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.FrameExtraParam)
                   (b :: CapDL.AST.FrameExtraParam) ->
                 case a of wild { CapDL.AST.Fill a1 ->
                 case b of wild1 { CapDL.AST.Fill b1 ->
                 GHC.Classes.$fOrd[]_$s$c>=2 a1 b1 } }) -}
dde4225cb073b0222131e34641a850ba
  $fOrdFrameExtraParam_$ccompare ::
    CapDL.AST.FrameExtraParam
    -> CapDL.AST.FrameExtraParam -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: CapDL.AST.FrameExtraParam)
                   (b :: CapDL.AST.FrameExtraParam) ->
                 case a of wild { CapDL.AST.Fill a1 ->
                 case b of wild1 { CapDL.AST.Fill b1 ->
                 GHC.Classes.$fOrd[]_$s$ccompare2 a1 b1 } }) -}
dde4225cb073b0222131e34641a850ba
  $fOrdFrameExtraParam_$cmax ::
    CapDL.AST.FrameExtraParam
    -> CapDL.AST.FrameExtraParam -> CapDL.AST.FrameExtraParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.FrameExtraParam)
                   (y :: CapDL.AST.FrameExtraParam) ->
                 case x of wild { CapDL.AST.Fill a1 ->
                 case y of wild1 { CapDL.AST.Fill b1 ->
                 case GHC.Classes.$fOrd[]_$s$ccompare2 a1 b1 of wild2 {
                   DEFAULT -> wild1 GHC.Types.GT -> wild } } }) -}
dde4225cb073b0222131e34641a850ba
  $fOrdFrameExtraParam_$cmin ::
    CapDL.AST.FrameExtraParam
    -> CapDL.AST.FrameExtraParam -> CapDL.AST.FrameExtraParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.FrameExtraParam)
                   (y :: CapDL.AST.FrameExtraParam) ->
                 case x of wild { CapDL.AST.Fill a1 ->
                 case y of wild1 { CapDL.AST.Fill b1 ->
                 case GHC.Classes.$fOrd[]_$s$ccompare2 a1 b1 of wild2 {
                   DEFAULT -> wild GHC.Types.GT -> wild1 } } }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fOrdIOAPICIRQExtraParam ::
    GHC.Classes.Ord CapDL.AST.IOAPICIRQExtraParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.IOAPICIRQExtraParam
                  CapDL.AST.$fEqIOAPICIRQExtraParam
                  CapDL.AST.$fOrdIOAPICIRQExtraParam_$ccompare
                  CapDL.AST.$fOrdIOAPICIRQExtraParam_$c<
                  CapDL.AST.$fOrdIOAPICIRQExtraParam_$c<=
                  CapDL.AST.$fOrdIOAPICIRQExtraParam_$c>
                  CapDL.AST.$fOrdIOAPICIRQExtraParam_$c>=
                  CapDL.AST.$fOrdIOAPICIRQExtraParam_$cmax
                  CapDL.AST.$fOrdIOAPICIRQExtraParam_$cmin -}
21eab1f918cd88a42e02e30804bad3d0
  $fOrdIOAPICIRQExtraParam_$c< ::
    CapDL.AST.IOAPICIRQExtraParam
    -> CapDL.AST.IOAPICIRQExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.IOAPICIRQExtraParam)
                   (y :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case CapDL.AST.$fOrdIOAPICIRQExtraParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fOrdIOAPICIRQExtraParam_$c<= ::
    CapDL.AST.IOAPICIRQExtraParam
    -> CapDL.AST.IOAPICIRQExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.IOAPICIRQExtraParam)
                   (y :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case CapDL.AST.$fOrdIOAPICIRQExtraParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fOrdIOAPICIRQExtraParam_$c> ::
    CapDL.AST.IOAPICIRQExtraParam
    -> CapDL.AST.IOAPICIRQExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.IOAPICIRQExtraParam)
                   (y :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case CapDL.AST.$fOrdIOAPICIRQExtraParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fOrdIOAPICIRQExtraParam_$c>= ::
    CapDL.AST.IOAPICIRQExtraParam
    -> CapDL.AST.IOAPICIRQExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.IOAPICIRQExtraParam)
                   (y :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case CapDL.AST.$fOrdIOAPICIRQExtraParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fOrdIOAPICIRQExtraParam_$ccompare ::
    CapDL.AST.IOAPICIRQExtraParam
    -> CapDL.AST.IOAPICIRQExtraParam -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: CapDL.AST.IOAPICIRQExtraParam)
                   (b :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case a of wild {
                   CapDL.AST.IOAPIC a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        CapDL.AST.IOAPIC b1 -> GHC.Classes.compareWord a1 b1 }
                   CapDL.AST.Pin a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        CapDL.AST.IOAPIC ds1 -> GHC.Types.GT
                        CapDL.AST.Pin b1 -> GHC.Classes.compareWord a1 b1 }
                   CapDL.AST.Level a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        CapDL.AST.Level b1 -> GHC.Classes.compareWord a1 b1
                        CapDL.AST.Polarity ds1 -> GHC.Types.LT }
                   CapDL.AST.Polarity a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        CapDL.AST.Polarity b1 -> GHC.Classes.compareWord a1 b1 } }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fOrdIOAPICIRQExtraParam_$cmax ::
    CapDL.AST.IOAPICIRQExtraParam
    -> CapDL.AST.IOAPICIRQExtraParam -> CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.IOAPICIRQExtraParam)
                   (y :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case CapDL.AST.$fOrdIOAPICIRQExtraParam_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fOrdIOAPICIRQExtraParam_$cmin ::
    CapDL.AST.IOAPICIRQExtraParam
    -> CapDL.AST.IOAPICIRQExtraParam -> CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.IOAPICIRQExtraParam)
                   (y :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case CapDL.AST.$fOrdIOAPICIRQExtraParam_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
fc7d603deecce0f538ad1f168f348536
  $fOrdMSIIRQExtraParam :: GHC.Classes.Ord CapDL.AST.MSIIRQExtraParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.MSIIRQExtraParam
                  CapDL.AST.$fEqMSIIRQExtraParam
                  CapDL.AST.$fOrdMSIIRQExtraParam_$ccompare
                  CapDL.AST.$fOrdMSIIRQExtraParam_$c<
                  CapDL.AST.$fOrdMSIIRQExtraParam_$c<=
                  CapDL.AST.$fOrdMSIIRQExtraParam_$c>
                  CapDL.AST.$fOrdMSIIRQExtraParam_$c>=
                  CapDL.AST.$fOrdMSIIRQExtraParam_$cmax
                  CapDL.AST.$fOrdMSIIRQExtraParam_$cmin -}
fc7d603deecce0f538ad1f168f348536
  $fOrdMSIIRQExtraParam_$c< ::
    CapDL.AST.MSIIRQExtraParam
    -> CapDL.AST.MSIIRQExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.MSIIRQExtraParam)
                   (y :: CapDL.AST.MSIIRQExtraParam) ->
                 case CapDL.AST.$fOrdMSIIRQExtraParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
fc7d603deecce0f538ad1f168f348536
  $fOrdMSIIRQExtraParam_$c<= ::
    CapDL.AST.MSIIRQExtraParam
    -> CapDL.AST.MSIIRQExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.MSIIRQExtraParam)
                   (y :: CapDL.AST.MSIIRQExtraParam) ->
                 case CapDL.AST.$fOrdMSIIRQExtraParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
fc7d603deecce0f538ad1f168f348536
  $fOrdMSIIRQExtraParam_$c> ::
    CapDL.AST.MSIIRQExtraParam
    -> CapDL.AST.MSIIRQExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.MSIIRQExtraParam)
                   (y :: CapDL.AST.MSIIRQExtraParam) ->
                 case CapDL.AST.$fOrdMSIIRQExtraParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
fc7d603deecce0f538ad1f168f348536
  $fOrdMSIIRQExtraParam_$c>= ::
    CapDL.AST.MSIIRQExtraParam
    -> CapDL.AST.MSIIRQExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.MSIIRQExtraParam)
                   (y :: CapDL.AST.MSIIRQExtraParam) ->
                 case CapDL.AST.$fOrdMSIIRQExtraParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
fc7d603deecce0f538ad1f168f348536
  $fOrdMSIIRQExtraParam_$ccompare ::
    CapDL.AST.MSIIRQExtraParam
    -> CapDL.AST.MSIIRQExtraParam -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: CapDL.AST.MSIIRQExtraParam)
                   (b :: CapDL.AST.MSIIRQExtraParam) ->
                 case a of wild {
                   CapDL.AST.MSIHandle a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        CapDL.AST.MSIHandle b1 -> GHC.Classes.compareWord a1 b1 }
                   CapDL.AST.MSIPCIBus a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        CapDL.AST.MSIHandle ds1 -> GHC.Types.GT
                        CapDL.AST.MSIPCIBus b1 -> GHC.Classes.compareWord a1 b1 }
                   CapDL.AST.MSIPCIDev a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        CapDL.AST.MSIPCIDev b1 -> GHC.Classes.compareWord a1 b1
                        CapDL.AST.MSIPCIFun ds1 -> GHC.Types.LT }
                   CapDL.AST.MSIPCIFun a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        CapDL.AST.MSIPCIFun b1 -> GHC.Classes.compareWord a1 b1 } }) -}
fc7d603deecce0f538ad1f168f348536
  $fOrdMSIIRQExtraParam_$cmax ::
    CapDL.AST.MSIIRQExtraParam
    -> CapDL.AST.MSIIRQExtraParam -> CapDL.AST.MSIIRQExtraParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.MSIIRQExtraParam)
                   (y :: CapDL.AST.MSIIRQExtraParam) ->
                 case CapDL.AST.$fOrdMSIIRQExtraParam_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
fc7d603deecce0f538ad1f168f348536
  $fOrdMSIIRQExtraParam_$cmin ::
    CapDL.AST.MSIIRQExtraParam
    -> CapDL.AST.MSIIRQExtraParam -> CapDL.AST.MSIIRQExtraParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.MSIIRQExtraParam)
                   (y :: CapDL.AST.MSIIRQExtraParam) ->
                 case CapDL.AST.$fOrdMSIIRQExtraParam_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fOrdObjParam :: GHC.Classes.Ord CapDL.AST.ObjParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.ObjParam
                  CapDL.AST.$fEqObjParam
                  CapDL.AST.$fOrdObjParam_$ccompare
                  CapDL.AST.$fOrdObjParam_$c<
                  CapDL.AST.$fOrdObjParam_$c<=
                  CapDL.AST.$fOrdObjParam_$c>
                  CapDL.AST.$fOrdObjParam_$c>=
                  CapDL.AST.$fOrdObjParam_$cmax
                  CapDL.AST.$fOrdObjParam_$cmin -}
c9bd94a581800fbb5b80072a4c9344c7
  $fOrdObjParam_$c< ::
    CapDL.AST.ObjParam -> CapDL.AST.ObjParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.ObjParam) (y :: CapDL.AST.ObjParam) ->
                 case CapDL.AST.$fOrdObjParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fOrdObjParam_$c<= ::
    CapDL.AST.ObjParam -> CapDL.AST.ObjParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.ObjParam) (y :: CapDL.AST.ObjParam) ->
                 case CapDL.AST.$fOrdObjParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fOrdObjParam_$c> ::
    CapDL.AST.ObjParam -> CapDL.AST.ObjParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.ObjParam) (y :: CapDL.AST.ObjParam) ->
                 case CapDL.AST.$fOrdObjParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fOrdObjParam_$c>= ::
    CapDL.AST.ObjParam -> CapDL.AST.ObjParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.ObjParam) (y :: CapDL.AST.ObjParam) ->
                 case CapDL.AST.$fOrdObjParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fOrdObjParam_$ccompare ::
    CapDL.AST.ObjParam -> CapDL.AST.ObjParam -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
c9bd94a581800fbb5b80072a4c9344c7
  $fOrdObjParam_$cmax ::
    CapDL.AST.ObjParam -> CapDL.AST.ObjParam -> CapDL.AST.ObjParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.ObjParam) (y :: CapDL.AST.ObjParam) ->
                 case CapDL.AST.$fOrdObjParam_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fOrdObjParam_$cmin ::
    CapDL.AST.ObjParam -> CapDL.AST.ObjParam -> CapDL.AST.ObjParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.ObjParam) (y :: CapDL.AST.ObjParam) ->
                 case CapDL.AST.$fOrdObjParam_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fOrdRange :: GHC.Classes.Ord CapDL.AST.Range
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.Range
                  CapDL.AST.$fEqRange
                  CapDL.AST.$fOrdRange_$ccompare
                  CapDL.AST.$fOrdRange_$c<
                  CapDL.AST.$fOrdRange_$c<=
                  CapDL.AST.$fOrdRange_$c>
                  CapDL.AST.$fOrdRange_$c>=
                  CapDL.AST.$fOrdRange_$cmax
                  CapDL.AST.$fOrdRange_$cmin -}
3578ccc8a9d40f34b37cc824007f79f9
  $fOrdRange_$c< ::
    CapDL.AST.Range -> CapDL.AST.Range -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.Range) (y :: CapDL.AST.Range) ->
                 case CapDL.AST.$fOrdRange_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fOrdRange_$c<= ::
    CapDL.AST.Range -> CapDL.AST.Range -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.Range) (y :: CapDL.AST.Range) ->
                 case CapDL.AST.$fOrdRange_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fOrdRange_$c> ::
    CapDL.AST.Range -> CapDL.AST.Range -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.Range) (y :: CapDL.AST.Range) ->
                 case CapDL.AST.$fOrdRange_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fOrdRange_$c>= ::
    CapDL.AST.Range -> CapDL.AST.Range -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.Range) (y :: CapDL.AST.Range) ->
                 case CapDL.AST.$fOrdRange_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fOrdRange_$ccompare ::
    CapDL.AST.Range -> CapDL.AST.Range -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: CapDL.AST.Range) (b :: CapDL.AST.Range) ->
                 case a of wild {
                   CapDL.AST.Only a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        CapDL.AST.Only b1 -> GHC.Classes.compareWord a1 b1 }
                   CapDL.AST.FromTo a1 a2
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        CapDL.AST.Only ds1 -> GHC.Types.GT
                        CapDL.AST.FromTo b1 b2
                        -> case a1 of wild2 { GHC.Types.W# x# ->
                           case b1 of wild3 { GHC.Types.W# y# ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.ltWord# x# y#) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.eqWord# x# y#) of wild5 {
                                  GHC.Types.False -> GHC.Types.GT
                                  GHC.Types.True -> GHC.Classes.compareWord a2 b2 }
                             GHC.Types.True -> GHC.Types.LT } } } }
                   CapDL.AST.From a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        CapDL.AST.From ds1 -> GHC.Classes.compareWord a1 ds1
                        CapDL.AST.To ds1 -> GHC.Types.LT
                        CapDL.AST.All -> GHC.Types.LT }
                   CapDL.AST.To a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        CapDL.AST.To b1 -> GHC.Classes.compareWord a1 b1
                        CapDL.AST.All -> GHC.Types.LT }
                   CapDL.AST.All
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT CapDL.AST.All -> GHC.Types.EQ } }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fOrdRange_$cmax ::
    CapDL.AST.Range -> CapDL.AST.Range -> CapDL.AST.Range
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.Range) (y :: CapDL.AST.Range) ->
                 case CapDL.AST.$fOrdRange_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fOrdRange_$cmin ::
    CapDL.AST.Range -> CapDL.AST.Range -> CapDL.AST.Range
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.Range) (y :: CapDL.AST.Range) ->
                 case CapDL.AST.$fOrdRange_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fOrdSCExtraParam :: GHC.Classes.Ord CapDL.AST.SCExtraParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.SCExtraParam
                  CapDL.AST.$fEqSCExtraParam
                  CapDL.AST.$fOrdSCExtraParam_$ccompare
                  CapDL.AST.$fOrdSCExtraParam_$c<
                  CapDL.AST.$fOrdSCExtraParam_$c<=
                  CapDL.AST.$fOrdSCExtraParam_$c>
                  CapDL.AST.$fOrdSCExtraParam_$c>=
                  CapDL.AST.$fOrdSCExtraParam_$cmax
                  CapDL.AST.$fOrdSCExtraParam_$cmin -}
20aa8a301e00eb831ce6d4fd05200c03
  $fOrdSCExtraParam_$c< ::
    CapDL.AST.SCExtraParam -> CapDL.AST.SCExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: CapDL.AST.SCExtraParam)
                   (b :: CapDL.AST.SCExtraParam) ->
                 case a of wild {
                   CapDL.AST.Period a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        CapDL.AST.Period b1 -> GHC.Word.ltWord64 a1 b1 }
                   CapDL.AST.Budget a1
                   -> case b of wild1 {
                        CapDL.AST.Period ds1 -> GHC.Types.False
                        CapDL.AST.Budget b1 -> GHC.Word.ltWord64 a1 b1
                        CapDL.AST.SCData ipv -> GHC.Types.True }
                   CapDL.AST.SCData a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.SCData b1 -> GHC.Classes.ltWord a1 b1 } }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fOrdSCExtraParam_$c<= ::
    CapDL.AST.SCExtraParam -> CapDL.AST.SCExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: CapDL.AST.SCExtraParam)
                   (b :: CapDL.AST.SCExtraParam) ->
                 case a of wild {
                   CapDL.AST.Period a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        CapDL.AST.Period b1 -> GHC.Word.leWord64 a1 b1 }
                   CapDL.AST.Budget a1
                   -> case b of wild1 {
                        CapDL.AST.Period ds1 -> GHC.Types.False
                        CapDL.AST.Budget b1 -> GHC.Word.leWord64 a1 b1
                        CapDL.AST.SCData ipv -> GHC.Types.True }
                   CapDL.AST.SCData a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.SCData b1 -> GHC.Classes.leWord a1 b1 } }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fOrdSCExtraParam_$c> ::
    CapDL.AST.SCExtraParam -> CapDL.AST.SCExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: CapDL.AST.SCExtraParam)
                   (b :: CapDL.AST.SCExtraParam) ->
                 case a of wild {
                   CapDL.AST.Period a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Period b1 -> GHC.Word.gtWord64 a1 b1 }
                   CapDL.AST.Budget a1
                   -> case b of wild1 {
                        CapDL.AST.Period ds1 -> GHC.Types.True
                        CapDL.AST.Budget b1 -> GHC.Word.gtWord64 a1 b1
                        CapDL.AST.SCData ipv -> GHC.Types.False }
                   CapDL.AST.SCData a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        CapDL.AST.SCData b1 -> GHC.Classes.gtWord a1 b1 } }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fOrdSCExtraParam_$c>= ::
    CapDL.AST.SCExtraParam -> CapDL.AST.SCExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: CapDL.AST.SCExtraParam)
                   (b :: CapDL.AST.SCExtraParam) ->
                 case a of wild {
                   CapDL.AST.Period a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        CapDL.AST.Period b1 -> GHC.Word.geWord64 a1 b1 }
                   CapDL.AST.Budget a1
                   -> case b of wild1 {
                        CapDL.AST.Period ds1 -> GHC.Types.True
                        CapDL.AST.Budget b1 -> GHC.Word.geWord64 a1 b1
                        CapDL.AST.SCData ipv -> GHC.Types.False }
                   CapDL.AST.SCData a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        CapDL.AST.SCData b1 -> GHC.Classes.geWord a1 b1 } }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fOrdSCExtraParam_$ccompare ::
    CapDL.AST.SCExtraParam
    -> CapDL.AST.SCExtraParam -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: CapDL.AST.SCExtraParam)
                   (b :: CapDL.AST.SCExtraParam) ->
                 case a of wild {
                   CapDL.AST.Period a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        CapDL.AST.Period b1 -> GHC.Word.$fOrdWord64_$ccompare a1 b1 }
                   CapDL.AST.Budget a1
                   -> case b of wild1 {
                        CapDL.AST.Period ds1 -> GHC.Types.GT
                        CapDL.AST.Budget b1 -> GHC.Word.$fOrdWord64_$ccompare a1 b1
                        CapDL.AST.SCData ipv -> GHC.Types.LT }
                   CapDL.AST.SCData a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        CapDL.AST.SCData b1 -> GHC.Classes.compareWord a1 b1 } }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fOrdSCExtraParam_$cmax ::
    CapDL.AST.SCExtraParam
    -> CapDL.AST.SCExtraParam -> CapDL.AST.SCExtraParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.SCExtraParam) (y :: CapDL.AST.SCExtraParam) ->
                 case CapDL.AST.$fOrdSCExtraParam_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fOrdSCExtraParam_$cmin ::
    CapDL.AST.SCExtraParam
    -> CapDL.AST.SCExtraParam -> CapDL.AST.SCExtraParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.SCExtraParam) (y :: CapDL.AST.SCExtraParam) ->
                 case CapDL.AST.$fOrdSCExtraParam_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fOrdTCBExtraParam :: GHC.Classes.Ord CapDL.AST.TCBExtraParam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.TCBExtraParam
                  CapDL.AST.$fEqTCBExtraParam
                  CapDL.AST.$fOrdTCBExtraParam_$ccompare
                  CapDL.AST.$fOrdTCBExtraParam_$c<
                  CapDL.AST.$fOrdTCBExtraParam_$c<=
                  CapDL.AST.$fOrdTCBExtraParam_$c>
                  CapDL.AST.$fOrdTCBExtraParam_$c>=
                  CapDL.AST.$fOrdTCBExtraParam_$cmax
                  CapDL.AST.$fOrdTCBExtraParam_$cmin -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fOrdTCBExtraParam_$c< ::
    CapDL.AST.TCBExtraParam
    -> CapDL.AST.TCBExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.TCBExtraParam) (y :: CapDL.AST.TCBExtraParam) ->
                 case CapDL.AST.$fOrdTCBExtraParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fOrdTCBExtraParam_$c<= ::
    CapDL.AST.TCBExtraParam
    -> CapDL.AST.TCBExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.TCBExtraParam) (y :: CapDL.AST.TCBExtraParam) ->
                 case CapDL.AST.$fOrdTCBExtraParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fOrdTCBExtraParam_$c> ::
    CapDL.AST.TCBExtraParam
    -> CapDL.AST.TCBExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.TCBExtraParam) (y :: CapDL.AST.TCBExtraParam) ->
                 case CapDL.AST.$fOrdTCBExtraParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fOrdTCBExtraParam_$c>= ::
    CapDL.AST.TCBExtraParam
    -> CapDL.AST.TCBExtraParam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.TCBExtraParam) (y :: CapDL.AST.TCBExtraParam) ->
                 case CapDL.AST.$fOrdTCBExtraParam_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fOrdTCBExtraParam_$ccompare ::
    CapDL.AST.TCBExtraParam
    -> CapDL.AST.TCBExtraParam -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: CapDL.AST.TCBExtraParam)
                   (b :: CapDL.AST.TCBExtraParam) ->
                 case a of wild {
                   CapDL.AST.Addr a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        CapDL.AST.Addr b1 -> GHC.Classes.compareWord a1 b1 }
                   CapDL.AST.IP a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        CapDL.AST.Addr ds1 -> GHC.Types.GT
                        CapDL.AST.IP b1 -> GHC.Classes.compareWord a1 b1 }
                   CapDL.AST.SP a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        CapDL.AST.SP ds1 -> GHC.Classes.compareWord a1 ds1
                        CapDL.AST.Elf ds1 -> GHC.Types.LT
                        CapDL.AST.Prio ds1 -> GHC.Types.LT
                        CapDL.AST.MaxPrio ds1 -> GHC.Types.LT
                        CapDL.AST.Affinity ds1 -> GHC.Types.LT }
                   CapDL.AST.Elf a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        CapDL.AST.Elf ds1 -> GHC.Classes.$fOrd[]_$s$ccompare1 a1 ds1
                        CapDL.AST.Prio ds1 -> GHC.Types.LT
                        CapDL.AST.MaxPrio ds1 -> GHC.Types.LT
                        CapDL.AST.Affinity ds1 -> GHC.Types.LT }
                   CapDL.AST.Prio a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        CapDL.AST.Prio ds1 -> GHC.Integer.Type.compareInteger a1 ds1
                        CapDL.AST.MaxPrio ds1 -> GHC.Types.LT
                        CapDL.AST.Affinity ds1 -> GHC.Types.LT }
                   CapDL.AST.MaxPrio a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        CapDL.AST.MaxPrio b1 -> GHC.Integer.Type.compareInteger a1 b1
                        CapDL.AST.Affinity ds1 -> GHC.Types.LT }
                   CapDL.AST.Affinity a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        CapDL.AST.Affinity b1
                        -> GHC.Integer.Type.compareInteger a1 b1 } }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fOrdTCBExtraParam_$cmax ::
    CapDL.AST.TCBExtraParam
    -> CapDL.AST.TCBExtraParam -> CapDL.AST.TCBExtraParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.TCBExtraParam) (y :: CapDL.AST.TCBExtraParam) ->
                 case CapDL.AST.$fOrdTCBExtraParam_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fOrdTCBExtraParam_$cmin ::
    CapDL.AST.TCBExtraParam
    -> CapDL.AST.TCBExtraParam -> CapDL.AST.TCBExtraParam
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: CapDL.AST.TCBExtraParam) (y :: CapDL.AST.TCBExtraParam) ->
                 case CapDL.AST.$fOrdTCBExtraParam_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
6f333562637ba8a5d02ee9b310f593a5
  $fShowCapMapping :: GHC.Show.Show CapDL.AST.CapMapping
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.CapMapping
                  CapDL.AST.$fShowCapMapping_$cshowsPrec
                  CapDL.AST.$fShowCapMapping_$cshow
                  CapDL.AST.$fShowCapMapping_$cshowList -}
6f333562637ba8a5d02ee9b310f593a5
  $fShowCapMapping1 :: CapDL.AST.CapMapping -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: CapDL.AST.CapMapping) ->
                 CapDL.AST.$w$cshowsPrec 0# w) -}
6f333562637ba8a5d02ee9b310f593a5
  $fShowCapMapping_$cshow :: CapDL.AST.CapMapping -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.CapMapping) ->
                 CapDL.AST.$fShowCapMapping_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6f333562637ba8a5d02ee9b310f593a5
  $fShowCapMapping_$cshowList ::
    [CapDL.AST.CapMapping] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.CapMapping
                   CapDL.AST.$fShowCapMapping1) -}
6f333562637ba8a5d02ee9b310f593a5
  $fShowCapMapping_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.CapMapping -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: CapDL.AST.CapMapping) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.AST.$w$cshowsPrec ww1 w1 }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fShowCapParam :: GHC.Show.Show CapDL.AST.CapParam
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.CapParam
                  CapDL.AST.$fShowCapParam_$cshowsPrec
                  CapDL.AST.$fShowCapParam_$cshow
                  CapDL.AST.$fShowCapParam_$cshowList -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fShowCapParam1 :: CapDL.AST.CapParam -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (CapDL.AST.$fShowCapParam_$cshowsPrec
                   CapDL.AST.$fDataCapParam2) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fShowCapParam_$cshow :: CapDL.AST.CapParam -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.CapParam) ->
                 CapDL.AST.$fShowCapParam_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fShowCapParam_$cshowList :: [CapDL.AST.CapParam] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.CapParam
                   CapDL.AST.$fShowCapParam1) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $fShowCapParam_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.CapParam -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
8f7df8173f53c7ba9e17b58715798d32
  $fShowDecl :: GHC.Show.Show CapDL.AST.Decl
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.Decl
                  CapDL.AST.$fShowDecl_$cshowsPrec
                  CapDL.AST.$fShowDecl_$cshow
                  CapDL.AST.$fShowDecl_$cshowList -}
8f7df8173f53c7ba9e17b58715798d32
  $fShowDecl1 :: CapDL.AST.Decl -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: CapDL.AST.Decl) ->
                 CapDL.AST.$w$cshowsPrec1 0# w) -}
8f7df8173f53c7ba9e17b58715798d32
  $fShowDecl_$cshow :: CapDL.AST.Decl -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.Decl) ->
                 CapDL.AST.$fShowDecl_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8f7df8173f53c7ba9e17b58715798d32
  $fShowDecl_$cshowList :: [CapDL.AST.Decl] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.Decl
                   CapDL.AST.$fShowDecl1) -}
8f7df8173f53c7ba9e17b58715798d32
  $fShowDecl_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.Decl -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: CapDL.AST.Decl) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.AST.$w$cshowsPrec1 ww1 w1 }) -}
dde4225cb073b0222131e34641a850ba
  $fShowFrameExtraParam :: GHC.Show.Show CapDL.AST.FrameExtraParam
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.FrameExtraParam
                  CapDL.AST.$fShowFrameExtraParam_$cshowsPrec
                  CapDL.AST.$fShowFrameExtraParam_$cshow
                  CapDL.AST.$fShowFrameExtraParam_$cshowList -}
dde4225cb073b0222131e34641a850ba
  $fShowFrameExtraParam1 ::
    CapDL.AST.FrameExtraParam -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: CapDL.AST.FrameExtraParam)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { CapDL.AST.Fill ww1 ->
                 CapDL.AST.$w$cshowsPrec2 0# ww1 w1 }) -}
3d821a8df735b3322a5fa4c060327191
  $fShowFrameExtraParam2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
23feabb0e424993728e9a4a8b40b0a97
  $fShowFrameExtraParam3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fill = "#) -}
815b100ce4c5b477ed9229621d2770e3
  $fShowFrameExtraParam4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Fill {"#) -}
dde4225cb073b0222131e34641a850ba
  $fShowFrameExtraParam_$cshow ::
    CapDL.AST.FrameExtraParam -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.FrameExtraParam) ->
                 CapDL.AST.$fShowFrameExtraParam_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
dde4225cb073b0222131e34641a850ba
  $fShowFrameExtraParam_$cshowList ::
    [CapDL.AST.FrameExtraParam] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.FrameExtraParam
                   CapDL.AST.$fShowFrameExtraParam1) -}
dde4225cb073b0222131e34641a850ba
  $fShowFrameExtraParam_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.FrameExtraParam -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: CapDL.AST.FrameExtraParam)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { CapDL.AST.Fill ww3 ->
                 CapDL.AST.$w$cshowsPrec2 ww1 ww3 w2 } }) -}
21eab1f918cd88a42e02e30804bad3d0
  $fShowIOAPICIRQExtraParam ::
    GHC.Show.Show CapDL.AST.IOAPICIRQExtraParam
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.IOAPICIRQExtraParam
                  CapDL.AST.$fShowIOAPICIRQExtraParam_$cshowsPrec
                  CapDL.AST.$fShowIOAPICIRQExtraParam_$cshow
                  CapDL.AST.$fShowIOAPICIRQExtraParam_$cshowList -}
21eab1f918cd88a42e02e30804bad3d0
  $fShowIOAPICIRQExtraParam1 ::
    CapDL.AST.IOAPICIRQExtraParam -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: CapDL.AST.IOAPICIRQExtraParam)
                   (w1 :: GHC.Base.String) ->
                 CapDL.AST.$w$cshowsPrec3 0# w w1) -}
21eab1f918cd88a42e02e30804bad3d0
  $fShowIOAPICIRQExtraParam_$cshow ::
    CapDL.AST.IOAPICIRQExtraParam -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.IOAPICIRQExtraParam) ->
                 CapDL.AST.$fShowIOAPICIRQExtraParam_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
21eab1f918cd88a42e02e30804bad3d0
  $fShowIOAPICIRQExtraParam_$cshowList ::
    [CapDL.AST.IOAPICIRQExtraParam] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.IOAPICIRQExtraParam
                   CapDL.AST.$fShowIOAPICIRQExtraParam1) -}
21eab1f918cd88a42e02e30804bad3d0
  $fShowIOAPICIRQExtraParam_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.IOAPICIRQExtraParam -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: CapDL.AST.IOAPICIRQExtraParam)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.AST.$w$cshowsPrec3 ww1 w1 w2 }) -}
519e5ee713264da3f66ce82e6106a9de
  $fShowKO :: GHC.Show.Show CapDL.AST.KO
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.KO
                  CapDL.AST.$fShowKO_$cshowsPrec
                  CapDL.AST.$fShowKO_$cshow
                  CapDL.AST.$fShowKO_$cshowList -}
519e5ee713264da3f66ce82e6106a9de
  $fShowKO1 :: CapDL.AST.KO -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: CapDL.AST.KO) (w1 :: GHC.Base.String) ->
                 case w of ww { CapDL.AST.Obj ww1 ww2 ww3 ->
                 CapDL.AST.$w$cshowsPrec4 0# ww1 ww2 ww3 w1 }) -}
519e5ee713264da3f66ce82e6106a9de
  $fShowKODecl :: GHC.Show.Show CapDL.AST.KODecl
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.KODecl
                  CapDL.AST.$fShowKODecl_$cshowsPrec
                  CapDL.AST.$fShowKODecl_$cshow
                  CapDL.AST.$fShowKODecl_$cshowList -}
519e5ee713264da3f66ce82e6106a9de
  $fShowKODecl1 :: CapDL.AST.KODecl -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: CapDL.AST.KODecl) (w1 :: GHC.Base.String) ->
                 case w of ww { CapDL.AST.KODecl ww1 ww2 ->
                 CapDL.AST.$w$cshowsPrec5 0# ww1 ww2 w1 }) -}
519e5ee713264da3f66ce82e6106a9de
  $fShowKODecl_$cshow :: CapDL.AST.KODecl -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(1*U,1*U,1*U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.KODecl) ->
                 CapDL.AST.$fShowKODecl_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
519e5ee713264da3f66ce82e6106a9de
  $fShowKODecl_$cshowList :: [CapDL.AST.KODecl] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.KODecl
                   CapDL.AST.$fShowKODecl1) -}
519e5ee713264da3f66ce82e6106a9de
  $fShowKODecl_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.KODecl -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U(1*U,1*U,1*U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: CapDL.AST.KODecl)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { CapDL.AST.KODecl ww3 ww4 ->
                 CapDL.AST.$w$cshowsPrec5 ww1 ww3 ww4 w2 } }) -}
519e5ee713264da3f66ce82e6106a9de
  $fShowKO_$cshow :: CapDL.AST.KO -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.KO) ->
                 CapDL.AST.$fShowKO_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
519e5ee713264da3f66ce82e6106a9de
  $fShowKO_$cshowList :: [CapDL.AST.KO] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.KO
                   CapDL.AST.$fShowKO1) -}
519e5ee713264da3f66ce82e6106a9de
  $fShowKO_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.KO -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: CapDL.AST.KO)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { CapDL.AST.Obj ww3 ww4 ww5 ->
                 CapDL.AST.$w$cshowsPrec4 ww1 ww3 ww4 ww5 w2 } }) -}
fc7d603deecce0f538ad1f168f348536
  $fShowMSIIRQExtraParam :: GHC.Show.Show CapDL.AST.MSIIRQExtraParam
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.MSIIRQExtraParam
                  CapDL.AST.$fShowMSIIRQExtraParam_$cshowsPrec
                  CapDL.AST.$fShowMSIIRQExtraParam_$cshow
                  CapDL.AST.$fShowMSIIRQExtraParam_$cshowList -}
fc7d603deecce0f538ad1f168f348536
  $fShowMSIIRQExtraParam1 ::
    CapDL.AST.MSIIRQExtraParam -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: CapDL.AST.MSIIRQExtraParam)
                   (w1 :: GHC.Base.String) ->
                 CapDL.AST.$w$cshowsPrec6 0# w w1) -}
fc7d603deecce0f538ad1f168f348536
  $fShowMSIIRQExtraParam_$cshow ::
    CapDL.AST.MSIIRQExtraParam -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.MSIIRQExtraParam) ->
                 CapDL.AST.$fShowMSIIRQExtraParam_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
fc7d603deecce0f538ad1f168f348536
  $fShowMSIIRQExtraParam_$cshowList ::
    [CapDL.AST.MSIIRQExtraParam] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.MSIIRQExtraParam
                   CapDL.AST.$fShowMSIIRQExtraParam1) -}
fc7d603deecce0f538ad1f168f348536
  $fShowMSIIRQExtraParam_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.MSIIRQExtraParam -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: CapDL.AST.MSIIRQExtraParam)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.AST.$w$cshowsPrec6 ww1 w1 w2 }) -}
73de65ddd075a145d2849201c98ab8bf
  $fShowModule :: GHC.Show.Show CapDL.AST.Module
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.Module
                  CapDL.AST.$fShowModule_$cshowsPrec
                  CapDL.AST.$fShowModule_$cshow
                  CapDL.AST.$fShowModule_$cshowList -}
73de65ddd075a145d2849201c98ab8bf
  $fShowModule1 :: CapDL.AST.Module -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: CapDL.AST.Module) (w1 :: GHC.Base.String) ->
                 case w of ww { CapDL.AST.Module ww1 ww2 ->
                 CapDL.AST.$w$cshowsPrec7 0# ww1 ww2 w1 }) -}
6876b78977dd2edbf7c79b672af8e6e2
  $fShowModule2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Module {"#) -}
6cacee8064830bcf2eaa6dc40954e2e4
  $fShowModule3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "decls = "#) -}
ea7df602fb2e8271ee7c5f3f3c98cc5c
  $fShowModule4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
793f5b8ec75dc957fa963148d65770a8
  $fShowModule5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "theArch = "#) -}
73de65ddd075a145d2849201c98ab8bf
  $fShowModule_$cshow :: CapDL.AST.Module -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.Module) ->
                 CapDL.AST.$fShowModule_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
73de65ddd075a145d2849201c98ab8bf
  $fShowModule_$cshowList :: [CapDL.AST.Module] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.Module
                   CapDL.AST.$fShowModule1) -}
73de65ddd075a145d2849201c98ab8bf
  $fShowModule_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.Module -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: CapDL.AST.Module)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { CapDL.AST.Module ww3 ww4 ->
                 CapDL.AST.$w$cshowsPrec7 ww1 ww3 ww4 w2 } }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fShowObjParam :: GHC.Show.Show CapDL.AST.ObjParam
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.ObjParam
                  CapDL.AST.$fShowObjParam_$cshowsPrec
                  CapDL.AST.$fShowObjParam_$cshow
                  CapDL.AST.$fShowObjParam_$cshowList -}
c9bd94a581800fbb5b80072a4c9344c7
  $fShowObjParam1 :: CapDL.AST.ObjParam -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: CapDL.AST.ObjParam) ->
                 CapDL.AST.$w$cshowsPrec8 0# w) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fShowObjParam_$cshow :: CapDL.AST.ObjParam -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.ObjParam) ->
                 CapDL.AST.$fShowObjParam_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fShowObjParam_$cshowList :: [CapDL.AST.ObjParam] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.ObjParam
                   CapDL.AST.$fShowObjParam1) -}
c9bd94a581800fbb5b80072a4c9344c7
  $fShowObjParam_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.ObjParam -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: CapDL.AST.ObjParam) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.AST.$w$cshowsPrec8 ww1 w1 }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fShowRange :: GHC.Show.Show CapDL.AST.Range
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.Range
                  CapDL.AST.$fShowRange_$cshowsPrec
                  CapDL.AST.$fShowRange_$cshow
                  CapDL.AST.$fShowRange_$cshowList -}
3578ccc8a9d40f34b37cc824007f79f9
  $fShowRange1 :: CapDL.AST.Range -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (CapDL.AST.$fShowRange_$cshowsPrec
                   CapDL.AST.$fDataCapParam2) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fShowRange_$cshow :: CapDL.AST.Range -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.Range) ->
                 CapDL.AST.$fShowRange_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fShowRange_$cshowList :: [CapDL.AST.Range] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.Range
                   CapDL.AST.$fShowRange1) -}
3578ccc8a9d40f34b37cc824007f79f9
  $fShowRange_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.Range -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
20aa8a301e00eb831ce6d4fd05200c03
  $fShowSCExtraParam :: GHC.Show.Show CapDL.AST.SCExtraParam
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.SCExtraParam
                  CapDL.AST.$fShowSCExtraParam_$cshowsPrec
                  CapDL.AST.$fShowSCExtraParam_$cshow
                  CapDL.AST.$fShowSCExtraParam_$cshowList -}
20aa8a301e00eb831ce6d4fd05200c03
  $fShowSCExtraParam1 :: CapDL.AST.SCExtraParam -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: CapDL.AST.SCExtraParam) ->
                 CapDL.AST.$w$cshowsPrec9 0# w) -}
14b6e444b836b527e8dd8a71f9eb0be5
  $fShowSCExtraParam2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "scData = "#) -}
014d13476ee2782534b2163491cda791
  $fShowSCExtraParam3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SCData {"#) -}
85ed11582c4201ed8955033d65e7cac4
  $fShowSCExtraParam4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "budget = "#) -}
76c73ce9beb1e5bcb4489cb2c041f9e1
  $fShowSCExtraParam5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Budget {"#) -}
98b27ee9712c1ebe6958012a81796f1d
  $fShowSCExtraParam6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "period = "#) -}
1e748249026239a8401745e5b58e1b37
  $fShowSCExtraParam7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Period {"#) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fShowSCExtraParam_$cshow ::
    CapDL.AST.SCExtraParam -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.SCExtraParam) ->
                 CapDL.AST.$fShowSCExtraParam_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fShowSCExtraParam_$cshowList ::
    [CapDL.AST.SCExtraParam] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.SCExtraParam
                   CapDL.AST.$fShowSCExtraParam1) -}
20aa8a301e00eb831ce6d4fd05200c03
  $fShowSCExtraParam_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.SCExtraParam -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: CapDL.AST.SCExtraParam) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.AST.$w$cshowsPrec9 ww1 w1 }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fShowTCBExtraParam :: GHC.Show.Show CapDL.AST.TCBExtraParam
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ CapDL.AST.TCBExtraParam
                  CapDL.AST.$fShowTCBExtraParam_$cshowsPrec
                  CapDL.AST.$fShowTCBExtraParam_$cshow
                  CapDL.AST.$fShowTCBExtraParam_$cshowList -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fShowTCBExtraParam1 :: CapDL.AST.TCBExtraParam -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: CapDL.AST.TCBExtraParam)
                   (w1 :: GHC.Base.String) ->
                 CapDL.AST.$w$cshowsPrec10 0# w w1) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fShowTCBExtraParam_$cshow ::
    CapDL.AST.TCBExtraParam -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: CapDL.AST.TCBExtraParam) ->
                 CapDL.AST.$fShowTCBExtraParam_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fShowTCBExtraParam_$cshowList ::
    [CapDL.AST.TCBExtraParam] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ CapDL.AST.TCBExtraParam
                   CapDL.AST.$fShowTCBExtraParam1) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $fShowTCBExtraParam_$cshowsPrec ::
    GHC.Types.Int -> CapDL.AST.TCBExtraParam -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: CapDL.AST.TCBExtraParam)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.AST.$w$cshowsPrec10 ww1 w1 w2 }) -}
e8f2a763491596bdeca97ac15587e114
  $s$fData(,,) ::
    Data.Data.Data (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word)
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word)
                  (Data.Data.$fData(,,)_$cp1Data
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  (Data.Data.$fData(,,)_$cgfoldl
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  (Data.Data.$fData(,,)_$cgunfold
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  CapDL.AST.$s$fData(,,)_$s$fData(,,)_$ctoConstr
                  CapDL.AST.$s$fData(,,)_$s$fData(,,)_$cdataTypeOf
                  CapDL.AST.$s$fData(,,)_$s$fData(,,)_$cdataCast1
                  CapDL.AST.$s$fData(,,)_$s$fData(,,)_$cdataCast2
                  CapDL.AST.$s$fData(,,)_$s$fData(,,)_$cgmapT
                  (Data.Data.$fData(,,)_$cgmapQl
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  (Data.Data.$fData(,,)_$cgmapQr
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  (Data.Data.$fData(,,)_$cgmapQ
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  (Data.Data.$fData(,,)_$cgmapQi
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  (Data.Data.$fData(,,)_$cgmapM
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  (Data.Data.$fData(,,)_$cgmapMp
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord)
                  (Data.Data.$fData(,,)_$cgmapMo
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     @ GHC.Types.Word
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord
                     Data.Data.$fDataWord) -}
a4043b1d929373664b110cf9fff0ef6f
  $s$fData(,,)_$s$fData(,,)_$cdataCast1 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d. Data.Data.Data d => c1 (t d))
    -> GHC.Base.Maybe
         (c1 (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word))
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> *)
                   @ (c1 :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d. Data.Data.Data d => c1 (t d)) ->
                 GHC.Base.Nothing
                   @ (c1 (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word))) -}
dc2a9a91e5e44f5d4a1f443d74d64376
  $s$fData(,,)_$s$fData(,,)_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c1 (t d e))
    -> GHC.Base.Maybe
         (c1 (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word))
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c1 :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c1 (t d e)) ->
                 GHC.Base.Nothing
                   @ (c1 (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word))) -}
b304b29148fb85ea2fff271e93da0d0a
  $s$fData(,,)_$s$fData(,,)_$cdataTypeOf ::
    (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word)
    -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word)) ->
                 Data.Data.tuple3DataType) -}
69b6cb4ac3b886b92a70706abd50cd35
  $s$fData(,,)_$s$fData(,,)_$cgmapT ::
    (forall b1. Data.Data.Data b1 => b1 -> b1)
    -> (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word)
    -> (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word)
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U(U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds1 :: forall b1. Data.Data.Data b1 => b1 -> b1)
                   (x0 :: (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word)) ->
                 case x0 of wild { (,,) a1 b1 c1 ->
                 (ds1 @ GHC.Types.Word Data.Data.$fDataWord a1,
                  ds1 @ GHC.Types.Word Data.Data.$fDataWord b1,
                  ds1 @ GHC.Types.Word Data.Data.$fDataWord c1) }) -}
200db52b16ad6ed75ad9bbbf494fb348
  $s$fData(,,)_$s$fData(,,)_$ctoConstr ::
    (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word)
    -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word)) ->
                 case ds1 of wild { (,,) ds2 ds3 ds4 -> Data.Data.tuple3Constr }) -}
96e6eb518f4bb30ec7670672849f174e
  $s$fData[] :: Data.Data.Data [GHC.Types.Word]
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Word]
                  (Data.Data.$fData[]_$cp1Data @ GHC.Types.Word Data.Data.$fDataWord)
                  (Data.Data.$fData[]_$cgfoldl @ GHC.Types.Word Data.Data.$fDataWord)
                  (Data.Data.$fData[]_$cgunfold
                     @ GHC.Types.Word
                     Data.Data.$fDataWord)
                  CapDL.AST.$s$fData[]_$s$fData[]_$ctoConstr
                  CapDL.AST.$s$fData[]_$s$fData[]_$cdataTypeOf
                  (Data.Data.$fData[]_$cdataCast1
                     @ GHC.Types.Word
                     Data.Data.$fDataWord)
                  CapDL.AST.$s$fData[]_$s$fData[]_$cdataCast2
                  (Data.Data.$fData[]_$cgmapT @ GHC.Types.Word Data.Data.$fDataWord)
                  (Data.Data.$fData[]_$cgmapQl @ GHC.Types.Word Data.Data.$fDataWord)
                  (Data.Data.$fData[]_$cgmapQr @ GHC.Types.Word Data.Data.$fDataWord)
                  (Data.Data.$fData[]_$cgmapQ @ GHC.Types.Word Data.Data.$fDataWord)
                  (Data.Data.$fData[]_$cgmapQi @ GHC.Types.Word Data.Data.$fDataWord)
                  (Data.Data.$fData[]_$cgmapM @ GHC.Types.Word Data.Data.$fDataWord)
                  (Data.Data.$fData[]_$cgmapMp @ GHC.Types.Word Data.Data.$fDataWord)
                  (Data.Data.$fData[]_$cgmapMo
                     @ GHC.Types.Word
                     Data.Data.$fDataWord) -}
b6ba6c3f1ec9cbba3888e54ef5a6f020
  $s$fData[]_$s$fData[]_$cdataCast2 ::
    Data.Typeable.Internal.Typeable t =>
    (forall d e. (Data.Data.Data d, Data.Data.Data e) => c (t d e))
    -> GHC.Base.Maybe (c [GHC.Types.Word])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (t :: * -> * -> *)
                   @ (c :: * -> *)
                   ($dTypeable :: Data.Typeable.Internal.Typeable t)
                   (ds1 :: forall d e.
                           (Data.Data.Data d, Data.Data.Data e) =>
                           c (t d e)) ->
                 GHC.Base.Nothing @ (c [GHC.Types.Word])) -}
445315663699d993d1fc87cd7bce8566
  $s$fData[]_$s$fData[]_$cdataTypeOf ::
    [GHC.Types.Word] -> Data.Data.DataType
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: [GHC.Types.Word]) -> Data.Data.listDataType) -}
4b722345362f45ab84c8cbcf69e81815
  $s$fData[]_$s$fData[]_$ctoConstr ::
    [GHC.Types.Word] -> Data.Data.Constr
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: [GHC.Types.Word]) ->
                 case ds1 of wild {
                   [] -> Data.Data.nilConstr : ds2 ds3 -> Data.Data.consConstr }) -}
e2d3ef641cad6d328dae70db9be86426
  $s$fShow(,) :: GHC.Show.Show ([GHC.Types.Char], [CapDL.AST.Range])
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ([GHC.Types.Char], [CapDL.AST.Range])
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ [GHC.Types.Char]
                     @ [CapDL.AST.Range]
                     GHC.Show.$fShow[]_$s$fShow[]1
                     CapDL.AST.$s$fShow(,)1)
                  CapDL.AST.$s$fShow(,)_$s$fShow(,)_$cshow
                  CapDL.AST.$s$fShow(,)_$s$fShow(,)_$cshowList -}
fe6ee3bf4a2331f61539ebd880250cb8
  $s$fShow(,)1 :: GHC.Show.Show [CapDL.AST.Range]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                CapDL.AST.$s$fShow(,)_$s$fShow[] -}
9f2370f921f9a8a6295abef0c28a89e2
  $s$fShow(,)2 ::
    GHC.Show.Show ((CapDL.AST.Name, [CapDL.AST.Range]), GHC.Types.Word)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((CapDL.AST.Name, [CapDL.AST.Range]), GHC.Types.Word)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ (CapDL.AST.Name, [CapDL.AST.Range])
                     @ GHC.Types.Word
                     CapDL.AST.$s$fShow(,)3
                     GHC.Show.$fShowWord)
                  CapDL.AST.$s$fShow(,)_$s$fShow(,)_$cshow1
                  CapDL.AST.$s$fShow(,)_$s$fShow(,)_$cshowList1 -}
15613de17ed2714a24d863c2fea1eadd
  $s$fShow(,)3 :: GHC.Show.Show (CapDL.AST.Name, [CapDL.AST.Range])
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) CapDL.AST.$s$fShow(,) -}
1a15b990b3eea46391cb5884b5e7f225
  $s$fShow(,)_$s$fShow(,)_$cshow ::
    ([GHC.Types.Char], [CapDL.AST.Range]) -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: ([GHC.Types.Char], [CapDL.AST.Range])) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ [GHC.Types.Char]
                   @ [CapDL.AST.Range]
                   GHC.Show.$fShow[]_$s$fShow[]1
                   CapDL.AST.$s$fShow(,)1
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7f90ee42e7304d90a0637f5aa63f4422
  $s$fShow(,)_$s$fShow(,)_$cshow1 ::
    ((CapDL.AST.Name, [CapDL.AST.Range]), GHC.Types.Word)
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(1*U,U),U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: ((CapDL.AST.Name, [CapDL.AST.Range]), GHC.Types.Word)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ (CapDL.AST.Name, [CapDL.AST.Range])
                   @ GHC.Types.Word
                   CapDL.AST.$s$fShow(,)3
                   GHC.Show.$fShowWord
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c13c6191d612cdcfa1c3d43e7edc0ba5
  $s$fShow(,)_$s$fShow(,)_$cshowList ::
    [([GHC.Types.Char], [CapDL.AST.Range])] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [([GHC.Types.Char], [CapDL.AST.Range])])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ ([GHC.Types.Char], [CapDL.AST.Range])
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ [GHC.Types.Char]
                      @ [CapDL.AST.Range]
                      GHC.Show.$fShow[]_$s$fShow[]1
                      CapDL.AST.$s$fShow(,)1
                      GHC.Show.shows22)
                   eta
                   eta1) -}
683cb6dc682e596d10ecd05ebd59a977
  $s$fShow(,)_$s$fShow(,)_$cshowList1 ::
    [((CapDL.AST.Name, [CapDL.AST.Range]), GHC.Types.Word)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [((CapDL.AST.Name, [CapDL.AST.Range]), GHC.Types.Word)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ ((CapDL.AST.Name, [CapDL.AST.Range]), GHC.Types.Word)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ (CapDL.AST.Name, [CapDL.AST.Range])
                      @ GHC.Types.Word
                      CapDL.AST.$s$fShow(,)3
                      GHC.Show.$fShowWord
                      GHC.Show.shows22)
                   eta
                   eta1) -}
1fc8647ecc0ef86d8cc795bccdf13e59
  $s$fShow(,)_$s$fShow[] :: GHC.Show.Show [CapDL.AST.Range]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [CapDL.AST.Range]
                  CapDL.AST.$s$fShow(,)_$s$fShow[]_$cshowsPrec
                  CapDL.AST.$s$fShow(,)_$s$fShow[]_$cshow
                  CapDL.AST.$s$fShow(,)_$s$fShow[]_$cshowList -}
e3ae17c72a2c6e8ef590faa94e4b74d5
  $s$fShow(,)_$s$fShow[]_$cshow ::
    [CapDL.AST.Range] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [CapDL.AST.Range]) ->
                 CapDL.AST.$fShowRange_$cshowList
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
02b954fe38c5a4673677e88b0ccb2f0d
  $s$fShow(,)_$s$fShow[]_$cshowList ::
    [[CapDL.AST.Range]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [[CapDL.AST.Range]]) (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [CapDL.AST.Range]
                   CapDL.AST.$fShowRange_$cshowList
                   eta
                   eta1) -}
2611eca4ec37847675106a8c4d877336
  $s$fShow(,)_$s$fShow[]_$cshowsPrec ::
    GHC.Types.Int -> [CapDL.AST.Range] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds1 :: GHC.Types.Int)
                   (eta :: [CapDL.AST.Range])
                   (eta1 :: GHC.Base.String) ->
                 CapDL.AST.$fShowRange_$cshowList eta eta1) -}
48bf173ae1365541881ae98cccd0c008
  $s$fShowEither ::
    GHC.Show.Show
      (Data.Either.Either
         (CapDL.AST.NameRef, GHC.Types.Word)
         (CapDL.AST.Name, [CapDL.AST.Range]))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       (CapDL.AST.NameRef, GHC.Types.Word)
                       (CapDL.AST.Name, [CapDL.AST.Range]))
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ (CapDL.AST.NameRef, GHC.Types.Word)
                     @ (CapDL.AST.Name, [CapDL.AST.Range])
                     CapDL.AST.$s$fShow(,)3
                     CapDL.AST.$s$fShowEither1)
                  (Data.Either.$fShowEither_$cshow
                     @ (CapDL.AST.NameRef, GHC.Types.Word)
                     @ (CapDL.AST.Name, [CapDL.AST.Range])
                     CapDL.AST.$s$fShow(,)3
                     CapDL.AST.$s$fShowEither1)
                  CapDL.AST.$s$fShowEither_$s$fShowEither_$cshowList -}
a53f3e220f3353196c13068484e06abc
  $s$fShowEither1 ::
    GHC.Show.Show (CapDL.AST.NameRef, GHC.Types.Word)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) CapDL.AST.$s$fShow(,)2 -}
581a9ecb71baf2c9532c5d55cccc040d
  $s$fShowEither_$s$fShowEither_$cshowList ::
    [Data.Either.Either
       (CapDL.AST.NameRef, GHC.Types.Word)
       (CapDL.AST.Name, [CapDL.AST.Range])]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [Data.Either.Either
                              (CapDL.AST.NameRef, GHC.Types.Word)
                              (CapDL.AST.Name, [CapDL.AST.Range])])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Either.Either
                        (CapDL.AST.NameRef, GHC.Types.Word)
                        (CapDL.AST.Name, [CapDL.AST.Range]))
                   (Data.Either.$fShowEither_$cshowsPrec
                      @ (CapDL.AST.NameRef, GHC.Types.Word)
                      @ (CapDL.AST.Name, [CapDL.AST.Range])
                      CapDL.AST.$s$fShow(,)3
                      CapDL.AST.$s$fShowEither1
                      Data.Either.$fShowEither1)
                   eta
                   eta1) -}
933e36f1265f643192b1b5daff7b989f
  $t32an7muuY15D0WcodmT48I :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   CapDL.AST.$fDataRange7
                   CapDL.AST.$fDataRange1) -}
ec1bcd144e01952e8b8e5a54c3a45f2e
  $t4e4jCyU3MiO9O2Paz0MBo6 :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   CapDL.AST.$fDataSCExtraParam5
                   CapDL.AST.$fDataSCExtraParam1) -}
ec904c9c36c846af767be0726c195521
  $t79YE5L5lAUB0inF72oCUyr :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   CapDL.AST.$fDataTCBExtraParam9
                   CapDL.AST.$fDataTCBExtraParam1) -}
e9006330119e15e7a6c82b4183db44ab
  $t90btIRRwT552aYorls4pzr :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   CapDL.AST.$fDataObjParam20
                   CapDL.AST.$fDataObjParam3) -}
8ad0f3dd67d68a3a5491c3990991ec45
  $tECpPs3I2VU69WJn5fipWdP :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   CapDL.AST.$fDataIOAPICIRQExtraParam6
                   CapDL.AST.$fDataIOAPICIRQExtraParam1) -}
50ed2799a360b3c8ca84cd4b670a343e
  $tFe3qIZkkSewJ4jvZsVpE7g :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   CapDL.AST.$fDataCapParam21
                   CapDL.AST.$fDataCapParam8) -}
ff3cf675fa6344efc37d92d4b2d3b49c
  $tJQvh2zSg1334BedQjRtPQb :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   CapDL.AST.$fDataMSIIRQExtraParam6
                   CapDL.AST.$fDataMSIIRQExtraParam1) -}
afecb04f34b6377d646459c343934355
  $talFI0No0tc3DVfRHZ6Wfb :: Data.Data.DataType
  {- Strictness: m,
     Unfolding: (Data.Data.DataType
                   CapDL.AST.$fDataFrameExtraParam4
                   CapDL.AST.$fDataFrameExtraParam2) -}
131b15971ac83d014e59050f2f65f25b
  $tc'ARMIOSpace :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   798018137611423879##
                   7439697051629584313##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'ARMIOSpace1) -}
acb8a095f7a4acc1c090635e611aaaa8
  $tc'ARMIOSpace1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ARMIOSpace"#) -}
4cb3272aad599d95dbe49cb02ec07805
  $tc'ASIDDecl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10477057357387736313##
                   4496318558683067651##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'ASIDDecl1) -}
c606dd666db48476ec8409d97407764d
  $tc'ASIDDecl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ASIDDecl"#) -}
78cd390d0bbce63c8b4bb15b73ecfc44
  $tc'ASIDMapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13885170222822091638##
                   5430598943429602562##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'ASIDMapping1) -}
0e67c3c80d8becccd23cbffd2a31f5a6
  $tc'ASIDMapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ASIDMapping"#) -}
56410aef84e6e398736ec0106dfed3ac
  $tc'Addr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7613278424400650255##
                   1882294795282361571##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Addr1) -}
1692b4b2020f138a4cd9a7ca0275b700
  $tc'Addr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Addr"#) -}
4dc804b0a7ecbaaef5e64d3a046d3e6f
  $tc'Affinity :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18113682047514656555##
                   16785125783216520629##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Affinity1) -}
0224f5c39385968e3ba4c05e1e64d408
  $tc'Affinity1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Affinity"#) -}
c528c260e0f51eb922edaa1a81b4a62b
  $tc'All :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11908192320990365446##
                   11346618820000244572##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'All1) -}
029a8802461e2b1fa930b6dd2dd90e97
  $tc'All1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'All"#) -}
4e79fa1d7b5901a7f743d01566970b25
  $tc'Asid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12987419908317393790##
                   12446880139026414324##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Asid1) -}
3c3a5234ea407db8cdaedc2e94d7b1d5
  $tc'Asid1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Asid"#) -}
13c0ecc1a45bbf058c048de14b52af28
  $tc'Badge :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   374974865698064404##
                   2213039436892330780##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Badge1) -}
d1a2b3403aa6cb072aba3f64a80a0b20
  $tc'Badge1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Badge"#) -}
86a8ff893f4655c6e270230933ebd04a
  $tc'BitSize :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16291511093744133803##
                   14677850996435294267##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'BitSize1) -}
3cef33d960fd78f48ffb37baf2d8207a
  $tc'BitSize1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'BitSize"#) -}
58fd5d020c3fadac6f9932569fbf63e5
  $tc'Budget :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14560939100896056321##
                   12064318875061576046##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Budget1) -}
dd45706f723139ea2c4e3f8f54e8323e
  $tc'Budget1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Budget"#) -}
e033019d402d7f354059c16bb746dfdd
  $tc'CDTDecl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3808759117865707589##
                   154820952718177449##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'CDTDecl1) -}
bf04ee0bb395cb2b40d33213528c9b45
  $tc'CDTDecl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CDTDecl"#) -}
8b514c6b9cbef8742e5afdb934256316
  $tc'Cached :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9607103782742644955##
                   15733661668210990045##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Cached1) -}
a8035734c7de4383919b4e298b44c12e
  $tc'Cached1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cached"#) -}
d2c5d456475068bafd59f913b7c81e85
  $tc'CapDecl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6910427015114116590##
                   9810340160505221801##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'CapDecl1) -}
59744a2bd552982b918e224fd048c40d
  $tc'CapDecl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CapDecl"#) -}
1ab1d21f4c4f26391abd14a749c55cd1
  $tc'CapMapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8316501635888453791##
                   11623855086400062787##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'CapMapping1) -}
0dfbb44363c7f87bd706b6d64f6eae8f
  $tc'CapMapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CapMapping"#) -}
5f2117f4d84d5e5923c085018ac54d87
  $tc'CapNameDecl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9873784503691362776##
                   8852697243535433001##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'CapNameDecl1) -}
3ac907f9138b62458f408881d486052a
  $tc'CapNameDecl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CapNameDecl"#) -}
4161cdef02760b48135b03651120a6c0
  $tc'CopyOf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3752584421691740713##
                   839079462859620625##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'CopyOf1) -}
4ff0a35665d3c046cb0ffcd1280cbb26
  $tc'CopyOf1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CopyOf"#) -}
1352361ddd78474c35e3494bed0c8727
  $tc'Core :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9066917502007871181##
                   10608046365402404151##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Core1) -}
6656637edb59f900089edb6d3550398b
  $tc'Core1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Core"#) -}
8d9c4f40af0f24269f2938832e4c742e
  $tc'Dom :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5017535453406550858##
                   2180037002075972759##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Dom1) -}
a09580b8f4b6005c1274ecf03a2c560e
  $tc'Dom1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Dom"#) -}
af42da2b2347922502f4ddca98768c64
  $tc'DomainID :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3408405221264249062##
                   3399539985585320296##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'DomainID1) -}
7801bdd6ddb065ecf03153317885f29e
  $tc'DomainID1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'DomainID"#) -}
893285636f46f27944b1b297bb3c57ac
  $tc'Elf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7511223096026830144##
                   14727067813437252202##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Elf1) -}
77d399298c1b16bceae0ca667ef2b02c
  $tc'Elf1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Elf"#) -}
9c92b9f6ed2eb3889d8ac2ca6460eea7
  $tc'FaultEP :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11779696826961139662##
                   6613064296048449753##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'FaultEP1) -}
b5f2a3c4b2fd6eae068c5be9e1e55b20
  $tc'FaultEP1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FaultEP"#) -}
da7995ecc0865a3b5e1c0b4de4768bfc
  $tc'Fill :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2638360483879725746##
                   1930637285246017172##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Fill1) -}
39e1fc539c93e8ffa137ec550f68b226
  $tc'Fill1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Fill"#) -}
5c1ebf18eb8f9cb6afecb839b3f1fc83
  $tc'FrameExtraParam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11113011453591755376##
                   685444966052518281##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'FrameExtraParam1) -}
0aa0ef185b8d0621494ec62daa8b46fd
  $tc'FrameExtraParam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FrameExtraParam"#) -}
388b2fbc13000101f42fb7104783d39d
  $tc'FrameMapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3796987168587369333##
                   2826617127370535065##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'FrameMapping1) -}
008118b4446edf6abe7349fa4e3d8807
  $tc'FrameMapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FrameMapping"#) -}
ad1e039b22c3eadbe096deaf179856ba
  $tc'From :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4891173481791364335##
                   11433166128109194457##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'From1) -}
9c6574e392f92caea6024b6e6af5c097
  $tc'From1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'From"#) -}
de576042eaa6159b9abd15ef15394c71
  $tc'FromTo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5428321619841291922##
                   9741872354190571333##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'FromTo1) -}
3ad35ab7340f2188c45603bc5cfc1aa3
  $tc'FromTo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FromTo"#) -}
9cbc2d90896d7b8641a2c9aafb67db49
  $tc'Guard :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14988224278802294366##
                   17506752126538454417##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Guard1) -}
3301fcb603b323e416982325e2ed5801
  $tc'Guard1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Guard"#) -}
a3de2a6d6cc9ad8463ba6d38a6b66900
  $tc'GuardSize :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2272723711573561874##
                   16245868663885625088##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'GuardSize1) -}
1b861a8fe703136f24ac577e62aaab58
  $tc'GuardSize1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GuardSize"#) -}
b867ec91f679601e05a448480491e698
  $tc'IOAPIC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9816281498078915014##
                   2953015099553019449##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'IOAPIC1) -}
9feb3b041b05be935762a2ef2adef916
  $tc'IOAPIC1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'IOAPIC"#) -}
1816e4ed8805e9683fbdcee86ba717bb
  $tc'IOAPICIRQExtraParam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4480652719700332388##
                   118620936781655827##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'IOAPICIRQExtraParam1) -}
74f8bddc3ed272550a933e50774043f8
  $tc'IOAPICIRQExtraParam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'IOAPICIRQExtraParam"#) -}
f7067ed787d1ee0725c55b2b9efd38c1
  $tc'IOPTLevel :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2874717851304361521##
                   5659519736781245703##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'IOPTLevel1) -}
c42f40b939c2fa01454656a6abd88983
  $tc'IOPTLevel1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'IOPTLevel"#) -}
00b36ca455b5c482ec9e7100a84a81ad
  $tc'IP :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8419017943027697929##
                   16889175644028455026##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'IP1) -}
59c05c53a63ed3595c65b7fab1c40e4c
  $tc'IP1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'IP"#) -}
2e9b13d1023bdce4a22083323967a48f
  $tc'IRQDecl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12402467916368890253##
                   1784683361662574648##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'IRQDecl1) -}
d68c85ec926ffbf76230094e3698cf92
  $tc'IRQDecl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'IRQDecl"#) -}
cda64154b12f54bfb0a8be9f62854a4d
  $tc'IRQMapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10354836194665718595##
                   2610211956131856597##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'IRQMapping1) -}
4fc414394a7bc77c835eb43be4ded395
  $tc'IRQMapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'IRQMapping"#) -}
e31ead18159d3a96f57c7deb9a4e6a12
  $tc'IRQRef :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8607517404140885640##
                   16685604433241937294##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'IRQRef1) -}
a0f597bab5e99235995b727aa1708334
  $tc'IRQRef1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'IRQRef"#) -}
7d45f39aeff4524aec496f83bff975d4
  $tc'InitArguments :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15291165624763415700##
                   5528086445642661867##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'InitArguments1) -}
a4dc64af7895ccb6157357e966d05719
  $tc'InitArguments1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'InitArguments"#) -}
44a06ff88e80158cf6f7e3d3559fa323
  $tc'KODecl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7107127556814976816##
                   5356843666317403898##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'KODecl1) -}
09c3250ec5b804c3edd45bc642ce2838
  $tc'KODecl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'KODecl"#) -}
0dbd99f4d5ff4e818a2cb20dfc416883
  $tc'Level :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15328760324834223595##
                   12025986811247476437##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Level1) -}
6f081850f27501c0ba825ae6ba90c022
  $tc'Level1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Level"#) -}
33a81fe74615c555c0001e151ad182ec
  $tc'MSIHandle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13466192902645848710##
                   12030868471366384427##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'MSIHandle1) -}
fd7a8ca53bfe6727862002acd7b95ca5
  $tc'MSIHandle1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MSIHandle"#) -}
7452f9fb5b758d40b4d70d8d1170fc66
  $tc'MSIIRQExtraParam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15995958584543399950##
                   7088399127682532568##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'MSIIRQExtraParam1) -}
cf01a55818981c7eed365ed32cc891f8
  $tc'MSIIRQExtraParam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MSIIRQExtraParam"#) -}
c4eee70f873bac3881ea84e49f543252
  $tc'MSIPCIBus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6489557092432586144##
                   16791615687491943243##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'MSIPCIBus1) -}
07eb2cb6d3f5552857898e7cce69abe6
  $tc'MSIPCIBus1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MSIPCIBus"#) -}
b0a798f5f5d378bb5291bb09b9d732d3
  $tc'MSIPCIDev :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6678389013908066376##
                   13906067546393743879##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'MSIPCIDev1) -}
c15bd2706cd3dd18da2727bffbd40aae
  $tc'MSIPCIDev1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MSIPCIDev"#) -}
077ef65d8bf176b1180b35619ed83e80
  $tc'MSIPCIFun :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7648074824566496665##
                   8384735779897663460##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'MSIPCIFun1) -}
b41c5c4cd16b13477d5edc99f8da3487
  $tc'MSIPCIFun1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MSIPCIFun"#) -}
34907d910bb383b63cf2c2145e9544a1
  $tc'Masked :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2220012449480687483##
                   5845784342672324679##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Masked1) -}
46ee0b3df6a899658d0791f0a6ea3bf9
  $tc'Masked1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Masked"#) -}
011548ae2a1d5d177f2decb6f6e7c66e
  $tc'MasterReply :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7305057168331363946##
                   13443872588880905320##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'MasterReply1) -}
068e551fbd14c575170efc9b1f1b64e4
  $tc'MasterReply1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MasterReply"#) -}
287876135058896c1762332ec7ea948a
  $tc'MaxPrio :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2000713949422297525##
                   198993427773457378##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'MaxPrio1) -}
9965be8cc29ebcdbefc3c10f47202b02
  $tc'MaxPrio1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MaxPrio"#) -}
06ce3a3c1dc0687e691d10b40bcf1fdc
  $tc'Module :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13832833744994342042##
                   9349344918031027083##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Module1) -}
10bc72ee796bcc75dc57817cac9ff4a9
  $tc'Module1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Module"#) -}
7cee095971d254702a78d8af1efaef0e
  $tc'Obj :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9648155106802727305##
                   6467530610731720045##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Obj1) -}
a3234ee8d3ffe509f625d3a981b3a966
  $tc'Obj1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Obj"#) -}
ffd395ceaf9d11066fffe721d33be16c
  $tc'ObjDecl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16923327650270061815##
                   10563062933490169513##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'ObjDecl1) -}
f1610cdc08e68d455c6e8eb81b52fc81
  $tc'ObjDecl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ObjDecl"#) -}
4e78415a6c341c41ff0a78f75c378acd
  $tc'Only :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18388823183747072027##
                   198788026802119444##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Only1) -}
8cdd435ee6ac4d64d73c2515e1d92edd
  $tc'Only1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Only"#) -}
e24e1529f495f8938c5bbc7f07bad4cb
  $tc'PCIDevice :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   594986014222610772##
                   1757019686461949200##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'PCIDevice1) -}
c8a49ee87642dd0981fd6a4e857b9231
  $tc'PCIDevice1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PCIDevice"#) -}
5415678c89163ca63dc5e96b49e0efb5
  $tc'Paddr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6514192358628826547##
                   7372392967775230551##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Paddr1) -}
a974e4aae2362bbd062b22142836a97e
  $tc'Paddr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Paddr"#) -}
2c9ba10565e865179cb9b5df896e6fa0
  $tc'Period :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   215363422531014625##
                   13360408516933881844##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Period1) -}
476f41714110deb0363dec511082a5c5
  $tc'Period1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Period"#) -}
67feb60c4212a386106e92534d28df2e
  $tc'Pin :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6190424488509529181##
                   7047382282826229608##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Pin1) -}
1041bd4753906c978c8d20e942c7858f
  $tc'Pin1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Pin"#) -}
361c0a58b4117eb410a5cfeb00215d1b
  $tc'Polarity :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16628075893460521375##
                   7487733717246501502##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Polarity1) -}
f75793aa24f260ee265cb6d8899aa46f
  $tc'Polarity1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Polarity"#) -}
107a5e0b938d74be9e88c7231ff0972e
  $tc'Ports :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13422907290844206800##
                   9603106408987766237##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Ports1) -}
090aadd6bf51bd5dc71f44b2787ab297
  $tc'Ports1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Ports"#) -}
f5138941d4d5429947bcb27e6e213130
  $tc'Prio :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   633003126252181043##
                   11225477997482346607##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Prio1) -}
0db41dde65cb022c806d5ed7e0a4baa9
  $tc'Prio1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Prio"#) -}
4d065eaf55cd4aa8d18985e55d22c2ce
  $tc'Reply :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6218555780823260178##
                   3402278232653977060##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Reply1) -}
056aaa681192b09bfa2ed11c710cc0d0
  $tc'Reply1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Reply"#) -}
47c189ee0dffe517e464ce17d538cc5e
  $tc'Rights :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9599055653638298471##
                   636865043016053288##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'Rights1) -}
e6278245d96e1e0625db346c37162801
  $tc'Rights1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Rights"#) -}
f4b41b3cc82a89201e996bfe9baa4649
  $tc'SCData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1657892073822922283##
                   11010090966242087984##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'SCData1) -}
db36b4e2edf8fc43d623d7f08a80af4e
  $tc'SCData1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SCData"#) -}
3157193bf9d08e85a3cc8d23ad294d08
  $tc'SCExtraParam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10298618406894486500##
                   2348094631435948900##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'SCExtraParam1) -}
9e5fb0f381ac7d31b61f04709806cfd6
  $tc'SCExtraParam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SCExtraParam"#) -}
e8a223c0891d12b9427aac0f0b00484f
  $tc'SP :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13283840567316499347##
                   14826475699838371752##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'SP1) -}
dde49647265013ca14076bc82f1fdbc0
  $tc'SP1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SP"#) -}
c7d2d82916245efa978d83b0e16ad160
  $tc'TCBExtraParam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2634421293604118587##
                   10482799036100160679##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'TCBExtraParam1) -}
77ab272d8954f5d44e201e7109b57c24
  $tc'TCBExtraParam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TCBExtraParam"#) -}
b5c74f6ac5bcc8d40e76d54b06663d1c
  $tc'To :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16528882028951806497##
                   14295467915209973583##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'To1) -}
24642d424d2814fd28dc403d9f072c5d
  $tc'To1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'To"#) -}
74b288ed11284496b4ffc3a83fc0af99
  $tc'VMSize :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8367869916853473655##
                   17685039764644673602##
                   CapDL.AST.$trModule
                   CapDL.AST.$tc'VMSize1) -}
65af29117aa7d281e4953d06b55ce6d4
  $tc'VMSize1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'VMSize"#) -}
ba88017a9a3c5e4dc16490da3dc6e589
  $tcCapMapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7475292516506728513##
                   5048716766901016239##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcCapMapping1) -}
da95c5f40f8f962ed679f09a98ec3a41
  $tcCapMapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "CapMapping"#) -}
ace3bb5f9336e20e0926d982634d1183
  $tcCapParam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5104113659030265027##
                   2413528786390003240##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcCapParam1) -}
a1f51a62a1b65aef0cc3fa2fecbf73a7
  $tcCapParam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "CapParam"#) -}
3ba8672568498cc6e0a05ae1bba8b913
  $tcDecl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3328286482839405246##
                   4337879835024550700##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcDecl1) -}
c9f6bded475572d4020f96401828a3e0
  $tcDecl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Decl"#) -}
fe8c529828542b70d97a09a83b49215c
  $tcFrameExtraParam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1015789945143086672##
                   6770344285956786079##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcFrameExtraParam1) -}
eeb266f92b6f07375892bc1b9fef250c
  $tcFrameExtraParam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FrameExtraParam"#) -}
d329734deffc7d4f8f64bc4704d8f0d2
  $tcIOAPICIRQExtraParam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6424313887535586954##
                   14151666890041254444##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcIOAPICIRQExtraParam1) -}
493952c3b8c97321977b6d3a2162f1cf
  $tcIOAPICIRQExtraParam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "IOAPICIRQExtraParam"#) -}
9842e6c713340d4803ae9cb39b4d8692
  $tcKO :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2512508022253733403##
                   10984826823669739928##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcKO1) -}
f99bc9700dc8289bb3da734594de161a
  $tcKO1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "KO"#) -}
5f080db5bdb2bf6b2860adc04a99b7b0
  $tcKODecl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11100673250067063845##
                   4873816467144744471##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcKODecl1) -}
8a60d2b686215d750265f80ee0d6f5c6
  $tcKODecl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "KODecl"#) -}
5c559ff4f77b92076f557b4742882a9e
  $tcMSIIRQExtraParam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4394073277257951037##
                   7289296808468240693##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcMSIIRQExtraParam1) -}
2aa655498cdde13b8c3e0de10897effc
  $tcMSIIRQExtraParam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "MSIIRQExtraParam"#) -}
fee9c683fb075b056edb16c59ed45ba3
  $tcModule :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17497078562145855760##
                   12591338545274538855##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcModule1) -}
ca8b493e6073872a83eb3e7b86bcb107
  $tcModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Module"#) -}
4a7157977dcc4de755f5246fef72b83d
  $tcObjParam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4979649633807401964##
                   17924446086984497578##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcObjParam1) -}
96d8e26c291a1b855c0b6f717a18487f
  $tcObjParam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ObjParam"#) -}
bdf299b4ee7baf21cdee14a33de76ee2
  $tcRange :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7805552825816648877##
                   15275584763522548374##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcRange1) -}
d30d13840bd4a8d00cd78f4581259955
  $tcRange1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Range"#) -}
a129dc4f63684476594ee7b5b889f63a
  $tcSCExtraParam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10394957545638284049##
                   13764694531233523696##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcSCExtraParam1) -}
dab0891245bf7dea00e0aa85f56533fd
  $tcSCExtraParam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SCExtraParam"#) -}
8d60a59315cccfb0a121f9d5ab0ea5f6
  $tcTCBExtraParam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12696014723497797010##
                   1473543369386713157##
                   CapDL.AST.$trModule
                   CapDL.AST.$tcTCBExtraParam1) -}
ed1cb0ee069d447e3896b5fd2bab3d05
  $tcTCBExtraParam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "TCBExtraParam"#) -}
9670c59748d163b1b7268407b3be30f2
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   CapDL.AST.$trModule2
                   CapDL.AST.$trModule1) -}
b5676c6856bd4de7d8c1bc37eb1da15f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "CapDL.AST"#) -}
ef419eb1715073ee4cc98836d89cf4d9
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
519e5ee713264da3f66ce82e6106a9de
  $w$c/= ::
    CapDL.AST.QName
    -> CapDL.AST.KO
    -> CapDL.AST.QName
    -> CapDL.AST.KO
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(1*U,1*U,1*U)><S,1*U><L,1*U(1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: CapDL.AST.QName)
                   (ww1 :: CapDL.AST.KO)
                   (ww2 :: CapDL.AST.QName)
                   (ww3 :: CapDL.AST.KO) ->
                 case CapDL.AST.$w$c==1 ww ww1 ww2 ww3 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
519e5ee713264da3f66ce82e6106a9de
  $w$c== ::
    CapDL.Model.KOType
    -> [CapDL.AST.ObjParam]
    -> [Data.Either.Either CapDL.AST.KODecl CapDL.AST.NameRef]
    -> CapDL.Model.KOType
    -> [CapDL.AST.ObjParam]
    -> [Data.Either.Either CapDL.AST.KODecl CapDL.AST.NameRef]
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: CapDL.Model.KOType)
                   (ww1 :: [CapDL.AST.ObjParam])
                   (ww2 :: [Data.Either.Either CapDL.AST.KODecl CapDL.AST.NameRef])
                   (ww3 :: CapDL.Model.KOType)
                   (ww4 :: [CapDL.AST.ObjParam])
                   (ww5 :: [Data.Either.Either CapDL.AST.KODecl CapDL.AST.NameRef]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==#
                           (GHC.Prim.dataToTag# @ CapDL.Model.KOType ww)
                           (GHC.Prim.dataToTag# @ CapDL.Model.KOType ww3)) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Classes.$fEq[]_$c==
                             @ CapDL.AST.ObjParam
                             CapDL.AST.$fEqObjParam
                             ww1
                             ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> GHC.Classes.$fEq[]_$c==
                             @ (Data.Either.Either CapDL.AST.KODecl CapDL.AST.NameRef)
                             CapDL.AST.$fEqKO_$s$fEqEither
                             ww2
                             ww5 } }) -}
519e5ee713264da3f66ce82e6106a9de
  $w$c==1 ::
    CapDL.AST.QName
    -> CapDL.AST.KO
    -> CapDL.AST.QName
    -> CapDL.AST.KO
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(1*U,1*U,1*U)><S,1*U><L,1*U(1*U,1*U,1*U)>,
     Inline: [0] -}
dde4225cb073b0222131e34641a850ba
  $w$cgmapM ::
    GHC.Base.Monad m =>
    (forall d. Data.Data.Data d => d -> m d)
    -> [GHC.Base.String] -> m CapDL.AST.FrameExtraParam
  {- Arity: 3,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(C1(U))><L,U>,
     Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   (w :: GHC.Base.Monad m)
                   (w1 :: forall d. Data.Data.Data d => d -> m d)
                   (ww :: [GHC.Base.String]) ->
                 let {
                   lvl396 :: m [GHC.Base.String]
                   = w1
                       @ [GHC.Base.String]
                       CapDL.AST.$fDataFrameExtraParam_$s$fData[]
                       ww
                 } in
                 GHC.Base.>>=
                   @ m
                   w
                   @ ([GHC.Base.String] -> CapDL.AST.FrameExtraParam)
                   @ CapDL.AST.FrameExtraParam
                   (GHC.Base.return
                      @ m
                      w
                      @ ([GHC.Base.String] -> CapDL.AST.FrameExtraParam)
                      CapDL.AST.Fill)
                   (\ (c' :: [GHC.Base.String] -> CapDL.AST.FrameExtraParam) ->
                    GHC.Base.>>=
                      @ m
                      w
                      @ [GHC.Base.String]
                      @ CapDL.AST.FrameExtraParam
                      lvl396
                      (\ (x' :: [GHC.Base.String]) ->
                       GHC.Base.return @ m w @ CapDL.AST.FrameExtraParam (c' x')))) -}
3578ccc8a9d40f34b37cc824007f79f9
  $w$cgmapQi ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u) -> CapDL.AST.Range -> u
  {- Arity: 3, Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ u
                   (ww :: GHC.Prim.Int#)
                   (w :: forall d. Data.Data.Data d => d -> u)
                   (w1 :: CapDL.AST.Range) ->
                 case w1 of wild {
                   CapDL.AST.Only a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 }
                   CapDL.AST.FromTo a1 a2
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1
                        1# -> w @ GHC.Types.Word Data.Data.$fDataWord a2 }
                   CapDL.AST.From a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 }
                   CapDL.AST.To a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 }
                   CapDL.AST.All -> Data.Maybe.fromJust1 @ u }) -}
21eab1f918cd88a42e02e30804bad3d0
  $w$cgmapQi1 ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.IOAPICIRQExtraParam
    -> u
  {- Arity: 3, Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ u
                   (ww :: GHC.Prim.Int#)
                   (w :: forall d. Data.Data.Data d => d -> u)
                   (w1 :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case w1 of wild {
                   CapDL.AST.IOAPIC a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 }
                   CapDL.AST.Pin a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 }
                   CapDL.AST.Level a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 }
                   CapDL.AST.Polarity a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 } }) -}
fc7d603deecce0f538ad1f168f348536
  $w$cgmapQi2 ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.MSIIRQExtraParam
    -> u
  {- Arity: 3, Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ u
                   (ww :: GHC.Prim.Int#)
                   (w :: forall d. Data.Data.Data d => d -> u)
                   (w1 :: CapDL.AST.MSIIRQExtraParam) ->
                 case w1 of wild {
                   CapDL.AST.MSIHandle a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 }
                   CapDL.AST.MSIPCIBus a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 }
                   CapDL.AST.MSIPCIDev a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 }
                   CapDL.AST.MSIPCIFun a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 } }) -}
20aa8a301e00eb831ce6d4fd05200c03
  $w$cgmapQi3 ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.SCExtraParam
    -> u
  {- Arity: 3, Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ u
                   (ww :: GHC.Prim.Int#)
                   (w :: forall d. Data.Data.Data d => d -> u)
                   (w1 :: CapDL.AST.SCExtraParam) ->
                 case w1 of wild {
                   CapDL.AST.Period a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Word.Word64 Data.Data.$fDataWord64 a1 }
                   CapDL.AST.Budget a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Word.Word64 Data.Data.$fDataWord64 a1 }
                   CapDL.AST.SCData a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 } }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $w$cgmapQi4 ::
    GHC.Prim.Int#
    -> (forall d. Data.Data.Data d => d -> u)
    -> CapDL.AST.TCBExtraParam
    -> u
  {- Arity: 3, Strictness: <S,1*U><C(C(S)),1*C1(C1(U))><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ u
                   (ww :: GHC.Prim.Int#)
                   (w :: forall d. Data.Data.Data d => d -> u)
                   (w1 :: CapDL.AST.TCBExtraParam) ->
                 case w1 of wild {
                   CapDL.AST.Addr a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 }
                   CapDL.AST.IP a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 }
                   CapDL.AST.SP a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Types.Word Data.Data.$fDataWord a1 }
                   CapDL.AST.Elf a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Base.String Data.Data.$fData[]_$s$fData[] a1 }
                   CapDL.AST.Prio a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Integer.Type.Integer Data.Data.$fDataInteger a1 }
                   CapDL.AST.MaxPrio a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0# -> w @ GHC.Integer.Type.Integer Data.Data.$fDataInteger a1 }
                   CapDL.AST.Affinity a1
                   -> case ww of wild1 {
                        DEFAULT -> Data.Maybe.fromJust1 @ u
                        0#
                        -> w @ GHC.Integer.Type.Integer Data.Data.$fDataInteger a1 } }) -}
78e1501056c1ccef1e4ef1413b54a0c8
  $w$cgunfold ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.ConstrRep
    -> Data.Data.DataType
    -> c CapDL.AST.CapParam
  {- Arity: 4, Strictness: <L,C(C1(U))><L,1*C1(U)><S,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (ww :: Data.Data.ConstrRep)
                   (ww1 :: Data.Data.DataType) ->
                 case ww of wild {
                   DEFAULT
                   -> case Data.Data.constrIndex1 ww1
                      ret_ty (c CapDL.AST.CapParam)
                      of {}
                   Data.Data.AlgConstr idx
                   -> case idx of wild1 { GHC.Types.I# ds1 ->
                      case ds1 of ds2 {
                        DEFAULT
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.CapParam
                             Data.Data.$fDataWord
                             (w @ CapDL.AST.NameRef
                                @ (GHC.Types.Word -> CapDL.AST.CapParam)
                                CapDL.AST.$fDataCapParam_$s$fData(,)1
                                (w1
                                   @ (CapDL.AST.NameRef -> GHC.Types.Word -> CapDL.AST.CapParam)
                                   CapDL.AST.FrameMapping))
                        1#
                        -> w @ CapDL.Model.CapRights
                             @ CapDL.AST.CapParam
                             CapDL.AST.$fDataCapParam_$s$fDataSet
                             (w1
                                @ (CapDL.Model.CapRights -> CapDL.AST.CapParam)
                                CapDL.AST.Rights)
                        2#
                        -> w @ CapDL.Model.CapRights
                             @ CapDL.AST.CapParam
                             CapDL.AST.$fDataCapParam_$s$fDataSet
                             (w1
                                @ (CapDL.Model.CapRights -> CapDL.AST.CapParam)
                                CapDL.AST.Masked)
                        3#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.CapParam
                             Data.Data.$fDataWord
                             (w1 @ (GHC.Types.Word -> CapDL.AST.CapParam) CapDL.AST.Guard)
                        4#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.CapParam
                             Data.Data.$fDataWord
                             (w1 @ (GHC.Types.Word -> CapDL.AST.CapParam) CapDL.AST.GuardSize)
                        5# -> w1 @ CapDL.AST.CapParam CapDL.AST.IRQRef
                        6#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.CapParam
                             Data.Data.$fDataWord
                             (w1 @ (GHC.Types.Word -> CapDL.AST.CapParam) CapDL.AST.Badge)
                        7#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.CapParam
                             Data.Data.$fDataWord
                             (w1 @ (GHC.Types.Word -> CapDL.AST.CapParam) CapDL.AST.Core)
                        8# -> w1 @ CapDL.AST.CapParam CapDL.AST.Reply
                        9# -> w1 @ CapDL.AST.CapParam CapDL.AST.MasterReply
                        10#
                        -> w @ CapDL.Model.Asid
                             @ CapDL.AST.CapParam
                             CapDL.AST.$fDataCapParam_$s$fData(,)
                             (w1 @ (CapDL.Model.Asid -> CapDL.AST.CapParam) CapDL.AST.Asid)
                        11#
                        -> w @ GHC.Types.Bool
                             @ CapDL.AST.CapParam
                             Data.Data.$fDataBool
                             (w1
                                @ (GHC.Types.Bool -> CapDL.AST.CapParam)
                                CapDL.AST.Cached) } } }) -}
3578ccc8a9d40f34b37cc824007f79f9
  $w$cgunfold1 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.ConstrRep
    -> Data.Data.DataType
    -> c CapDL.AST.Range
  {- Arity: 4, Strictness: <L,C(C1(U))><L,1*C1(U)><S,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (ww :: Data.Data.ConstrRep)
                   (ww1 :: Data.Data.DataType) ->
                 case ww of wild {
                   DEFAULT
                   -> case Data.Data.constrIndex1 ww1 ret_ty (c CapDL.AST.Range) of {}
                   Data.Data.AlgConstr idx
                   -> case idx of wild1 { GHC.Types.I# ds1 ->
                      case ds1 of ds2 {
                        DEFAULT -> w1 @ CapDL.AST.Range CapDL.AST.All
                        1#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.Range
                             Data.Data.$fDataWord
                             (w1 @ (GHC.Types.Word -> CapDL.AST.Range) CapDL.AST.Only)
                        2#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.Range
                             Data.Data.$fDataWord
                             (w @ GHC.Types.Word
                                @ (GHC.Types.Word -> CapDL.AST.Range)
                                Data.Data.$fDataWord
                                (w1
                                   @ (GHC.Types.Word -> GHC.Types.Word -> CapDL.AST.Range)
                                   CapDL.AST.FromTo))
                        3#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.Range
                             Data.Data.$fDataWord
                             (w1 @ (GHC.Types.Word -> CapDL.AST.Range) CapDL.AST.From)
                        4#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.Range
                             Data.Data.$fDataWord
                             (w1 @ (GHC.Types.Word -> CapDL.AST.Range) CapDL.AST.To) } } }) -}
21eab1f918cd88a42e02e30804bad3d0
  $w$cgunfold2 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.ConstrRep
    -> Data.Data.DataType
    -> c CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*C1(U)><S,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (ww :: Data.Data.ConstrRep)
                   (ww1 :: Data.Data.DataType) ->
                 case ww of wild {
                   DEFAULT
                   -> case Data.Data.constrIndex1 ww1
                      ret_ty (c CapDL.AST.IOAPICIRQExtraParam)
                      of {}
                   Data.Data.AlgConstr idx
                   -> case idx of wild1 { GHC.Types.I# ds1 ->
                      case ds1 of ds2 {
                        DEFAULT
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.IOAPICIRQExtraParam
                             Data.Data.$fDataWord
                             (w1
                                @ (GHC.Types.Word -> CapDL.AST.IOAPICIRQExtraParam)
                                CapDL.AST.Polarity)
                        1#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.IOAPICIRQExtraParam
                             Data.Data.$fDataWord
                             (w1
                                @ (GHC.Types.Word -> CapDL.AST.IOAPICIRQExtraParam)
                                CapDL.AST.IOAPIC)
                        2#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.IOAPICIRQExtraParam
                             Data.Data.$fDataWord
                             (w1
                                @ (GHC.Types.Word -> CapDL.AST.IOAPICIRQExtraParam)
                                CapDL.AST.Pin)
                        3#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.IOAPICIRQExtraParam
                             Data.Data.$fDataWord
                             (w1
                                @ (GHC.Types.Word -> CapDL.AST.IOAPICIRQExtraParam)
                                CapDL.AST.Level) } } }) -}
fc7d603deecce0f538ad1f168f348536
  $w$cgunfold3 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.ConstrRep
    -> Data.Data.DataType
    -> c CapDL.AST.MSIIRQExtraParam
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*C1(U)><S,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (ww :: Data.Data.ConstrRep)
                   (ww1 :: Data.Data.DataType) ->
                 case ww of wild {
                   DEFAULT
                   -> case Data.Data.constrIndex1 ww1
                      ret_ty (c CapDL.AST.MSIIRQExtraParam)
                      of {}
                   Data.Data.AlgConstr idx
                   -> case idx of wild1 { GHC.Types.I# ds1 ->
                      case ds1 of ds2 {
                        DEFAULT
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.MSIIRQExtraParam
                             Data.Data.$fDataWord
                             (w1
                                @ (GHC.Types.Word -> CapDL.AST.MSIIRQExtraParam)
                                CapDL.AST.MSIPCIFun)
                        1#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.MSIIRQExtraParam
                             Data.Data.$fDataWord
                             (w1
                                @ (GHC.Types.Word -> CapDL.AST.MSIIRQExtraParam)
                                CapDL.AST.MSIHandle)
                        2#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.MSIIRQExtraParam
                             Data.Data.$fDataWord
                             (w1
                                @ (GHC.Types.Word -> CapDL.AST.MSIIRQExtraParam)
                                CapDL.AST.MSIPCIBus)
                        3#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.MSIIRQExtraParam
                             Data.Data.$fDataWord
                             (w1
                                @ (GHC.Types.Word -> CapDL.AST.MSIIRQExtraParam)
                                CapDL.AST.MSIPCIDev) } } }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $w$cgunfold4 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.ConstrRep
    -> Data.Data.DataType
    -> c CapDL.AST.ObjParam
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*C1(U)><S,1*U><L,U>,
     Inline: [0] -}
20aa8a301e00eb831ce6d4fd05200c03
  $w$cgunfold5 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.ConstrRep
    -> Data.Data.DataType
    -> c CapDL.AST.SCExtraParam
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*C1(U)><S,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (ww :: Data.Data.ConstrRep)
                   (ww1 :: Data.Data.DataType) ->
                 case ww of wild {
                   DEFAULT
                   -> case Data.Data.constrIndex1 ww1
                      ret_ty (c CapDL.AST.SCExtraParam)
                      of {}
                   Data.Data.AlgConstr idx
                   -> case idx of wild1 { GHC.Types.I# ds1 ->
                      case ds1 of ds2 {
                        DEFAULT
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.SCExtraParam
                             Data.Data.$fDataWord
                             (w1 @ (GHC.Types.Word -> CapDL.AST.SCExtraParam) CapDL.AST.SCData)
                        1#
                        -> w @ GHC.Word.Word64
                             @ CapDL.AST.SCExtraParam
                             Data.Data.$fDataWord64
                             (w1 @ (GHC.Word.Word64 -> CapDL.AST.SCExtraParam) CapDL.AST.Period)
                        2#
                        -> w @ GHC.Word.Word64
                             @ CapDL.AST.SCExtraParam
                             Data.Data.$fDataWord64
                             (w1
                                @ (GHC.Word.Word64 -> CapDL.AST.SCExtraParam)
                                CapDL.AST.Budget) } } }) -}
6d356ea6fde5c9558e9d7f071d019b3f
  $w$cgunfold6 ::
    (forall b r. Data.Data.Data b => c (b -> r) -> c r)
    -> (forall r. r -> c r)
    -> Data.Data.ConstrRep
    -> Data.Data.DataType
    -> c CapDL.AST.TCBExtraParam
  {- Arity: 4,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*C1(U)><S,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ @ (c :: * -> *)
                   (w :: forall b r. Data.Data.Data b => c (b -> r) -> c r)
                   (w1 :: forall r. r -> c r)
                   (ww :: Data.Data.ConstrRep)
                   (ww1 :: Data.Data.DataType) ->
                 case ww of wild {
                   DEFAULT
                   -> case Data.Data.constrIndex1 ww1
                      ret_ty (c CapDL.AST.TCBExtraParam)
                      of {}
                   Data.Data.AlgConstr idx
                   -> case idx of wild1 { GHC.Types.I# ds1 ->
                      case ds1 of ds2 {
                        DEFAULT
                        -> w @ GHC.Integer.Type.Integer
                             @ CapDL.AST.TCBExtraParam
                             Data.Data.$fDataInteger
                             (w1
                                @ (GHC.Integer.Type.Integer -> CapDL.AST.TCBExtraParam)
                                CapDL.AST.Affinity)
                        1#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.TCBExtraParam
                             Data.Data.$fDataWord
                             (w1 @ (GHC.Types.Word -> CapDL.AST.TCBExtraParam) CapDL.AST.Addr)
                        2#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.TCBExtraParam
                             Data.Data.$fDataWord
                             (w1 @ (GHC.Types.Word -> CapDL.AST.TCBExtraParam) CapDL.AST.IP)
                        3#
                        -> w @ GHC.Types.Word
                             @ CapDL.AST.TCBExtraParam
                             Data.Data.$fDataWord
                             (w1 @ (GHC.Types.Word -> CapDL.AST.TCBExtraParam) CapDL.AST.SP)
                        4#
                        -> w @ GHC.Base.String
                             @ CapDL.AST.TCBExtraParam
                             Data.Data.$fData[]_$s$fData[]
                             (w1 @ (GHC.Base.String -> CapDL.AST.TCBExtraParam) CapDL.AST.Elf)
                        5#
                        -> w @ GHC.Integer.Type.Integer
                             @ CapDL.AST.TCBExtraParam
                             Data.Data.$fDataInteger
                             (w1
                                @ (GHC.Integer.Type.Integer -> CapDL.AST.TCBExtraParam)
                                CapDL.AST.Prio)
                        6#
                        -> w @ GHC.Integer.Type.Integer
                             @ CapDL.AST.TCBExtraParam
                             Data.Data.$fDataInteger
                             (w1
                                @ (GHC.Integer.Type.Integer -> CapDL.AST.TCBExtraParam)
                                CapDL.AST.MaxPrio) } } }) -}
6f333562637ba8a5d02ee9b310f593a5
  $w$cshowsPrec ::
    GHC.Prim.Int# -> CapDL.AST.CapMapping -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
8f7df8173f53c7ba9e17b58715798d32
  $w$cshowsPrec1 :: GHC.Prim.Int# -> CapDL.AST.Decl -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
6d356ea6fde5c9558e9d7f071d019b3f
  $w$cshowsPrec10 ::
    GHC.Prim.Int#
    -> CapDL.AST.TCBExtraParam -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0] -}
6dd6c5d3487e89a34775fed8604a33f1
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> [GHC.Base.String] -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: [GHC.Base.String])
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       CapDL.AST.$fShowFrameExtraParam4
                       (GHC.Base.++
                          @ GHC.Types.Char
                          CapDL.AST.$fShowFrameExtraParam3
                          (let {
                             s :: GHC.Base.String
                             = GHC.Base.++ @ GHC.Types.Char CapDL.AST.$fShowFrameExtraParam2 x
                           } in
                           case ww1 of wild {
                             [] -> GHC.CString.unpackAppendCString# "[]"# s
                             : x1 xs
                             -> GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showList__2
                                  (GHC.Types.:
                                     @ GHC.Types.Char
                                     GHC.Show.shows6
                                     (GHC.Show.showLitString
                                        x1
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.shows6
                                           (let {
                                              lvl396 :: [GHC.Types.Char]
                                              = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__1 s
                                            } in
                                            letrec {
                                              showl :: [[GHC.Types.Char]] -> GHC.Base.String
                                                {- Arity: 1, Strictness: <S,1*U> -}
                                              = \ (ds2 :: [[GHC.Types.Char]]) ->
                                                case ds2 of wild1 {
                                                  [] -> lvl396
                                                  : y ys
                                                  -> GHC.Types.:
                                                       @ GHC.Types.Char
                                                       GHC.Show.shows5
                                                       (GHC.Types.:
                                                          @ GHC.Types.Char
                                                          GHC.Show.shows6
                                                          (GHC.Show.showLitString
                                                             y
                                                             (GHC.Types.:
                                                                @ GHC.Types.Char
                                                                GHC.Show.shows6
                                                                (showl ys)))) }
                                            } in
                                            showl xs)))) }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
21eab1f918cd88a42e02e30804bad3d0
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> CapDL.AST.IOAPICIRQExtraParam
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0] -}
519e5ee713264da3f66ce82e6106a9de
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> CapDL.Model.KOType
    -> [CapDL.AST.ObjParam]
    -> [Data.Either.Either CapDL.AST.KODecl CapDL.AST.NameRef]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
519e5ee713264da3f66ce82e6106a9de
  $w$cshowsPrec5 ::
    GHC.Prim.Int#
    -> CapDL.AST.QName
    -> CapDL.AST.KO
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U(1*U,1*U,1*U)><L,U>,
     Inline: [0] -}
fc7d603deecce0f538ad1f168f348536
  $w$cshowsPrec6 ::
    GHC.Prim.Int#
    -> CapDL.AST.MSIIRQExtraParam -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0] -}
b4fa690aad7b090b1bb188e224c563c0
  $w$cshowsPrec7 ::
    GHC.Prim.Int#
    -> CapDL.Model.Arch
    -> [CapDL.AST.Decl]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: CapDL.Model.Arch)
                   (ww2 :: [CapDL.AST.Decl])
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       CapDL.AST.$fShowModule5
                       (CapDL.Model.$w$cshowsPrec
                          ww1
                          (GHC.Base.++
                             @ GHC.Types.Char
                             CapDL.AST.$fShowModule4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                CapDL.AST.$fShowModule3
                                (let {
                                   s :: GHC.Base.String
                                   = GHC.Base.++ @ GHC.Types.Char CapDL.AST.$fShowFrameExtraParam2 x
                                 } in
                                 case ww2 of wild {
                                   [] -> GHC.CString.unpackAppendCString# "[]"# s
                                   : x1 xs
                                   -> GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.showList__2
                                        (CapDL.AST.$w$cshowsPrec1
                                           0#
                                           x1
                                           (let {
                                              lvl396 :: [GHC.Types.Char]
                                              = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__1 s
                                            } in
                                            letrec {
                                              showl :: [CapDL.AST.Decl] -> GHC.Base.String
                                                {- Arity: 1, Strictness: <S,1*U> -}
                                              = \ (ds2 :: [CapDL.AST.Decl]) ->
                                                case ds2 of wild1 {
                                                  [] -> lvl396
                                                  : y ys
                                                  -> GHC.Types.:
                                                       @ GHC.Types.Char
                                                       GHC.Show.shows5
                                                       (CapDL.AST.$w$cshowsPrec1 0# y (showl ys)) }
                                            } in
                                            showl xs)) }))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char CapDL.AST.$fShowModule2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           CapDL.AST.$fShowModule2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w))) }) -}
c9bd94a581800fbb5b80072a4c9344c7
  $w$cshowsPrec8 ::
    GHC.Prim.Int# -> CapDL.AST.ObjParam -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
20aa8a301e00eb831ce6d4fd05200c03
  $w$cshowsPrec9 ::
    GHC.Prim.Int# -> CapDL.AST.SCExtraParam -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: CapDL.AST.SCExtraParam) ->
                 case w of wild {
                   CapDL.AST.Period b1
                   -> let {
                        w1 :: GHC.Integer.Type.Integer
                        = case b1 of wild1 { GHC.Word.W64# x# ->
                          let {
                            i# :: GHC.Prim.Int# = GHC.Prim.word2Int# x#
                          } in
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# i# 0#) of wild2 {
                            GHC.Types.False -> GHC.Integer.Type.wordToInteger x#
                            GHC.Types.True -> GHC.Integer.Type.smallInteger i# } }
                      } in
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            CapDL.AST.$fShowSCExtraParam7
                            (GHC.Base.++
                               @ GHC.Types.Char
                               CapDL.AST.$fShowSCExtraParam6
                               (case GHC.Show.$w$cshowsPrec1
                                       0#
                                       w1
                                       (GHC.Base.++
                                          @ GHC.Types.Char
                                          CapDL.AST.$fShowFrameExtraParam2
                                          x) of ww2 { (#,#) ww3 ww4 ->
                                GHC.Types.: @ GHC.Types.Char ww3 ww4 }))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) }
                   CapDL.AST.Budget b1
                   -> let {
                        w1 :: GHC.Integer.Type.Integer
                        = case b1 of wild1 { GHC.Word.W64# x# ->
                          let {
                            i# :: GHC.Prim.Int# = GHC.Prim.word2Int# x#
                          } in
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# i# 0#) of wild2 {
                            GHC.Types.False -> GHC.Integer.Type.wordToInteger x#
                            GHC.Types.True -> GHC.Integer.Type.smallInteger i# } }
                      } in
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            CapDL.AST.$fShowSCExtraParam5
                            (GHC.Base.++
                               @ GHC.Types.Char
                               CapDL.AST.$fShowSCExtraParam4
                               (case GHC.Show.$w$cshowsPrec1
                                       0#
                                       w1
                                       (GHC.Base.++
                                          @ GHC.Types.Char
                                          CapDL.AST.$fShowFrameExtraParam2
                                          x) of ww2 { (#,#) ww3 ww4 ->
                                GHC.Types.: @ GHC.Types.Char ww3 ww4 }))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) }
                   CapDL.AST.SCData b1
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            CapDL.AST.$fShowSCExtraParam3
                            (GHC.Base.++
                               @ GHC.Types.Char
                               CapDL.AST.$fShowSCExtraParam2
                               (case b1 of wild1 { GHC.Types.W# w1 ->
                                case GHC.Show.$wshowWord
                                       w1
                                       (GHC.Base.++
                                          @ GHC.Types.Char
                                          CapDL.AST.$fShowFrameExtraParam2
                                          x) of ww1 { (#,#) ww2 ww3 ->
                                GHC.Types.: @ GHC.Types.Char ww2 ww3 } }))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) } }) -}
6f333562637ba8a5d02ee9b310f593a5
  data CapMapping
    = CapMapping {slot :: GHC.Base.Maybe GHC.Types.Word,
                  capName :: GHC.Base.Maybe CapDL.AST.NameRef,
                  objRef :: CapDL.AST.NameRef,
                  capParams :: [CapDL.AST.CapParam],
                  maybeParent :: GHC.Base.Maybe CapDL.AST.SlotRef}
    | CopyOf {slot :: GHC.Base.Maybe GHC.Types.Word,
              capName :: GHC.Base.Maybe CapDL.AST.NameRef,
              target :: CapDL.AST.NameRef,
              copyParams :: [CapDL.AST.CapParam],
              maybeParent :: GHC.Base.Maybe CapDL.AST.SlotRef}
    | IRQMapping {slot :: GHC.Base.Maybe GHC.Types.Word,
                  objRef :: CapDL.AST.NameRef}
    | ASIDMapping {slot :: GHC.Base.Maybe GHC.Types.Word,
                   objRef :: CapDL.AST.NameRef}
78e1501056c1ccef1e4ef1413b54a0c8
  data CapParam
    = Rights {rights :: CapDL.Model.CapRights}
    | Masked {rights :: CapDL.Model.CapRights}
    | Guard {guard :: GHC.Types.Word}
    | GuardSize {guardSize :: GHC.Types.Word}
    | IRQRef
    | Badge {theBadge :: GHC.Types.Word}
    | Core {theCore :: GHC.Types.Word}
    | Reply
    | MasterReply
    | Asid {asid :: CapDL.Model.Asid}
    | Cached {cached :: GHC.Types.Bool}
    | FrameMapping {container :: CapDL.AST.NameRef,
                    slotIndex :: GHC.Types.Word}
8f7df8173f53c7ba9e17b58715798d32
  data Decl
    = ObjDecl {theKODecl :: CapDL.AST.KODecl}
    | CapDecl {nameRef :: CapDL.AST.NameRef,
               mappings :: [CapDL.AST.CapMapping]}
    | CapNameDecl {declCapName :: CapDL.AST.Name,
                   declObjRef :: CapDL.AST.NameRef,
                   declSlot :: GHC.Types.Word}
    | IRQDecl {irqs :: [CapDL.AST.CapMapping]}
    | ASIDDecl {asids :: [CapDL.AST.CapMapping]}
    | CDTDecl {parentRef :: CapDL.AST.SlotRef,
               children :: [Data.Either.Either CapDL.AST.Decl CapDL.AST.SlotRef]}
dde4225cb073b0222131e34641a850ba
  data FrameExtraParam = Fill {fill :: [GHC.Base.String]}
21eab1f918cd88a42e02e30804bad3d0
  data IOAPICIRQExtraParam
    = IOAPIC {ioapic :: GHC.Types.Word}
    | Pin {pin :: GHC.Types.Word}
    | Level {ioapic_level :: GHC.Types.Word}
    | Polarity {polarity :: GHC.Types.Word}
519e5ee713264da3f66ce82e6106a9de
  data KO
    = Obj {koType :: CapDL.Model.KOType,
           params :: [CapDL.AST.ObjParam],
           objDecls :: [Data.Either.Either
                          CapDL.AST.KODecl CapDL.AST.NameRef]}
519e5ee713264da3f66ce82e6106a9de
  data KODecl
    = KODecl {objName :: CapDL.AST.QName, object :: CapDL.AST.KO}
    RecFlag: Recursive
fc7d603deecce0f538ad1f168f348536
  data MSIIRQExtraParam
    = MSIHandle {handle :: GHC.Types.Word}
    | MSIPCIBus {bus :: GHC.Types.Word}
    | MSIPCIDev {dev :: GHC.Types.Word}
    | MSIPCIFun {fun :: GHC.Types.Word}
73de65ddd075a145d2849201c98ab8bf
  data Module
    = Module {theArch :: CapDL.Model.Arch, decls :: [CapDL.AST.Decl]}
a2810da6ca6e8f0c509e387b6c1140d9
  type Name = GHC.Base.String
adfb5fef568a67640f1355469089264d
  type NameRef = (CapDL.AST.Name, [CapDL.AST.Range])
c9bd94a581800fbb5b80072a4c9344c7
  data ObjParam
    = BitSize {bits :: GHC.Types.Word}
    | VMSize {vmSize :: GHC.Types.Word}
    | IOPTLevel {level :: GHC.Types.Word}
    | Paddr {paddr :: GHC.Types.Word}
    | TCBExtraParam {extraParam :: CapDL.AST.TCBExtraParam}
    | FrameExtraParam {frameExtraParam :: CapDL.AST.FrameExtraParam}
    | SCExtraParam {sc_extraParam :: CapDL.AST.SCExtraParam}
    | IOAPICIRQExtraParam {ioapic_irq_extraParam :: CapDL.AST.IOAPICIRQExtraParam}
    | MSIIRQExtraParam {msi_irq_extraParam :: CapDL.AST.MSIIRQExtraParam}
    | InitArguments {arguments :: [GHC.Types.Word]}
    | DomainID {domainID :: GHC.Types.Word}
    | ARMIOSpace {armiospace :: GHC.Types.Word}
    | PCIDevice {pciDevice :: (GHC.Types.Word, GHC.Types.Word,
                               GHC.Types.Word)}
    | Dom {dom :: GHC.Integer.Type.Integer}
    | FaultEP {faulEP :: GHC.Types.Word}
    | Ports {theRange :: (GHC.Types.Word, GHC.Types.Word)}
61118e720f7ecb8253135a1baef3438a
  type QName = [CapDL.AST.NameRef]
3578ccc8a9d40f34b37cc824007f79f9
  data Range
    = Only GHC.Types.Word
    | FromTo GHC.Types.Word GHC.Types.Word
    | From GHC.Types.Word
    | To GHC.Types.Word
    | All
20aa8a301e00eb831ce6d4fd05200c03
  data SCExtraParam
    = Period {period :: GHC.Word.Word64}
    | Budget {budget :: GHC.Word.Word64}
    | SCData {scData :: GHC.Types.Word}
745ddbab1ba029dfb54b3f3247de45c5
  type SlotRef =
    Data.Either.Either
      (CapDL.AST.NameRef, GHC.Types.Word) CapDL.AST.NameRef
6d356ea6fde5c9558e9d7f071d019b3f
  data TCBExtraParam
    = Addr {addr :: GHC.Types.Word}
    | IP {ip :: GHC.Types.Word}
    | SP {sp :: GHC.Types.Word}
    | Elf {elf :: GHC.Base.String}
    | Prio {prio :: GHC.Integer.Type.Integer}
    | MaxPrio {max_prio :: GHC.Integer.Type.Integer}
    | Affinity {affinity :: GHC.Integer.Type.Integer}
bf0373f14173a616d93e7e96e3b1c026
  addr :: CapDL.AST.TCBExtraParam -> GHC.Types.Word
  RecSel Left CapDL.AST.TCBExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.TCBExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.addr1 CapDL.AST.Addr ds2 -> ds2 }) -}
d3e42ccff554c7fce6619eba48456b77
  addr1 :: GHC.Types.Word
  {- Strictness: x -}
6365c2d3ed03e5dafaf9f7ffbdebd58b
  affinity :: CapDL.AST.TCBExtraParam -> GHC.Integer.Type.Integer
  RecSel Left CapDL.AST.TCBExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.TCBExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.affinity1 CapDL.AST.Affinity ds2 -> ds2 }) -}
32b36b82cec1cd44b1f939309e58cae2
  affinity1 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
5c68719caa3ac9b28c1ab61890c2091e
  arguments :: CapDL.AST.ObjParam -> [GHC.Types.Word]
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.arguments1
                   CapDL.AST.InitArguments ds2 -> ds2 }) -}
4e52407ad47798e9d2070d1955d182bb
  arguments1 :: [GHC.Types.Word]
  {- Strictness: x -}
c6fdf5fcd8257ee5c1cdfd18293f1ab2
  armiospace :: CapDL.AST.ObjParam -> GHC.Types.Word
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.armiospace1
                   CapDL.AST.ARMIOSpace ds2 -> ds2 }) -}
5d4a2874faf75cadbcaa33feee5e6ccd
  armiospace1 :: GHC.Types.Word
  {- Strictness: x -}
41d9d1933a1e412ca30ca55a866ae957
  asid :: CapDL.AST.CapParam -> CapDL.Model.Asid
  RecSel Left CapDL.AST.CapParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.asid1 CapDL.AST.Asid ds2 -> ds2 }) -}
69ff0467563a26a2426a9127fa39d9c9
  asid1 :: CapDL.Model.Asid
  {- Strictness: x -}
7ccb1b7f2d3c9b6948266fa47de45867
  asids :: CapDL.AST.Decl -> [CapDL.AST.CapMapping]
  RecSel Left CapDL.AST.Decl
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Decl) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.asids1 CapDL.AST.ASIDDecl ds2 -> ds2 }) -}
7c2a3f8436427156f087cb6fcc2d43d6
  asids1 :: [CapDL.AST.CapMapping]
  {- Strictness: x -}
f6e7a4975956b1b9ec44dd77b62c9a4a
  bits :: CapDL.AST.ObjParam -> GHC.Types.Word
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.bits1 CapDL.AST.BitSize ds2 -> ds2 }) -}
bc08dbbeede2be206d32ef937bd66ef0
  bits1 :: GHC.Types.Word
  {- Strictness: x -}
f9f5f284af3d20797a6fe2307e02efcb
  budget :: CapDL.AST.SCExtraParam -> GHC.Word.Word64
  RecSel Left CapDL.AST.SCExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.SCExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.budget1 CapDL.AST.Budget ds2 -> ds2 }) -}
a4a3e4267ebbe804d801e7180e1e1976
  budget1 :: GHC.Word.Word64
  {- Strictness: x -}
917bafb4101ed7e646955be76f046013
  bus :: CapDL.AST.MSIIRQExtraParam -> GHC.Types.Word
  RecSel Left CapDL.AST.MSIIRQExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.MSIIRQExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.bus1 CapDL.AST.MSIPCIBus ds2 -> ds2 }) -}
b07b0b5c84afc661409bce5cb19e7064
  bus1 :: GHC.Types.Word
  {- Strictness: x -}
389a21cf80c017ca3fd2856974d97dfd
  cached :: CapDL.AST.CapParam -> GHC.Types.Bool
  RecSel Left CapDL.AST.CapParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.cached1 CapDL.AST.Cached ds2 -> ds2 }) -}
819eea84c467a9ea9302a3729c6ff991
  cached1 :: GHC.Types.Bool
  {- Strictness: x -}
c927a2f35a27c0c35361c777dd7e98bf
  capName :: CapDL.AST.CapMapping -> GHC.Base.Maybe CapDL.AST.NameRef
  RecSel Left CapDL.AST.CapMapping
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapMapping) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.capName1
                   CapDL.AST.CapMapping ds2 ds3 ds4 ds5 ds6 -> ds3
                   CapDL.AST.CopyOf ds2 ds3 ds4 ds5 ds6 -> ds3 }) -}
81ac48c2becb6d05cafb8499e6e37c01
  capName1 :: GHC.Base.Maybe CapDL.AST.NameRef
  {- Strictness: x -}
201e0e30a9d54db3d93d2b1be57174ab
  capParams :: CapDL.AST.CapMapping -> [CapDL.AST.CapParam]
  RecSel Left CapDL.AST.CapMapping
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapMapping) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.capParams1
                   CapDL.AST.CapMapping ds2 ds3 ds4 ds5 ds6 -> ds5 }) -}
bfbbbb32191d66001b2e0847862510c7
  capParams1 :: [CapDL.AST.CapParam]
  {- Strictness: x -}
236ada15e4d8aa724f6f8720f4890d84
  children ::
    CapDL.AST.Decl
    -> [Data.Either.Either CapDL.AST.Decl CapDL.AST.SlotRef]
  RecSel Left CapDL.AST.Decl
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Decl) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.children1
                   CapDL.AST.CDTDecl ds2 ds3 -> ds3 }) -}
6d640741e1b52f2126ae1be06b3cc995
  children1 :: [Data.Either.Either CapDL.AST.Decl CapDL.AST.SlotRef]
  {- Strictness: x -}
1a0e1372b836d4e1ae9c921a6429b857
  container :: CapDL.AST.CapParam -> CapDL.AST.NameRef
  RecSel Left CapDL.AST.CapParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.container1
                   CapDL.AST.FrameMapping ds2 ds3 -> ds2 }) -}
28cc96a6704a281e27f9c8dd77810459
  container1 :: CapDL.AST.NameRef
  {- Strictness: x -}
8e6bf832bb253de4488036839e98b395
  copyParams :: CapDL.AST.CapMapping -> [CapDL.AST.CapParam]
  RecSel Left CapDL.AST.CapMapping
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapMapping) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.copyParams1
                   CapDL.AST.CopyOf ds2 ds3 ds4 ds5 ds6 -> ds5 }) -}
94aa5263a51dd7c597da63d2b1b8f1e9
  copyParams1 :: [CapDL.AST.CapParam]
  {- Strictness: x -}
818fc7782682e5c70630d5cc14354e41
  declCapName :: CapDL.AST.Decl -> CapDL.AST.Name
  RecSel Left CapDL.AST.Decl
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Decl) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.declCapName1
                   CapDL.AST.CapNameDecl ds2 ds3 ds4 -> ds2 }) -}
68d14ceba22a898f33952e52c0dc2e0f
  declCapName1 :: CapDL.AST.Name
  {- Strictness: x -}
810e38e67d818e0c60f6ba0844dd15fa
  declObjRef :: CapDL.AST.Decl -> CapDL.AST.NameRef
  RecSel Left CapDL.AST.Decl
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Decl) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.declObjRef1
                   CapDL.AST.CapNameDecl ds2 ds3 ds4 -> ds3 }) -}
d22b22f3149f7a2f5ae26edda1a018ee
  declObjRef1 :: CapDL.AST.NameRef
  {- Strictness: x -}
040eec8d7cc4a03cd5f134205f0c39a1
  declSlot :: CapDL.AST.Decl -> GHC.Types.Word
  RecSel Left CapDL.AST.Decl
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Decl) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.declSlot1
                   CapDL.AST.CapNameDecl ds2 ds3 ds4 -> ds4 }) -}
b43f969c2048eb6e505e22b0c5fd2ecf
  declSlot1 :: GHC.Types.Word
  {- Strictness: x -}
ba09fb2780208fd0e533b7b7c2760eec
  decls :: CapDL.AST.Module -> [CapDL.AST.Decl]
  RecSel Left CapDL.AST.Module
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Module) ->
                 case ds1 of wild { CapDL.AST.Module ds2 ds3 -> ds3 }) -}
2006ee738cd6a34e25fd8cb028231821
  dev :: CapDL.AST.MSIIRQExtraParam -> GHC.Types.Word
  RecSel Left CapDL.AST.MSIIRQExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.MSIIRQExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.dev1 CapDL.AST.MSIPCIDev ds2 -> ds2 }) -}
6fd53653abe8eb6ea67d8a159a35b439
  dev1 :: GHC.Types.Word
  {- Strictness: x -}
af88b1fd5509529de778fb6c7db95a61
  dom :: CapDL.AST.ObjParam -> GHC.Integer.Type.Integer
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.dom1 CapDL.AST.Dom ds2 -> ds2 }) -}
0b69464794be1330ab502d576e41f2c3
  dom1 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
dae602545804def095b082e70b02762d
  domainID :: CapDL.AST.ObjParam -> GHC.Types.Word
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.domainID1 CapDL.AST.DomainID ds2 -> ds2 }) -}
9e67b7df1c89b71fe597e88a7bca9111
  domainID1 :: GHC.Types.Word
  {- Strictness: x -}
6dab1f06e057d2fa3adc7accc89d9f4d
  elf :: CapDL.AST.TCBExtraParam -> GHC.Base.String
  RecSel Left CapDL.AST.TCBExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.TCBExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.elf1 CapDL.AST.Elf ds2 -> ds2 }) -}
169021a3db4ab16137322d2716a07915
  elf1 :: GHC.Base.String
  {- Strictness: x -}
e91c03b9dfb7b4fad59454ed87f32db0
  extraParam :: CapDL.AST.ObjParam -> CapDL.AST.TCBExtraParam
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.extraParam1
                   CapDL.AST.TCBExtraParam ds2 -> ds2 }) -}
8090cc3fa78e6631cac09260b6777d9c
  extraParam1 :: CapDL.AST.TCBExtraParam
  {- Strictness: x -}
5b8e68642d7bfc688e5ae62765fa2ddf
  faulEP :: CapDL.AST.ObjParam -> GHC.Types.Word
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.faulEP1 CapDL.AST.FaultEP ds2 -> ds2 }) -}
8df53b991402a05f93a203dd820b8988
  faulEP1 :: GHC.Types.Word
  {- Strictness: x -}
02108c06699486543c16d80008b24e50
  fill :: CapDL.AST.FrameExtraParam -> [GHC.Base.String]
  RecSel Left CapDL.AST.FrameExtraParam
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.FrameExtraParam) ->
                 case ds1 of wild { CapDL.AST.Fill ds2 -> ds2 }) -}
bf7619752caf950e394cf1d1bffef2ef
  frameExtraParam :: CapDL.AST.ObjParam -> CapDL.AST.FrameExtraParam
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.frameExtraParam1
                   CapDL.AST.FrameExtraParam ds2 -> ds2 }) -}
cfeb6b844a37b44f97a3066f433428c9
  frameExtraParam1 :: CapDL.AST.FrameExtraParam
  {- Strictness: x -}
8c78b51e4bf6e59fd44c39a33f4fe04f
  fun :: CapDL.AST.MSIIRQExtraParam -> GHC.Types.Word
  RecSel Left CapDL.AST.MSIIRQExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.MSIIRQExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.fun1 CapDL.AST.MSIPCIFun ds2 -> ds2 }) -}
34bdecc9369cbbc8e8b80a97e63946fe
  fun1 :: GHC.Types.Word
  {- Strictness: x -}
43916ac95b6890aa55618ca190c15006
  guard :: CapDL.AST.CapParam -> GHC.Types.Word
  RecSel Left CapDL.AST.CapParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.guard1 CapDL.AST.Guard ds2 -> ds2 }) -}
b1e0861f62ed161b975a2470be76fd54
  guard1 :: GHC.Types.Word
  {- Strictness: x -}
8da854c7c6b06414babd430d1c29eaf5
  guardSize :: CapDL.AST.CapParam -> GHC.Types.Word
  RecSel Left CapDL.AST.CapParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.guardSize1
                   CapDL.AST.GuardSize ds2 -> ds2 }) -}
97f437b5de81cbda99c6baca6009d369
  guardSize1 :: GHC.Types.Word
  {- Strictness: x -}
3e92a5a5d978c24173350a8709635755
  handle :: CapDL.AST.MSIIRQExtraParam -> GHC.Types.Word
  RecSel Left CapDL.AST.MSIIRQExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.MSIIRQExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.handle1 CapDL.AST.MSIHandle ds2 -> ds2 }) -}
51361da0d2bfd25aefca9412b846592d
  handle1 :: GHC.Types.Word
  {- Strictness: x -}
9fcae167534c849319dc83057b551294
  ioapic :: CapDL.AST.IOAPICIRQExtraParam -> GHC.Types.Word
  RecSel Left CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.ioapic1 CapDL.AST.IOAPIC ds2 -> ds2 }) -}
9fe55a3b713806cde9a820ba5723568a
  ioapic1 :: GHC.Types.Word
  {- Strictness: x -}
ed1394484a0a7c9fa10cb3fba010b9ab
  ioapic_irq_extraParam ::
    CapDL.AST.ObjParam -> CapDL.AST.IOAPICIRQExtraParam
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.ioapic_irq_extraParam1
                   CapDL.AST.IOAPICIRQExtraParam ds2 -> ds2 }) -}
f643c8a0788af9bac245397dcd8e31d1
  ioapic_irq_extraParam1 :: CapDL.AST.IOAPICIRQExtraParam
  {- Strictness: x -}
0a22c041308edeb19a54196aa7ce132d
  ioapic_level :: CapDL.AST.IOAPICIRQExtraParam -> GHC.Types.Word
  RecSel Left CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.ioapic_level1 CapDL.AST.Level ds2 -> ds2 }) -}
19f8b9892e9210dfc39c7699e5841981
  ioapic_level1 :: GHC.Types.Word
  {- Strictness: x -}
2089774d5bd5ffbc215b396601e7fcde
  ip :: CapDL.AST.TCBExtraParam -> GHC.Types.Word
  RecSel Left CapDL.AST.TCBExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.TCBExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.ip1 CapDL.AST.IP ds2 -> ds2 }) -}
243b6595344e9465db3841260cdca757
  ip1 :: GHC.Types.Word
  {- Strictness: x -}
ff588705abed465b43624740b69fb9ca
  irqs :: CapDL.AST.Decl -> [CapDL.AST.CapMapping]
  RecSel Left CapDL.AST.Decl
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Decl) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.irqs1 CapDL.AST.IRQDecl ds2 -> ds2 }) -}
1063e01627e8b211f88ad2a896556f5f
  irqs1 :: [CapDL.AST.CapMapping]
  {- Strictness: x -}
907025394d40cf60529857b60e8f5297
  koType :: CapDL.AST.KO -> CapDL.Model.KOType
  RecSel Left CapDL.AST.KO
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.KO) ->
                 case ds1 of wild { CapDL.AST.Obj ds2 ds3 ds4 -> ds2 }) -}
d7fea850c22cec2ccd2274ca66c6584e
  level :: CapDL.AST.ObjParam -> GHC.Types.Word
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.level1 CapDL.AST.IOPTLevel ds2 -> ds2 }) -}
e139535790bac3bf754610c90f43c9ca
  level1 :: GHC.Types.Word
  {- Strictness: x -}
346b60c330a805580b6a42556ae9ba16
  mappings :: CapDL.AST.Decl -> [CapDL.AST.CapMapping]
  RecSel Left CapDL.AST.Decl
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Decl) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.mappings1
                   CapDL.AST.CapDecl ds2 ds3 -> ds3 }) -}
b58e487c5ce16d950660ca2d8cceb548
  mappings1 :: [CapDL.AST.CapMapping]
  {- Strictness: x -}
6a432c7a4a24becaf506d976b7887a62
  max_prio :: CapDL.AST.TCBExtraParam -> GHC.Integer.Type.Integer
  RecSel Left CapDL.AST.TCBExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.TCBExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.max_prio1 CapDL.AST.MaxPrio ds2 -> ds2 }) -}
d7dc0df31a4b335937304ebadc04ea24
  max_prio1 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
15c77b16e8020203a5022f8de1784c9d
  maybeParent ::
    CapDL.AST.CapMapping -> GHC.Base.Maybe CapDL.AST.SlotRef
  RecSel Left CapDL.AST.CapMapping
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapMapping) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.maybeParent1
                   CapDL.AST.CapMapping ds2 ds3 ds4 ds5 ds6 -> ds6
                   CapDL.AST.CopyOf ds2 ds3 ds4 ds5 ds6 -> ds6 }) -}
c1b44dc1cc36841e06b6a1a5ca857286
  maybeParent1 :: GHC.Base.Maybe CapDL.AST.SlotRef
  {- Strictness: x -}
3bb8122831ec6bafe2bd1f5c76179663
  msi_irq_extraParam ::
    CapDL.AST.ObjParam -> CapDL.AST.MSIIRQExtraParam
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.msi_irq_extraParam1
                   CapDL.AST.MSIIRQExtraParam ds2 -> ds2 }) -}
33f633f74d38f8c281385a0fb9d09069
  msi_irq_extraParam1 :: CapDL.AST.MSIIRQExtraParam
  {- Strictness: x -}
cee40ea8d9b04147aa90a094ae0a722d
  nameRef :: CapDL.AST.Decl -> CapDL.AST.NameRef
  RecSel Left CapDL.AST.Decl
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Decl) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.nameRef1
                   CapDL.AST.CapDecl ds2 ds3 -> ds2 }) -}
965d466ebb98cc465bd03554cf52511c
  nameRef1 :: CapDL.AST.NameRef
  {- Strictness: x -}
09dd1a62eca6631ad431752fe549a29d
  objDecls ::
    CapDL.AST.KO
    -> [Data.Either.Either CapDL.AST.KODecl CapDL.AST.NameRef]
  RecSel Left CapDL.AST.KO
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.KO) ->
                 case ds1 of wild { CapDL.AST.Obj ds2 ds3 ds4 -> ds4 }) -}
ab643687e5abd24a21aac1c40b2b298f
  objName :: CapDL.AST.KODecl -> CapDL.AST.QName
  RecSel Left CapDL.AST.KODecl
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.KODecl) ->
                 case ds1 of wild { CapDL.AST.KODecl ds2 ds3 -> ds2 }) -}
82560c5505bf9fbc9e1963174d41af89
  objRef :: CapDL.AST.CapMapping -> CapDL.AST.NameRef
  RecSel Left CapDL.AST.CapMapping
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapMapping) ->
                 case ds1 of wild {
                   CapDL.AST.CapMapping ds2 ds3 ds4 ds5 ds6 -> ds4
                   CapDL.AST.CopyOf ipv ipv1 ipv2 ipv3 ipv4 -> CapDL.AST.objRef1
                   CapDL.AST.IRQMapping ds2 ds3 -> ds3
                   CapDL.AST.ASIDMapping ds2 ds3 -> ds3 }) -}
2f366f404d78dd8359a27b6e1efc5f1b
  objRef1 :: CapDL.AST.NameRef
  {- Strictness: x -}
edb95cc8bfea5c769b2d7960f70f331d
  object :: CapDL.AST.KODecl -> CapDL.AST.KO
  RecSel Left CapDL.AST.KODecl
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.KODecl) ->
                 case ds1 of wild { CapDL.AST.KODecl ds2 ds3 -> ds3 }) -}
2adae0342ed5c940dde50a35350c2c36
  paddr :: CapDL.AST.ObjParam -> GHC.Types.Word
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.paddr1 CapDL.AST.Paddr ds2 -> ds2 }) -}
3e73212fd3c6c1c46d6c7ff3ad73585f
  paddr1 :: GHC.Types.Word
  {- Strictness: x -}
273124c8de0436a7936559df9f5bed58
  params :: CapDL.AST.KO -> [CapDL.AST.ObjParam]
  RecSel Left CapDL.AST.KO
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.KO) ->
                 case ds1 of wild { CapDL.AST.Obj ds2 ds3 ds4 -> ds3 }) -}
072b8b04b0127fd8441d227db713ee14
  parentRef :: CapDL.AST.Decl -> CapDL.AST.SlotRef
  RecSel Left CapDL.AST.Decl
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Decl) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.parentRef1
                   CapDL.AST.CDTDecl ds2 ds3 -> ds2 }) -}
65f972d65abbfcee4c391bcc095e854c
  parentRef1 :: CapDL.AST.SlotRef
  {- Strictness: x -}
1a60c7089237594e842135b6ff3c2e30
  pciDevice ::
    CapDL.AST.ObjParam
    -> (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word)
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.pciDevice1
                   CapDL.AST.PCIDevice ds2 -> ds2 }) -}
a3bd0a672396eb20038a9e40c267bdce
  pciDevice1 :: (GHC.Types.Word, GHC.Types.Word, GHC.Types.Word)
  {- Strictness: x -}
bd834469f0d3440ac06479a56be63517
  period :: CapDL.AST.SCExtraParam -> GHC.Word.Word64
  RecSel Left CapDL.AST.SCExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.SCExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.period1 CapDL.AST.Period ds2 -> ds2 }) -}
85d944022b02a4fdeb797da38f2fe11a
  period1 :: GHC.Word.Word64
  {- Strictness: x -}
5db5e1490a4bd97fcd1e6c1377de6589
  pin :: CapDL.AST.IOAPICIRQExtraParam -> GHC.Types.Word
  RecSel Left CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.pin1 CapDL.AST.Pin ds2 -> ds2 }) -}
2dbcbbdcdfd32f095aba71c9016a4536
  pin1 :: GHC.Types.Word
  {- Strictness: x -}
2f3908a04bdb986ee941b858451367fc
  polarity :: CapDL.AST.IOAPICIRQExtraParam -> GHC.Types.Word
  RecSel Left CapDL.AST.IOAPICIRQExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.IOAPICIRQExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.polarity1 CapDL.AST.Polarity ds2 -> ds2 }) -}
77494f2bdd910e5972e56ffe42b6d953
  polarity1 :: GHC.Types.Word
  {- Strictness: x -}
757179d69c879f74b37b512eee570655
  prio :: CapDL.AST.TCBExtraParam -> GHC.Integer.Type.Integer
  RecSel Left CapDL.AST.TCBExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.TCBExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.prio1 CapDL.AST.Prio ds2 -> ds2 }) -}
8fa2286b14376aba53a74f4e7fca16e5
  prio1 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
df9dd5e296f6d3ddeb4642df21f59a52
  rights :: CapDL.AST.CapParam -> CapDL.Model.CapRights
  RecSel Left CapDL.AST.CapParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.rights1
                   CapDL.AST.Rights ds2 -> ds2
                   CapDL.AST.Masked ds2 -> ds2 }) -}
007cd156139a29eefb5e139bff0a5104
  rights1 :: CapDL.Model.CapRights
  {- Strictness: x -}
2c89bd10026aad9ae74819a35cdaabb5
  scData :: CapDL.AST.SCExtraParam -> GHC.Types.Word
  RecSel Left CapDL.AST.SCExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.SCExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.scData1 CapDL.AST.SCData ds2 -> ds2 }) -}
f9a126c39f145cd9b035cbd39596e089
  scData1 :: GHC.Types.Word
  {- Strictness: x -}
b7dbfef491e4c4d18eebce32ead9cbac
  sc_extraParam :: CapDL.AST.ObjParam -> CapDL.AST.SCExtraParam
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.sc_extraParam1
                   CapDL.AST.SCExtraParam ds2 -> ds2 }) -}
697d83b83208557e4e919c25d859b302
  sc_extraParam1 :: CapDL.AST.SCExtraParam
  {- Strictness: x -}
dd1d66ffe198bb7f04b9aef06d0abd75
  slot :: CapDL.AST.CapMapping -> GHC.Base.Maybe GHC.Types.Word
  RecSel Left CapDL.AST.CapMapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapMapping) ->
                 case ds1 of wild {
                   CapDL.AST.CapMapping ds2 ds3 ds4 ds5 ds6 -> ds2
                   CapDL.AST.CopyOf ds2 ds3 ds4 ds5 ds6 -> ds2
                   CapDL.AST.IRQMapping ds2 ds3 -> ds2
                   CapDL.AST.ASIDMapping ds2 ds3 -> ds2 }) -}
9274dc7bf8447b23f3e0bab939c4f95f
  slotIndex :: CapDL.AST.CapParam -> GHC.Types.Word
  RecSel Left CapDL.AST.CapParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.slotIndex1
                   CapDL.AST.FrameMapping ds2 ds3 -> ds3 }) -}
bded193f87dc96b00b0f208286ae7534
  slotIndex1 :: GHC.Types.Word
  {- Strictness: x -}
49e560d55ccb9ec2112c3cffc4c4a139
  sp :: CapDL.AST.TCBExtraParam -> GHC.Types.Word
  RecSel Left CapDL.AST.TCBExtraParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.TCBExtraParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.sp1 CapDL.AST.SP ds2 -> ds2 }) -}
31fd68ce9d7d9100a80ff421734692d1
  sp1 :: GHC.Types.Word
  {- Strictness: x -}
aeba7dc6e255ae563484d6d23b612ddd
  target :: CapDL.AST.CapMapping -> CapDL.AST.NameRef
  RecSel Left CapDL.AST.CapMapping
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapMapping) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.target1
                   CapDL.AST.CopyOf ds2 ds3 ds4 ds5 ds6 -> ds4 }) -}
e65758cd418b9aa0ffe5501d16f0ff19
  target1 :: CapDL.AST.NameRef
  {- Strictness: x -}
1575d306b56e1021080b3b38af7327d8
  theArch :: CapDL.AST.Module -> CapDL.Model.Arch
  RecSel Left CapDL.AST.Module
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Module) ->
                 case ds1 of wild { CapDL.AST.Module ds2 ds3 -> ds2 }) -}
f0181c5b541ba8c9cd058be85d551b25
  theBadge :: CapDL.AST.CapParam -> GHC.Types.Word
  RecSel Left CapDL.AST.CapParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.theBadge1 CapDL.AST.Badge ds2 -> ds2 }) -}
bf0f614076e0da3c96995b362c649add
  theBadge1 :: GHC.Types.Word
  {- Strictness: x -}
e34b7aaa1a068d369d45824a551ee92f
  theCore :: CapDL.AST.CapParam -> GHC.Types.Word
  RecSel Left CapDL.AST.CapParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.CapParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.theCore1 CapDL.AST.Core ds2 -> ds2 }) -}
43d119dcb4fbb5e3c878473b014462b8
  theCore1 :: GHC.Types.Word
  {- Strictness: x -}
285b73f59a14f7bef3f5c2e72c679f5e
  theKODecl :: CapDL.AST.Decl -> CapDL.AST.KODecl
  RecSel Left CapDL.AST.Decl
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.Decl) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.theKODecl1 CapDL.AST.ObjDecl ds2 -> ds2 }) -}
41644e8c510097f445c5e596c1bf93db
  theKODecl1 :: CapDL.AST.KODecl
  {- Strictness: x -}
3605fbf28fdffc0d01dc86005435a40d
  theRange :: CapDL.AST.ObjParam -> (GHC.Types.Word, GHC.Types.Word)
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.theRange1 CapDL.AST.Ports ds2 -> ds2 }) -}
6ac25f7dd9b073e54756a55ee7e0b8cd
  theRange1 :: (GHC.Types.Word, GHC.Types.Word)
  {- Strictness: x -}
2f8c8b3d0577d88e01b275bc6e7acee3
  vmSize :: CapDL.AST.ObjParam -> GHC.Types.Word
  RecSel Left CapDL.AST.ObjParam
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: CapDL.AST.ObjParam) ->
                 case ds1 of wild {
                   DEFAULT -> CapDL.AST.vmSize1 CapDL.AST.VMSize ds2 -> ds2 }) -}
d789dd9e9df3ca98faa229edb96ebcde
  vmSize1 :: GHC.Types.Word
  {- Strictness: x -}
instance [safe] Data.Data.Data [CapDL.AST.CapParam]
  = CapDL.AST.$fDataCapParam
instance [safe] Data.Data.Data [CapDL.AST.FrameExtraParam]
  = CapDL.AST.$fDataFrameExtraParam
instance [safe] Data.Data.Data [CapDL.AST.IOAPICIRQExtraParam]
  = CapDL.AST.$fDataIOAPICIRQExtraParam
instance [safe] Data.Data.Data [CapDL.AST.MSIIRQExtraParam]
  = CapDL.AST.$fDataMSIIRQExtraParam
instance [safe] Data.Data.Data [CapDL.AST.ObjParam]
  = CapDL.AST.$fDataObjParam
instance [safe] Data.Data.Data [CapDL.AST.Range]
  = CapDL.AST.$fDataRange
instance [safe] Data.Data.Data [CapDL.AST.SCExtraParam]
  = CapDL.AST.$fDataSCExtraParam
instance [safe] Data.Data.Data [CapDL.AST.TCBExtraParam]
  = CapDL.AST.$fDataTCBExtraParam
instance [safe] GHC.Classes.Eq [CapDL.AST.CapParam]
  = CapDL.AST.$fEqCapParam
instance [safe] GHC.Classes.Eq [CapDL.AST.FrameExtraParam]
  = CapDL.AST.$fEqFrameExtraParam
instance [safe] GHC.Classes.Eq [CapDL.AST.IOAPICIRQExtraParam]
  = CapDL.AST.$fEqIOAPICIRQExtraParam
instance [safe] GHC.Classes.Eq [CapDL.AST.KO] = CapDL.AST.$fEqKO
instance [safe] GHC.Classes.Eq [CapDL.AST.KODecl]
  = CapDL.AST.$fEqKODecl
instance [safe] GHC.Classes.Eq [CapDL.AST.MSIIRQExtraParam]
  = CapDL.AST.$fEqMSIIRQExtraParam
instance [safe] GHC.Classes.Eq [CapDL.AST.ObjParam]
  = CapDL.AST.$fEqObjParam
instance [safe] GHC.Classes.Eq [CapDL.AST.Range]
  = CapDL.AST.$fEqRange
instance [safe] GHC.Classes.Eq [CapDL.AST.SCExtraParam]
  = CapDL.AST.$fEqSCExtraParam
instance [safe] GHC.Classes.Eq [CapDL.AST.TCBExtraParam]
  = CapDL.AST.$fEqTCBExtraParam
instance [safe] GHC.Classes.Ord [CapDL.AST.CapParam]
  = CapDL.AST.$fOrdCapParam
instance [safe] GHC.Classes.Ord [CapDL.AST.FrameExtraParam]
  = CapDL.AST.$fOrdFrameExtraParam
instance [safe] GHC.Classes.Ord [CapDL.AST.IOAPICIRQExtraParam]
  = CapDL.AST.$fOrdIOAPICIRQExtraParam
instance [safe] GHC.Classes.Ord [CapDL.AST.MSIIRQExtraParam]
  = CapDL.AST.$fOrdMSIIRQExtraParam
instance [safe] GHC.Classes.Ord [CapDL.AST.ObjParam]
  = CapDL.AST.$fOrdObjParam
instance [safe] GHC.Classes.Ord [CapDL.AST.Range]
  = CapDL.AST.$fOrdRange
instance [safe] GHC.Classes.Ord [CapDL.AST.SCExtraParam]
  = CapDL.AST.$fOrdSCExtraParam
instance [safe] GHC.Classes.Ord [CapDL.AST.TCBExtraParam]
  = CapDL.AST.$fOrdTCBExtraParam
instance [safe] GHC.Show.Show [CapDL.AST.CapMapping]
  = CapDL.AST.$fShowCapMapping
instance [safe] GHC.Show.Show [CapDL.AST.CapParam]
  = CapDL.AST.$fShowCapParam
instance [safe] GHC.Show.Show [CapDL.AST.Decl]
  = CapDL.AST.$fShowDecl
instance [safe] GHC.Show.Show [CapDL.AST.FrameExtraParam]
  = CapDL.AST.$fShowFrameExtraParam
instance [safe] GHC.Show.Show [CapDL.AST.IOAPICIRQExtraParam]
  = CapDL.AST.$fShowIOAPICIRQExtraParam
instance [safe] GHC.Show.Show [CapDL.AST.KO] = CapDL.AST.$fShowKO
instance [safe] GHC.Show.Show [CapDL.AST.KODecl]
  = CapDL.AST.$fShowKODecl
instance [safe] GHC.Show.Show [CapDL.AST.MSIIRQExtraParam]
  = CapDL.AST.$fShowMSIIRQExtraParam
instance [safe] GHC.Show.Show [CapDL.AST.Module]
  = CapDL.AST.$fShowModule
instance [safe] GHC.Show.Show [CapDL.AST.ObjParam]
  = CapDL.AST.$fShowObjParam
instance [safe] GHC.Show.Show [CapDL.AST.Range]
  = CapDL.AST.$fShowRange
instance [safe] GHC.Show.Show [CapDL.AST.SCExtraParam]
  = CapDL.AST.$fShowSCExtraParam
instance [safe] GHC.Show.Show [CapDL.AST.TCBExtraParam]
  = CapDL.AST.$fShowTCBExtraParam
"SPEC/CapDL.AST $fData(,) @ Word @ Word" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                       GHC.Types.Word)
                                                         ($dData :: Data.Data.Data GHC.Types.Word)
  Data.Data.$fData(,) @ GHC.Types.Word
                      @ GHC.Types.Word
                      $dData
                      $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)
"SPEC/CapDL.AST $fData(,) @ [Char] @ [Range]" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                            [CapDL.AST.Range])
                                                              ($dData :: Data.Data.Data
                                                                           [GHC.Types.Char])
  Data.Data.$fData(,) @ [GHC.Types.Char]
                      @ [CapDL.AST.Range]
                      $dData
                      $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)1
"SPEC/CapDL.AST $fData(,)_$cdataCast1 @ Word @ Word" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                   GHC.Types.Word)
                                                                     ($dData :: Data.Data.Data
                                                                                  GHC.Types.Word)
  Data.Data.$fData(,)_$cdataCast1 @ GHC.Types.Word
                                  @ GHC.Types.Word
                                  $dData
                                  $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cdataCast1
"SPEC/CapDL.AST $fData(,)_$cdataTypeOf @ Word @ Word" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                    GHC.Types.Word)
                                                                      ($dData :: Data.Data.Data
                                                                                   GHC.Types.Word)
  Data.Data.$fData(,)_$cdataTypeOf @ GHC.Types.Word
                                   @ GHC.Types.Word
                                   $dData
                                   $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cdataTypeOf
"SPEC/CapDL.AST $fData(,)_$cgfoldl @ Word @ Word" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                GHC.Types.Word)
                                                                  ($dData :: Data.Data.Data
                                                                               GHC.Types.Word)
  Data.Data.$fData(,)_$cgfoldl @ GHC.Types.Word
                               @ GHC.Types.Word
                               $dData
                               $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cgfoldl
"SPEC/CapDL.AST $fData(,)_$cgfoldl @ [Char] @ [Range]" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                     [CapDL.AST.Range])
                                                                       ($dData :: Data.Data.Data
                                                                                    [GHC.Types.Char])
  Data.Data.$fData(,)_$cgfoldl @ [GHC.Types.Char]
                               @ [CapDL.AST.Range]
                               $dData
                               $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cgfoldl1
"SPEC/CapDL.AST $fData(,)_$cgmapQ @ Word @ Word" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                               GHC.Types.Word)
                                                                 ($dData :: Data.Data.Data
                                                                              GHC.Types.Word)
  Data.Data.$fData(,)_$cgmapQ @ GHC.Types.Word
                              @ GHC.Types.Word
                              $dData
                              $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQ
"SPEC/CapDL.AST $fData(,)_$cgmapQ @ [Char] @ [Range]" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                    [CapDL.AST.Range])
                                                                      ($dData :: Data.Data.Data
                                                                                   [GHC.Types.Char])
  Data.Data.$fData(,)_$cgmapQ @ [GHC.Types.Char]
                              @ [CapDL.AST.Range]
                              $dData
                              $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQ1
"SPEC/CapDL.AST $fData(,)_$cgmapQi @ Word @ Word" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                GHC.Types.Word)
                                                                  ($dData :: Data.Data.Data
                                                                               GHC.Types.Word)
  Data.Data.$fData(,)_$cgmapQi @ GHC.Types.Word
                               @ GHC.Types.Word
                               $dData
                               $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQi
"SPEC/CapDL.AST $fData(,)_$cgmapQi @ [Char] @ [Range]" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                     [CapDL.AST.Range])
                                                                       ($dData :: Data.Data.Data
                                                                                    [GHC.Types.Char])
  Data.Data.$fData(,)_$cgmapQi @ [GHC.Types.Char]
                               @ [CapDL.AST.Range]
                               $dData
                               $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQi1
"SPEC/CapDL.AST $fData(,)_$cgmapQl @ Word @ Word" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                GHC.Types.Word)
                                                                  ($dData :: Data.Data.Data
                                                                               GHC.Types.Word)
  Data.Data.$fData(,)_$cgmapQl @ GHC.Types.Word
                               @ GHC.Types.Word
                               $dData
                               $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQl
"SPEC/CapDL.AST $fData(,)_$cgmapQl @ [Char] @ [Range]" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                     [CapDL.AST.Range])
                                                                       ($dData :: Data.Data.Data
                                                                                    [GHC.Types.Char])
  Data.Data.$fData(,)_$cgmapQl @ [GHC.Types.Char]
                               @ [CapDL.AST.Range]
                               $dData
                               $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQl1
"SPEC/CapDL.AST $fData(,)_$cgmapQr @ Word @ Word" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                GHC.Types.Word)
                                                                  ($dData :: Data.Data.Data
                                                                               GHC.Types.Word)
  Data.Data.$fData(,)_$cgmapQr @ GHC.Types.Word
                               @ GHC.Types.Word
                               $dData
                               $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQr
"SPEC/CapDL.AST $fData(,)_$cgmapQr @ [Char] @ [Range]" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                     [CapDL.AST.Range])
                                                                       ($dData :: Data.Data.Data
                                                                                    [GHC.Types.Char])
  Data.Data.$fData(,)_$cgmapQr @ [GHC.Types.Char]
                               @ [CapDL.AST.Range]
                               $dData
                               $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapQr1
"SPEC/CapDL.AST $fData(,)_$cgmapT @ Word @ Word" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                               GHC.Types.Word)
                                                                 ($dData :: Data.Data.Data
                                                                              GHC.Types.Word)
  Data.Data.$fData(,)_$cgmapT @ GHC.Types.Word
                              @ GHC.Types.Word
                              $dData
                              $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapT
"SPEC/CapDL.AST $fData(,)_$cgmapT @ [Char] @ [Range]" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                    [CapDL.AST.Range])
                                                                      ($dData :: Data.Data.Data
                                                                                   [GHC.Types.Char])
  Data.Data.$fData(,)_$cgmapT @ [GHC.Types.Char]
                              @ [CapDL.AST.Range]
                              $dData
                              $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$cgmapT1
"SPEC/CapDL.AST $fData(,)_$ctoConstr @ Word @ Word" [ALWAYS] forall ($dData1 :: Data.Data.Data
                                                                                  GHC.Types.Word)
                                                                    ($dData :: Data.Data.Data
                                                                                 GHC.Types.Word)
  Data.Data.$fData(,)_$ctoConstr @ GHC.Types.Word
                                 @ GHC.Types.Word
                                 $dData
                                 $dData1
  = CapDL.AST.$fDataCapParam_$s$fData(,)_$ctoConstr
"SPEC/CapDL.AST $fData(,,) @ Word @ Word @ Word" [ALWAYS] forall ($dData2 :: Data.Data.Data
                                                                               GHC.Types.Word)
                                                                 ($dData1 :: Data.Data.Data
                                                                               GHC.Types.Word)
                                                                 ($dData :: Data.Data.Data
                                                                              GHC.Types.Word)
  Data.Data.$fData(,,) @ GHC.Types.Word
                       @ GHC.Types.Word
                       @ GHC.Types.Word
                       $dData
                       $dData1
                       $dData2
  = CapDL.AST.$s$fData(,,)
"SPEC/CapDL.AST $fData(,,)_$cdataCast1 @ Word @ Word @ Word" [ALWAYS] forall ($dData2 :: Data.Data.Data
                                                                                           GHC.Types.Word)
                                                                             ($dData1 :: Data.Data.Data
                                                                                           GHC.Types.Word)
                                                                             ($dData :: Data.Data.Data
                                                                                          GHC.Types.Word)
  Data.Data.$fData(,,)_$cdataCast1 @ GHC.Types.Word
                                   @ GHC.Types.Word
                                   @ GHC.Types.Word
                                   $dData
                                   $dData1
                                   $dData2
  = CapDL.AST.$s$fData(,,)_$s$fData(,,)_$cdataCast1
"SPEC/CapDL.AST $fData(,,)_$cdataCast2 @ Word @ Word @ Word" [ALWAYS] forall ($dData2 :: Data.Data.Data
                                                                                           GHC.Types.Word)
                                                                             ($dData1 :: Data.Data.Data
                                                                                           GHC.Types.Word)
                                                                             ($dData :: Data.Data.Data
                                                                                          GHC.Types.Word)
  Data.Data.$fData(,,)_$cdataCast2 @ GHC.Types.Word
                                   @ GHC.Types.Word
                                   @ GHC.Types.Word
                                   $dData
                                   $dData1
                                   $dData2
  = CapDL.AST.$s$fData(,,)_$s$fData(,,)_$cdataCast2
"SPEC/CapDL.AST $fData(,,)_$cdataTypeOf @ Word @ Word @ Word" [ALWAYS] forall ($dData2 :: Data.Data.Data
                                                                                            GHC.Types.Word)
                                                                              ($dData1 :: Data.Data.Data
                                                                                            GHC.Types.Word)
                                                                              ($dData :: Data.Data.Data
                                                                                           GHC.Types.Word)
  Data.Data.$fData(,,)_$cdataTypeOf @ GHC.Types.Word
                                    @ GHC.Types.Word
                                    @ GHC.Types.Word
                                    $dData
                                    $dData1
                                    $dData2
  = CapDL.AST.$s$fData(,,)_$s$fData(,,)_$cdataTypeOf
"SPEC/CapDL.AST $fData(,,)_$cgmapT @ Word @ Word @ Word" [ALWAYS] forall ($dData2 :: Data.Data.Data
                                                                                       GHC.Types.Word)
                                                                         ($dData1 :: Data.Data.Data
                                                                                       GHC.Types.Word)
                                                                         ($dData :: Data.Data.Data
                                                                                      GHC.Types.Word)
  Data.Data.$fData(,,)_$cgmapT @ GHC.Types.Word
                               @ GHC.Types.Word
                               @ GHC.Types.Word
                               $dData
                               $dData1
                               $dData2
  = CapDL.AST.$s$fData(,,)_$s$fData(,,)_$cgmapT
"SPEC/CapDL.AST $fData(,,)_$ctoConstr @ Word @ Word @ Word" [ALWAYS] forall ($dData2 :: Data.Data.Data
                                                                                          GHC.Types.Word)
                                                                            ($dData1 :: Data.Data.Data
                                                                                          GHC.Types.Word)
                                                                            ($dData :: Data.Data.Data
                                                                                         GHC.Types.Word)
  Data.Data.$fData(,,)_$ctoConstr @ GHC.Types.Word
                                  @ GHC.Types.Word
                                  @ GHC.Types.Word
                                  $dData
                                  $dData1
                                  $dData2
  = CapDL.AST.$s$fData(,,)_$s$fData(,,)_$ctoConstr
"SPEC/CapDL.AST $fDataSet @ Rights" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                CapDL.Model.Rights)
                                                    ($dData :: Data.Data.Data CapDL.Model.Rights)
  Data.Set.Base.$fDataSet @ CapDL.Model.Rights $dData $dOrd
  = CapDL.AST.$fDataCapParam_$s$fDataSet
"SPEC/CapDL.AST $fDataSet_$cdataCast2 @ Rights" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                            CapDL.Model.Rights)
                                                                ($dData :: Data.Data.Data
                                                                             CapDL.Model.Rights)
  Data.Set.Base.$fDataSet_$cdataCast2 @ CapDL.Model.Rights
                                      $dData
                                      $dOrd
  = CapDL.AST.$fDataCapParam_$s$fDataSet_$cdataCast2
"SPEC/CapDL.AST $fDataSet_$cdataTypeOf @ Rights" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                             CapDL.Model.Rights)
                                                                 ($dData :: Data.Data.Data
                                                                              CapDL.Model.Rights)
  Data.Set.Base.$fDataSet_$cdataTypeOf @ CapDL.Model.Rights
                                       $dData
                                       $dOrd
  = CapDL.AST.$fDataCapParam_$s$fDataSet_$cdataTypeOf
"SPEC/CapDL.AST $fDataSet_$cgmapQ @ Rights" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                        CapDL.Model.Rights)
                                                            ($dData :: Data.Data.Data
                                                                         CapDL.Model.Rights)
  Data.Set.Base.$fDataSet_$cgmapQ @ CapDL.Model.Rights $dData $dOrd
  = CapDL.AST.$fDataCapParam_$s$fDataSet_$cgmapQ
"SPEC/CapDL.AST $fDataSet_$cgmapQi @ Rights" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                         CapDL.Model.Rights)
                                                             ($dData :: Data.Data.Data
                                                                          CapDL.Model.Rights)
  Data.Set.Base.$fDataSet_$cgmapQi @ CapDL.Model.Rights $dData $dOrd
  = CapDL.AST.$fDataCapParam_$s$fDataSet_$cgmapQi
"SPEC/CapDL.AST $fDataSet_$cgmapQl @ Rights" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                         CapDL.Model.Rights)
                                                             ($dData :: Data.Data.Data
                                                                          CapDL.Model.Rights)
  Data.Set.Base.$fDataSet_$cgmapQl @ CapDL.Model.Rights $dData $dOrd
  = CapDL.AST.$fDataCapParam_$s$fDataSet_$cgmapQl
"SPEC/CapDL.AST $fDataSet_$cgmapQr @ Rights" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                         CapDL.Model.Rights)
                                                             ($dData :: Data.Data.Data
                                                                          CapDL.Model.Rights)
  Data.Set.Base.$fDataSet_$cgmapQr @ CapDL.Model.Rights $dData $dOrd
  = CapDL.AST.$fDataCapParam_$s$fDataSet_$cgmapQr
"SPEC/CapDL.AST $fDataSet_$cp1Data @ Rights" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                         CapDL.Model.Rights)
                                                             ($dData :: Data.Data.Data
                                                                          CapDL.Model.Rights)
  Data.Set.Base.$fDataSet_$cp1Data @ CapDL.Model.Rights $dData $dOrd
  = CapDL.AST.$fDataCapParam_$s$fDataSet_$cp1Data
"SPEC/CapDL.AST $fDataSet_$ctoConstr @ Rights" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                           CapDL.Model.Rights)
                                                               ($dData :: Data.Data.Data
                                                                            CapDL.Model.Rights)
  Data.Set.Base.$fDataSet_$ctoConstr @ CapDL.Model.Rights
                                     $dData
                                     $dOrd
  = CapDL.AST.$fDataCapParam_$s$fDataSet_$ctoConstr
"SPEC/CapDL.AST $fData[] @ Range" [ALWAYS] forall ($dData :: Data.Data.Data
                                                               CapDL.AST.Range)
  Data.Data.$fData[] @ CapDL.AST.Range $dData
  = CapDL.AST.$fDataCapParam_$s$fData[]1
"SPEC/CapDL.AST $fData[] @ Rights" [ALWAYS] forall ($dData :: Data.Data.Data
                                                                CapDL.Model.Rights)
  Data.Data.$fData[] @ CapDL.Model.Rights $dData
  = CapDL.AST.$fDataCapParam_$s$fData[]
"SPEC/CapDL.AST $fData[] @ Word" [ALWAYS] forall ($dData :: Data.Data.Data
                                                              GHC.Types.Word)
  Data.Data.$fData[] @ GHC.Types.Word $dData = CapDL.AST.$s$fData[]
"SPEC/CapDL.AST $fData[] @ [Char]" [ALWAYS] forall ($dData :: Data.Data.Data
                                                                [GHC.Types.Char])
  Data.Data.$fData[] @ [GHC.Types.Char] $dData
  = CapDL.AST.$fDataFrameExtraParam_$s$fData[]
"SPEC/CapDL.AST $fData[]_$cdataCast2 @ Rights" [ALWAYS] forall ($dData :: Data.Data.Data
                                                                            CapDL.Model.Rights)
  Data.Data.$fData[]_$cdataCast2 @ CapDL.Model.Rights $dData
  = CapDL.AST.$fDataCapParam_$s$fData[]_$cdataCast2
"SPEC/CapDL.AST $fData[]_$cdataCast2 @ Word" [ALWAYS] forall ($dData :: Data.Data.Data
                                                                          GHC.Types.Word)
  Data.Data.$fData[]_$cdataCast2 @ GHC.Types.Word $dData
  = CapDL.AST.$s$fData[]_$s$fData[]_$cdataCast2
"SPEC/CapDL.AST $fData[]_$cdataCast2 @ [Char]" [ALWAYS] forall ($dData :: Data.Data.Data
                                                                            [GHC.Types.Char])
  Data.Data.$fData[]_$cdataCast2 @ [GHC.Types.Char] $dData
  = CapDL.AST.$fDataFrameExtraParam_$s$fData[]_$cdataCast2
"SPEC/CapDL.AST $fData[]_$cdataTypeOf @ Rights" [ALWAYS] forall ($dData :: Data.Data.Data
                                                                             CapDL.Model.Rights)
  Data.Data.$fData[]_$cdataTypeOf @ CapDL.Model.Rights $dData
  = CapDL.AST.$fDataCapParam_$s$fData[]_$cdataTypeOf
"SPEC/CapDL.AST $fData[]_$cdataTypeOf @ Word" [ALWAYS] forall ($dData :: Data.Data.Data
                                                                           GHC.Types.Word)
  Data.Data.$fData[]_$cdataTypeOf @ GHC.Types.Word $dData
  = CapDL.AST.$s$fData[]_$s$fData[]_$cdataTypeOf
"SPEC/CapDL.AST $fData[]_$cdataTypeOf @ [Char]" [ALWAYS] forall ($dData :: Data.Data.Data
                                                                             [GHC.Types.Char])
  Data.Data.$fData[]_$cdataTypeOf @ [GHC.Types.Char] $dData
  = CapDL.AST.$fDataFrameExtraParam_$s$fData[]_$cdataTypeOf
"SPEC/CapDL.AST $fData[]_$ctoConstr @ Rights" [ALWAYS] forall ($dData :: Data.Data.Data
                                                                           CapDL.Model.Rights)
  Data.Data.$fData[]_$ctoConstr @ CapDL.Model.Rights $dData
  = CapDL.AST.$fDataCapParam_$s$fData[]_$ctoConstr
"SPEC/CapDL.AST $fData[]_$ctoConstr @ Word" [ALWAYS] forall ($dData :: Data.Data.Data
                                                                         GHC.Types.Word)
  Data.Data.$fData[]_$ctoConstr @ GHC.Types.Word $dData
  = CapDL.AST.$s$fData[]_$s$fData[]_$ctoConstr
"SPEC/CapDL.AST $fData[]_$ctoConstr @ [Char]" [ALWAYS] forall ($dData :: Data.Data.Data
                                                                           [GHC.Types.Char])
  Data.Data.$fData[]_$ctoConstr @ [GHC.Types.Char] $dData
  = CapDL.AST.$fDataFrameExtraParam_$s$fData[]_$ctoConstr
"SPEC/CapDL.AST $fEq(,) @ [Char] @ [Range]" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                        [CapDL.AST.Range])
                                                            ($dEq :: GHC.Classes.Eq
                                                                       [GHC.Types.Char])
  GHC.Classes.$fEq(,) @ [GHC.Types.Char]
                      @ [CapDL.AST.Range]
                      $dEq
                      $dEq1
  = CapDL.AST.$fEqKO_$s$fEq(,)
"SPEC/CapDL.AST $fEqEither @ KODecl @ (Name, [Range])" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                                   CapDL.AST.KODecl)
                                                                       ($dEq :: GHC.Classes.Eq
                                                                                  (CapDL.AST.Name,
                                                                                   [CapDL.AST.Range]))
  Data.Either.$fEqEither @ CapDL.AST.KODecl
                         @ (CapDL.AST.Name, [CapDL.AST.Range])
                         $dEq
                         $dEq1
  = CapDL.AST.$fEqKO_$s$fEqEither
"SPEC/CapDL.AST $fEq[] @ Range" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                           CapDL.AST.Range)
  GHC.Classes.$fEq[] @ CapDL.AST.Range $dEq
  = CapDL.AST.$fEqKO_$s$fEq[]
"SPEC/CapDL.AST $fEq[]_$c/= @ Range" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                CapDL.AST.Range)
  GHC.Classes.$fEq[]_$c/= @ CapDL.AST.Range $dEq
  = CapDL.AST.$fEqKO_$s$fEq[]_$c/=
"SPEC/CapDL.AST $fOrd[]_$cp1Ord @ Range" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                     CapDL.AST.Range)
  GHC.Classes.$fOrd[]_$cp1Ord @ CapDL.AST.Range $dOrd
  = CapDL.AST.$fEqKO_$s$fOrd[]_$cp1Ord
"SPEC/CapDL.AST $fShow(,) @ (Name, [Range]) @ Word" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                  GHC.Types.Word)
                                                                    ($dShow :: GHC.Show.Show
                                                                                 (CapDL.AST.Name,
                                                                                  [CapDL.AST.Range]))
  GHC.Show.$fShow(,) @ (CapDL.AST.Name, [CapDL.AST.Range])
                     @ GHC.Types.Word
                     $dShow
                     $dShow1
  = CapDL.AST.$s$fShow(,)2
"SPEC/CapDL.AST $fShow(,) @ [Char] @ [Range]" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                            [CapDL.AST.Range])
                                                              ($dShow :: GHC.Show.Show
                                                                           [GHC.Types.Char])
  GHC.Show.$fShow(,) @ [GHC.Types.Char]
                     @ [CapDL.AST.Range]
                     $dShow
                     $dShow1
  = CapDL.AST.$s$fShow(,)
"SPEC/CapDL.AST $fShow(,)_$cshow @ (Name, [Range]) @ Word" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                         GHC.Types.Word)
                                                                           ($dShow :: GHC.Show.Show
                                                                                        (CapDL.AST.Name,
                                                                                         [CapDL.AST.Range]))
  GHC.Show.$fShow(,)_$cshow @ (CapDL.AST.Name, [CapDL.AST.Range])
                            @ GHC.Types.Word
                            $dShow
                            $dShow1
  = CapDL.AST.$s$fShow(,)_$s$fShow(,)_$cshow1
"SPEC/CapDL.AST $fShow(,)_$cshow @ [Char] @ [Range]" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                   [CapDL.AST.Range])
                                                                     ($dShow :: GHC.Show.Show
                                                                                  [GHC.Types.Char])
  GHC.Show.$fShow(,)_$cshow @ [GHC.Types.Char]
                            @ [CapDL.AST.Range]
                            $dShow
                            $dShow1
  = CapDL.AST.$s$fShow(,)_$s$fShow(,)_$cshow
"SPEC/CapDL.AST $fShow(,)_$cshowList @ (Name, [Range]) @ Word" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                             GHC.Types.Word)
                                                                               ($dShow :: GHC.Show.Show
                                                                                            (CapDL.AST.Name,
                                                                                             [CapDL.AST.Range]))
  GHC.Show.$fShow(,)_$cshowList @ (CapDL.AST.Name, [CapDL.AST.Range])
                                @ GHC.Types.Word
                                $dShow
                                $dShow1
  = CapDL.AST.$s$fShow(,)_$s$fShow(,)_$cshowList1
"SPEC/CapDL.AST $fShow(,)_$cshowList @ [Char] @ [Range]" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                       [CapDL.AST.Range])
                                                                         ($dShow :: GHC.Show.Show
                                                                                      [GHC.Types.Char])
  GHC.Show.$fShow(,)_$cshowList @ [GHC.Types.Char]
                                @ [CapDL.AST.Range]
                                $dShow
                                $dShow1
  = CapDL.AST.$s$fShow(,)_$s$fShow(,)_$cshowList
"SPEC/CapDL.AST $fShowEither @ (NameRef, Word) @ (Name, [Range])" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                (CapDL.AST.NameRef,
                                                                                                 GHC.Types.Word))
                                                                                  ($dShow :: GHC.Show.Show
                                                                                               (CapDL.AST.Name,
                                                                                                [CapDL.AST.Range]))
  Data.Either.$fShowEither @ (CapDL.AST.NameRef, GHC.Types.Word)
                           @ (CapDL.AST.Name, [CapDL.AST.Range])
                           $dShow
                           $dShow1
  = CapDL.AST.$s$fShowEither
"SPEC/CapDL.AST $fShowEither_$cshowList @ (NameRef, Word) @ (Name,
                                                            [Range])" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                                                                       (CapDL.AST.NameRef,
                                                                                                                                                                        GHC.Types.Word))
                                                                                                                                                         ($dShow :: GHC.Show.Show
                                                                                                                                                                      (CapDL.AST.Name,
                                                                                                                                                                       [CapDL.AST.Range]))
  Data.Either.$fShowEither_$cshowList @ (CapDL.AST.NameRef,
                                         GHC.Types.Word)
                                      @ (CapDL.AST.Name, [CapDL.AST.Range])
                                      $dShow
                                      $dShow1
  = CapDL.AST.$s$fShowEither_$s$fShowEither_$cshowList
"SPEC/CapDL.AST $fShow[] @ Range" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                               CapDL.AST.Range)
  GHC.Show.$fShow[] @ CapDL.AST.Range $dShow
  = CapDL.AST.$s$fShow(,)_$s$fShow[]
"SPEC/CapDL.AST $fShow[]_$cshow @ Range" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                      CapDL.AST.Range)
  GHC.Show.$fShow[]_$cshow @ CapDL.AST.Range $dShow
  = CapDL.AST.$s$fShow(,)_$s$fShow[]_$cshow
"SPEC/CapDL.AST $fShow[]_$cshowList @ Range" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                          CapDL.AST.Range)
  GHC.Show.$fShow[]_$cshowList @ CapDL.AST.Range $dShow
  = CapDL.AST.$s$fShow(,)_$s$fShow[]_$cshowList
"SPEC/CapDL.AST $fShow[]_$cshowsPrec @ Range" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                           CapDL.AST.Range)
  GHC.Show.$fShow[]_$cshowsPrec @ CapDL.AST.Range $dShow
  = CapDL.AST.$s$fShow(,)_$s$fShow[]_$cshowsPrec
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

