
==================== FINAL INTERFACE ====================
2018-12-23 21:11:42.359551 UTC

interface main@main:CapDL.Matrix 8002
  interface hash: 3a3808c6bc8ec704842c9b0d539829fe
  ABI hash: 5cdfea62b2cf52ae338365cf9d61b83f
  export-list hash: edf795d8f971483f6d6ae642cf0f6617
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b5b739b13a924c0eac44265cbdc9e77d
  sig of: Nothing
  used TH splices: False
  where
exports:
  CapDL.Matrix.connect
  CapDL.Matrix.disconnect
  CapDL.Matrix.getSize
  CapDL.Matrix.isConnected
  CapDL.Matrix.newEmptyMatrix
  CapDL.Matrix.printDotMatrix
  CapDL.Matrix.printMatrix
  CapDL.Matrix.showDotMatrix
  CapDL.Matrix.Matrix
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.Base a1a813de21dd195f39f7a053a2142a3f
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.IO f8199cab63c935f592e25034b9fdef7e
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.IO.Internals 434feb32f016ca06832774e20e1e65ef
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Char 01433d23661edb6e5ef1536ef1e6774c
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:GHC.Unicode a175ecf20bf1272d9ae31337e7da43ab
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22:Prelude.Compat 26d0dbb9ddc9475bb1179736f86de98b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 20d4ffbee41965d03d6a989425473dc4
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d432f6875983131473086af8cb290590
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
c4351581cec888ca54154ea72a716bc3
  $tc'Matrix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15611507212335739862##
                   15230852910795070176##
                   CapDL.Matrix.$trModule
                   CapDL.Matrix.$tc'Matrix1) -}
fa6ccc376e82cef09160b03a2d941ec4
  $tc'Matrix1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Matrix"#) -}
30691c38eaa315770a01fd137cf5a59f
  $tcMatrix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17246717463331871111##
                   10330522151474655682##
                   CapDL.Matrix.$trModule
                   CapDL.Matrix.$tcMatrix1) -}
075ae2b8c485c5118fcbe1bce299fda8
  $tcMatrix1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Matrix"#) -}
191a44f82b46e7180d0780ecf0a1b9f1
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   CapDL.Matrix.$trModule2
                   CapDL.Matrix.$trModule1) -}
d97a3560b58910b5145d04617c1d39ec
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "CapDL.Matrix"#) -}
3bfa855aae9d860c74e404294052391f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
b6283eed7b1cf9987111c4e1d3d3ca3d
  $wconnect ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><S,U><S,U><S,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.MutableByteArray# GHC.Prim.RealWorld)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: GHC.Prim.Int#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww ww6) of wild {
                   GHC.Types.False
                   -> case GHC.Arr.hopelessIndexError
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww6 ww2) of wild1 {
                        GHC.Types.False
                        -> case GHC.Arr.hopelessIndexError
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {}
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# ww1 ww7) of wild2 {
                             GHC.Types.False
                             -> case GHC.Arr.hopelessIndexError
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                of {}
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<=# ww7 ww3) of wild7 {
                                  GHC.Types.False
                                  -> case GHC.Arr.hopelessIndexError
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                     of {}
                                  GHC.Types.True
                                  -> let {
                                       y :: GHC.Prim.Int#
                                       = GHC.Prim.+#
                                           (GHC.Prim.*#
                                              (GHC.Prim.-# ww6 ww)
                                              (GHC.Prim.+# (GHC.Prim.-# ww3 ww1) 1#))
                                           (GHC.Prim.-# ww7 ww1)
                                     } in
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<=# 0# y) of wild3 {
                                       GHC.Types.False
                                       -> case CapDL.Matrix.connect2 ww4 y
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          of {}
                                       GHC.Types.True
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.<# y ww4) of wild4 {
                                            GHC.Types.False
                                            -> case CapDL.Matrix.connect2 ww4 y
                                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                               of {}
                                            GHC.Types.True
                                            -> let {
                                                 j# :: GHC.Prim.Int#
                                                 = GHC.Prim.uncheckedIShiftRA# y 6#
                                               } in
                                               case GHC.Prim.readWordArray#
                                                      @ GHC.Prim.RealWorld
                                                      ww5
                                                      j#
                                                      w of ds4 { (#,#) ipv ipv1 ->
                                               case GHC.Prim.writeWordArray#
                                                      @ GHC.Prim.RealWorld
                                                      ww5
                                                      j#
                                                      (GHC.Prim.or#
                                                         ipv1
                                                         (GHC.Prim.uncheckedShiftL#
                                                            1##
                                                            (GHC.Prim.word2Int#
                                                               (GHC.Prim.and#
                                                                  (GHC.Prim.int2Word# y)
                                                                  63##))))
                                                      ipv of s3# { DEFAULT ->
                                               (# s3#, GHC.Tuple.() #) } } } } } } } }) -}
e7a55365c379d443dd4ca62e5aa3c516
  $wdisconnect ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><S,U><S,U><S,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.MutableByteArray# GHC.Prim.RealWorld)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: GHC.Prim.Int#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww ww6) of wild {
                   GHC.Types.False
                   -> case GHC.Arr.hopelessIndexError
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww6 ww2) of wild1 {
                        GHC.Types.False
                        -> case GHC.Arr.hopelessIndexError
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {}
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# ww1 ww7) of wild2 {
                             GHC.Types.False
                             -> case GHC.Arr.hopelessIndexError
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                of {}
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<=# ww7 ww3) of wild7 {
                                  GHC.Types.False
                                  -> case GHC.Arr.hopelessIndexError
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                     of {}
                                  GHC.Types.True
                                  -> let {
                                       y :: GHC.Prim.Int#
                                       = GHC.Prim.+#
                                           (GHC.Prim.*#
                                              (GHC.Prim.-# ww6 ww)
                                              (GHC.Prim.+# (GHC.Prim.-# ww3 ww1) 1#))
                                           (GHC.Prim.-# ww7 ww1)
                                     } in
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<=# 0# y) of wild3 {
                                       GHC.Types.False
                                       -> case CapDL.Matrix.connect2 ww4 y
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          of {}
                                       GHC.Types.True
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.<# y ww4) of wild4 {
                                            GHC.Types.False
                                            -> case CapDL.Matrix.connect2 ww4 y
                                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                               of {}
                                            GHC.Types.True
                                            -> let {
                                                 j# :: GHC.Prim.Int#
                                                 = GHC.Prim.uncheckedIShiftRA# y 6#
                                               } in
                                               case GHC.Prim.readWordArray#
                                                      @ GHC.Prim.RealWorld
                                                      ww5
                                                      j#
                                                      w of ds4 { (#,#) ipv ipv1 ->
                                               case GHC.Prim.writeWordArray#
                                                      @ GHC.Prim.RealWorld
                                                      ww5
                                                      j#
                                                      (GHC.Prim.and#
                                                         ipv1
                                                         (GHC.Prim.xor#
                                                            (GHC.Prim.uncheckedShiftL#
                                                               1##
                                                               (GHC.Prim.word2Int#
                                                                  (GHC.Prim.and#
                                                                     (GHC.Prim.int2Word# y)
                                                                     63##)))
                                                            18446744073709551615##))
                                                      ipv of s3# { DEFAULT ->
                                               (# s3#, GHC.Tuple.() #) } } } } } } } }) -}
66ccb9211285579cbfbe99c4e9f5dca9
  $wisConnected ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><S,U><S,U><S,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.MutableByteArray# GHC.Prim.RealWorld)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: GHC.Prim.Int#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww ww6) of wild {
                   GHC.Types.False
                   -> case GHC.Arr.hopelessIndexError
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                      of {}
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww6 ww2) of wild1 {
                        GHC.Types.False
                        -> case GHC.Arr.hopelessIndexError
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                           of {}
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# ww1 ww7) of wild2 {
                             GHC.Types.False
                             -> case GHC.Arr.hopelessIndexError
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                                of {}
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<=# ww7 ww3) of wild7 {
                                  GHC.Types.False
                                  -> case GHC.Arr.hopelessIndexError
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                                     of {}
                                  GHC.Types.True
                                  -> let {
                                       y :: GHC.Prim.Int#
                                       = GHC.Prim.+#
                                           (GHC.Prim.*#
                                              (GHC.Prim.-# ww6 ww)
                                              (GHC.Prim.+# (GHC.Prim.-# ww3 ww1) 1#))
                                           (GHC.Prim.-# ww7 ww1)
                                     } in
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<=# 0# y) of wild3 {
                                       GHC.Types.False
                                       -> case CapDL.Matrix.connect2 ww4 y
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                    GHC.Types.Bool #)
                                          of {}
                                       GHC.Types.True
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.<# y ww4) of wild4 {
                                            GHC.Types.False
                                            -> case CapDL.Matrix.connect2 ww4 y
                                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         GHC.Types.Bool #)
                                               of {}
                                            GHC.Types.True
                                            -> case GHC.Prim.readWordArray#
                                                      @ GHC.Prim.RealWorld
                                                      ww5
                                                      (GHC.Prim.uncheckedIShiftRA# y 6#)
                                                      w of ds4 { (#,#) ipv ipv1 ->
                                               (# ipv,
                                                  case GHC.Prim.and#
                                                         ipv1
                                                         (GHC.Prim.uncheckedShiftL#
                                                            1##
                                                            (GHC.Prim.word2Int#
                                                               (GHC.Prim.and#
                                                                  (GHC.Prim.int2Word# y)
                                                                  63##))) of wild5 {
                                                    DEFAULT -> GHC.Types.True
                                                    0## -> GHC.Types.False } #) } } } } } } }) -}
b760a152745a888dd36153475f688b6e
  $wnewEmptyMatrix ::
    GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, CapDL.Matrix.Matrix #)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   ww12 :: GHC.Prim.Int# = GHC.Prim.-# ww 1#
                 } in
                 let {
                   $j :: GHC.Prim.Int#
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, CapDL.Matrix.Matrix #)
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x :: GHC.Prim.Int#)[OneShot] ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<# x 0#) of wild1 {
                       GHC.Types.False
                       -> case GHC.Prim.newByteArray#
                                 @ GHC.Prim.RealWorld
                                 (GHC.Prim.uncheckedIShiftRA# (GHC.Prim.+# x 63#) 3#)
                                 w of ds1 { (#,#) ipv ipv1 ->
                          let {
                            n'# :: GHC.Prim.Int#
                            = GHC.Prim.uncheckedIShiftRA# (GHC.Prim.+# x 63#) 6#
                          } in
                          letrec {
                            loop :: GHC.Prim.Int#
                                    -> GHC.Prim.State# GHC.Prim.RealWorld
                                    -> GHC.Prim.State# GHC.Prim.RealWorld
                              {- Arity: 2, Strictness: <S,U><S,U> -}
                            = \ (i# :: GHC.Prim.Int#)
                                (s3# :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.==# i# n'#) of wild4 {
                                GHC.Types.False
                                -> case GHC.Prim.writeWordArray#
                                          @ GHC.Prim.RealWorld
                                          ipv1
                                          i#
                                          0##
                                          s3# of s4# { DEFAULT ->
                                   loop (GHC.Prim.+# i# 1#) s4# }
                                GHC.Types.True -> s3# }
                          } in
                          case loop 0# ipv of s3# { DEFAULT ->
                          (# s3#,
                             (Data.Array.Base.STUArray
                                @ GHC.Prim.RealWorld
                                @ (GHC.Types.Int, GHC.Types.Int)
                                @ GHC.Types.Bool
                                CapDL.Matrix.newEmptyMatrix3
                                (GHC.Types.I# ww12, GHC.Types.I# ww12)
                                x
                                ipv1)
                               `cast`
                             (Trans
                                  (Sym (Data.Array.IO.Internals.N:IOUArray[0]) <(GHC.Types.Int,
                                                                                 GHC.Types.Int)>_N <GHC.Types.Bool>_N)
                                  (Sym (CapDL.Matrix.N:Matrix[0]))) #) } }
                       GHC.Types.True
                       -> case CapDL.Matrix.newEmptyMatrix2
                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    CapDL.Matrix.Matrix #)
                          of {} }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# 0# ww12) of wild {
                   GHC.Types.False -> $j 0#
                   GHC.Types.True
                   -> $j
                        (GHC.Prim.+#
                           (GHC.Prim.+# (GHC.Prim.*# ww12 (GHC.Prim.+# ww12 1#)) ww12)
                           1#) }) -}
39dd3f94e2c5716786099303a4afd429
  $wpoly_go10 ::
    a -> GHC.Prim.Int# -> Data.Map.Base.Map GHC.Types.Int a -> a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><L,U><S,1*U>,
     Inline: [0] -}
ea741290efd2f9c4c792593bf09b5f31
  $wprintMatrix ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7, Strictness: <S,U><L,U(U)><S,U><L,U(U)><L,U><L,U><S,U>,
     Inline: [0] -}
d7dee260ce6e9cc0be0a69e263bf0bb3
  $wshowDotMatrix ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> Data.Map.Base.Map
         GHC.Types.Int (GHC.Base.String, GHC.Base.Maybe GHC.Types.Word)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 8,
     Strictness: <S,U><L,U(U)><L,U(U)><S,U><L,U><L,U><L,U><S,U>,
     Inline: [0] -}
fab012ba937a5f2f9ded8be152c229b6
  newtype Matrix
    = Matrix (Data.Array.IO.Internals.IOUArray
                (GHC.Types.Int, GHC.Types.Int) GHC.Types.Bool)
9e5ddbea3951324311b4a83544c7620b
  connect ::
    CapDL.Matrix.Matrix
    -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(S(S(S)S(S))S(S(S)S(S))SS),1*U(U(1*U(U),1*U(U)),U(1*U(U),1*U(U)),U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                CapDL.Matrix.connect1
                  `cast`
                (<CapDL.Matrix.Matrix>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
cba597dd1a865dbce50c7d2cf01ee41d
  connect1 ::
    CapDL.Matrix.Matrix
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(S(S(S)S(S))S(S(S)S(S))SS),1*U(U(1*U(U),1*U(U)),U(1*U(U),1*U(U)),U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: CapDL.Matrix.Matrix)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Trans
                           (CapDL.Matrix.N:Matrix[0])
                           (Data.Array.IO.Internals.N:IOUArray[0] <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N <GHC.Types.Bool>_N)) of ww { Data.Array.Base.STUArray ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { (,) ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case ww7 of ww10 { GHC.Types.I# ww11 ->
                 case ww2 of ww12 { (,) ww13 ww14 ->
                 case ww13 of ww15 { GHC.Types.I# ww16 ->
                 case ww14 of ww17 { GHC.Types.I# ww18 ->
                 case w1 of ww19 { GHC.Types.I# ww20 ->
                 case w2 of ww21 { GHC.Types.I# ww22 ->
                 CapDL.Matrix.$wconnect
                   ww9
                   ww11
                   ww16
                   ww18
                   ww3
                   ww4
                   ww20
                   ww22
                   w3 } } } } } } } } }) -}
aaa6589323b43943a08ed39ae18ce94c
  connect2 :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>x -}
000f437790f7996974f13df39f671b88
  disconnect ::
    CapDL.Matrix.Matrix
    -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(S(S(S)S(S))S(S(S)S(S))SS),1*U(U(1*U(U),1*U(U)),U(1*U(U),1*U(U)),U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                CapDL.Matrix.disconnect1
                  `cast`
                (<CapDL.Matrix.Matrix>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
3a170d42c48c73eb6bba605e0308623e
  disconnect1 ::
    CapDL.Matrix.Matrix
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(S(S(S)S(S))S(S(S)S(S))SS),1*U(U(1*U(U),1*U(U)),U(1*U(U),1*U(U)),U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: CapDL.Matrix.Matrix)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Trans
                           (CapDL.Matrix.N:Matrix[0])
                           (Data.Array.IO.Internals.N:IOUArray[0] <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N <GHC.Types.Bool>_N)) of ww { Data.Array.Base.STUArray ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { (,) ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case ww7 of ww10 { GHC.Types.I# ww11 ->
                 case ww2 of ww12 { (,) ww13 ww14 ->
                 case ww13 of ww15 { GHC.Types.I# ww16 ->
                 case ww14 of ww17 { GHC.Types.I# ww18 ->
                 case w1 of ww19 { GHC.Types.I# ww20 ->
                 case w2 of ww21 { GHC.Types.I# ww22 ->
                 CapDL.Matrix.$wdisconnect
                   ww9
                   ww11
                   ww16
                   ww18
                   ww3
                   ww4
                   ww20
                   ww22
                   w3 } } } } } } } } }) -}
1909966fcd59b6aeeb65453a32504bde
  getSize ::
    Data.Array.Base.MArray
      Data.Array.IO.Internals.IOUArray GHC.Types.Bool m =>
    CapDL.Matrix.Matrix
    -> m ((GHC.Types.Int, GHC.Types.Int),
          (GHC.Types.Int, GHC.Types.Int))
  {- Arity: 2,
     Strictness: <S(LC(C(S))LLLLLL),1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ (m :: * -> *)
                   ($dMArray :: Data.Array.Base.MArray
                                  Data.Array.IO.Internals.IOUArray GHC.Types.Bool m)
                   (ds :: CapDL.Matrix.Matrix) ->
                 Data.Array.Base.getBounds
                   @ Data.Array.IO.Internals.IOUArray
                   @ GHC.Types.Bool
                   @ m
                   $dMArray
                   @ (GHC.Types.Int, GHC.Types.Int)
                   GHC.Arr.$fIx(,)_$s$fIx(,)
                   ds `cast` (CapDL.Matrix.N:Matrix[0])) -}
89dd8113e83b232238ae2c4bc051cf86
  isConnected ::
    CapDL.Matrix.Matrix
    -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4,
     Strictness: <S(S(S(S)S(S))S(S(S)S(S))SS),1*U(U(1*U(U),1*U(U)),U(1*U(U),1*U(U)),U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                CapDL.Matrix.isConnected1
                  `cast`
                (<CapDL.Matrix.Matrix>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
a4cef0528c1690458215b98317266841
  isConnected1 ::
    CapDL.Matrix.Matrix
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4,
     Strictness: <S(S(S(S)S(S))S(S(S)S(S))SS),1*U(U(1*U(U),1*U(U)),U(1*U(U),1*U(U)),U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: CapDL.Matrix.Matrix)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Trans
                           (CapDL.Matrix.N:Matrix[0])
                           (Data.Array.IO.Internals.N:IOUArray[0] <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N <GHC.Types.Bool>_N)) of ww { Data.Array.Base.STUArray ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { (,) ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case ww7 of ww10 { GHC.Types.I# ww11 ->
                 case ww2 of ww12 { (,) ww13 ww14 ->
                 case ww13 of ww15 { GHC.Types.I# ww16 ->
                 case ww14 of ww17 { GHC.Types.I# ww18 ->
                 case w1 of ww19 { GHC.Types.I# ww20 ->
                 case w2 of ww21 { GHC.Types.I# ww22 ->
                 CapDL.Matrix.$wisConnected
                   ww9
                   ww11
                   ww16
                   ww18
                   ww3
                   ww4
                   ww20
                   ww22
                   w3 } } } } } } } } }) -}
df8d5384dc9348ac28a2d75f8e6b13f3
  newEmptyMatrix :: GHC.Types.Int -> GHC.Types.IO CapDL.Matrix.Matrix
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                CapDL.Matrix.newEmptyMatrix1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <CapDL.Matrix.Matrix>_R)) -}
7a34e03773bbcf1b39ec920c7f38901f
  newEmptyMatrix1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, CapDL.Matrix.Matrix #)
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { GHC.Types.I# ww1 ->
                 CapDL.Matrix.$wnewEmptyMatrix ww1 w1 }) -}
d6775dc1981615975cf4ac55c2c171b8
  newEmptyMatrix2 :: GHC.Types.Int
  {- Strictness: x -}
4fa263417bf3135ae66e472af7ee02fa
  newEmptyMatrix3 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((CapDL.Matrix.newEmptyMatrix4,
                  CapDL.Matrix.newEmptyMatrix4)) -}
45f2b90c8c1887e6b11282f2c3439809
  newEmptyMatrix4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
cd0b1284df79246bd34243dbee2300ef
  printDotMatrix ::
    CapDL.Matrix.Matrix
    -> Data.Map.Base.Map
         GHC.Types.Int (GHC.Base.String, GHC.Base.Maybe GHC.Types.Word)
    -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <L,1*U(U(1*U(U),U(U)),U(U(U),1*U(U)),U,U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                CapDL.Matrix.printDotMatrix1
                  `cast`
                (<CapDL.Matrix.Matrix>_R
                 ->_R <Data.Map.Base.Map
                         GHC.Types.Int (GHC.Base.String, GHC.Base.Maybe GHC.Types.Word)>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
5fb91a4351e29ab989915c45fa73f89b
  printDotMatrix1 ::
    CapDL.Matrix.Matrix
    -> Data.Map.Base.Map
         GHC.Types.Int (GHC.Base.String, GHC.Base.Maybe GHC.Types.Word)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <L,1*U(U(1*U(U),U(U)),U(U(U),1*U(U)),U,U)><L,U><S,U> -}
6cebebd90950cba0920dce11b4fee8a5
  printMatrix :: CapDL.Matrix.Matrix -> GHC.Types.IO ()
  {- Arity: 2,
     Strictness: <S(S(S(S)L)S(S(S)L)LL),1*U(U(1*U(U),U(U)),U(1*U(U),U(U)),U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                CapDL.Matrix.printMatrix1
                  `cast`
                (<CapDL.Matrix.Matrix>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
c62cec48334c1f54f020530010b92d0e
  printMatrix1 ::
    CapDL.Matrix.Matrix
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2,
     Strictness: <S(S(S(S)L)S(S(S)L)LL),1*U(U(1*U(U),U(U)),U(1*U(U),U(U)),U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: CapDL.Matrix.Matrix)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Trans
                           (CapDL.Matrix.N:Matrix[0])
                           (Data.Array.IO.Internals.N:IOUArray[0] <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N <GHC.Types.Bool>_N)) of ww { Data.Array.Base.STUArray ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { (,) ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case ww2 of ww10 { (,) ww11 ww12 ->
                 case ww11 of ww13 { GHC.Types.I# ww14 ->
                 CapDL.Matrix.$wprintMatrix
                   ww9
                   ww7
                   ww14
                   ww12
                   ww3
                   ww4
                   w1 } } } } }) -}
8a89dcc83943d29445477cc3f13f258d
  showDotMatrix ::
    CapDL.Matrix.Matrix
    -> Data.Map.Base.Map
         GHC.Types.Int (GHC.Base.String, GHC.Base.Maybe GHC.Types.Word)
    -> GHC.Types.IO GHC.Base.String
  {- Arity: 3,
     Strictness: <S(S(S(S)L)S(LS(S))LL),1*U(U(1*U(U),U(U)),U(U(U),1*U(U)),U,U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                CapDL.Matrix.showDotMatrix1
                  `cast`
                (<CapDL.Matrix.Matrix>_R
                 ->_R <Data.Map.Base.Map
                         GHC.Types.Int (GHC.Base.String, GHC.Base.Maybe GHC.Types.Word)>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
22777b6df0cfd7c806be25094288f8ea
  showDotMatrix1 ::
    CapDL.Matrix.Matrix
    -> Data.Map.Base.Map
         GHC.Types.Int (GHC.Base.String, GHC.Base.Maybe GHC.Types.Word)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 3,
     Strictness: <S(S(S(S)L)S(LS(S))LL),1*U(U(1*U(U),U(U)),U(U(U),1*U(U)),U,U)><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: CapDL.Matrix.Matrix)
                   (w1 :: Data.Map.Base.Map
                            GHC.Types.Int (GHC.Base.String, GHC.Base.Maybe GHC.Types.Word))
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Trans
                           (CapDL.Matrix.N:Matrix[0])
                           (Data.Array.IO.Internals.N:IOUArray[0] <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N <GHC.Types.Bool>_N)) of ww { Data.Array.Base.STUArray ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { (,) ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case ww2 of ww10 { (,) ww11 ww12 ->
                 case ww12 of ww13 { GHC.Types.I# ww14 ->
                 CapDL.Matrix.$wshowDotMatrix
                   ww9
                   ww7
                   ww11
                   ww14
                   ww3
                   ww4
                   w1
                   w2 } } } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

