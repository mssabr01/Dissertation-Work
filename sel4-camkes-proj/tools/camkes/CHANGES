Revision history for CAmkES

For more information see the release notes at https://docs.sel4.systems/camkes_release/

This file should be word wrapped to 120 characters

---
Upcoming release

## Changes


## Upgrade Notes
---
camkes-3.7.0 2018-11-12
Using seL4 version 10.1.1
  
## Changes


## Upgrade Notes
---
camkes-3.6.0 2018-11-07
Using seL4 version 10.1.0
  
## Changes

* AARCH64 is now supported.
* CakeML components are now supported.
* Added `query` type to Camkes ADL to allow for querying plugins for component configuration values.
* Components can now make dtb queries to parse device information from dts files.
* Component definitions for serial and timer added on exynos5422, exynos5410, pc99.
* Preliminary support for Isabelle verification of generated capDL.
    - See cdl-refine-tests/README for more information
* Simplify and refactor the alignment and section linking policy for generated Camkes binaries.
* Dataports are now required to declare their size in the ADL.
* Templates now use seL4_IRQHandler instead of seL4_IRQControl, which is consistent with the seL4 API.
    - This change is BREAKING.
* Remove Kbuild based build system.
* Remove caches that optimised the Kbuild build system, which are not required with the new Cmake build system.
* Added virtqueue infrastructure to libsel4camkes, which allows virtio style queues between components.


## Upgrade Notes

* Any dataport definitions that did not specify a size must be updated to use a size.
* Any template that used seL4_IRQControl must be updated to use seL4_IRQHandler.
* Projects must now use the new Cmake based build system.

---
camkes-3.5.0 2018-05-28
Using seL4 version 10.0.0

This release is the last release with official support for Kbuild based projects.
This release and future releases use CMake as the build system for building applications.

## Changes
* Remove `crit` and `max_crit` fields from TCB CapDL Object
  These fields were previously added to support an earlier version of seL4-mcs that gave threads criticality fields.
  This feature was removed from seL4-mcs. This also means that the arguments to camkes-tool, `--default-criticality`
  and `--default-max-criticality`, have also been removed.

## Upgrade Notes
* Calls to `camkes.sh` that used the above arugments will need to be updated.

---
camkes-3.4.0 2018-04-18
Using seL4 version 9.0.1

## Changes


## Upgrade Notes
---
camkes-3.3.0 2018-04-11
Using seL4 version 9.0.0

## Changes
* Hardware dataport with large frame sizes issue has been fixed
* Bug fix: Enumerating connections for hierarchical components with custom connection types is now done correctly
* Bug fix: Data structure caching is now correctly invalidated between builds
* Initial CMake implementation for CAmkES.  See the CAmkES test apps for examples.

## Upgrade notes
* No special upgrade requirements.

## Known issues
* Hierarchical components that export dataport connectors create compilation errors as the templates cannot accurately
  tell that the connector of the parent component is exported from the child and no code should be generated.  A
  temporary workaround involves making the dataport connection explicitly available to the parent component.

---
camkes-3.2.0 2018-01-17
Using seL4 version 8.0.0

= Changes =
 * New ADL Syntax: Allow struct elements to have defaults.
    See the following ADL files for examples of Struct and Attribute behavior.
    https://github.com/SEL4PROJ/rumprun/blob/master/platform/sel4/camkes/rumprun.camkes
    https://github.com/seL4/camkes/tree/master/apps/structs
    https://github.com/seL4/camkes/tree/master/apps/attributes
 * Added experimental Rumprun support:
    This functionality is experimental and may not work as expected.  See the following examples:
    https://github.com/seL4/camkes/tree/master/apps/rumprun_ethernet
    https://github.com/seL4/camkes/tree/master/apps/rumprun_hello
    https://github.com/seL4/camkes/tree/master/apps/rumprun_pthreads
    https://github.com/seL4/camkes/tree/master/apps/rumprun_rust
    More information about the Rumprun unikernel on seL4 can be found here:
       https://research.csiro.au/tsblog/using-rump-kernels-to-run-unmodified-netbsd-drivers-on-sel4/
 * New Templates: Remote GDB debugging support
    On ia32 platforms a GDB server can be used to debug a component using the GDB server remote serial protocol.
    documentation: https://github.com/seL4/camkes-tool/blob/master/docs/DEBUG.md
 * Added "hardware_cached" attribute to hardware dataports
    This feature had been added to camkes-2.x.x but hadn't been forward ported to camkes-3.x.x.
    documentation: https://github.com/seL4/camkes-tool/blob/master/docs/index.md#cached-hardware-dataports

= Known issues =
 * Hardware dataports that are large enough to use larger frame sizes are currently broken.  There is an issue with 
large frame promotion and hardware dataports where the capDL loader is unable to map the promoted memory. This can be 
demonstrated by running the testhwdataportlrgpages app on either arm_testhwdataportlrgpages_defconfig or 
x86_testhwdataportlrgpages_defconfig configurations. If this functionality is required, hold off upgrading until this 
issue is fixed.

= Upgrade notes =
 * ADL files: ADL syntax changes in this release should not break any existing ADL files.
 * Templates: 
 	seL4HardwareMMIO template now has an option to map hardware memory as cached.  The default setting is uncached 
which is the same as the old behaviour.

---
For previous releases see https://docs.sel4.systems/camkes_release/
